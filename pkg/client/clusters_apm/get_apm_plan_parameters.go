// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by go-swagger; DO NOT EDIT.

package clusters_apm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetApmPlanParams creates a new GetApmPlanParams object
// with the default values initialized.
func NewGetApmPlanParams() *GetApmPlanParams {
	var (
		showPlanDefaultsDefault = bool(false)
	)
	return &GetApmPlanParams{
		ShowPlanDefaults: &showPlanDefaultsDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetApmPlanParamsWithTimeout creates a new GetApmPlanParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetApmPlanParamsWithTimeout(timeout time.Duration) *GetApmPlanParams {
	var (
		showPlanDefaultsDefault = bool(false)
	)
	return &GetApmPlanParams{
		ShowPlanDefaults: &showPlanDefaultsDefault,

		timeout: timeout,
	}
}

// NewGetApmPlanParamsWithContext creates a new GetApmPlanParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetApmPlanParamsWithContext(ctx context.Context) *GetApmPlanParams {
	var (
		showPlanDefaultsDefault = bool(false)
	)
	return &GetApmPlanParams{
		ShowPlanDefaults: &showPlanDefaultsDefault,

		Context: ctx,
	}
}

// NewGetApmPlanParamsWithHTTPClient creates a new GetApmPlanParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetApmPlanParamsWithHTTPClient(client *http.Client) *GetApmPlanParams {
	var (
		showPlanDefaultsDefault = bool(false)
	)
	return &GetApmPlanParams{
		ShowPlanDefaults: &showPlanDefaultsDefault,
		HTTPClient:       client,
	}
}

/*GetApmPlanParams contains all the parameters to send to the API endpoint
for the get apm plan operation typically these are written to a http.Request
*/
type GetApmPlanParams struct {

	/*ClusterID
	  The APM deployment identifier.

	*/
	ClusterID string
	/*ShowPlanDefaults
	  When plans are shown, includes the default values in the response. NOTE: This option results in large responses.

	*/
	ShowPlanDefaults *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get apm plan params
func (o *GetApmPlanParams) WithTimeout(timeout time.Duration) *GetApmPlanParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get apm plan params
func (o *GetApmPlanParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get apm plan params
func (o *GetApmPlanParams) WithContext(ctx context.Context) *GetApmPlanParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get apm plan params
func (o *GetApmPlanParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get apm plan params
func (o *GetApmPlanParams) WithHTTPClient(client *http.Client) *GetApmPlanParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get apm plan params
func (o *GetApmPlanParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the get apm plan params
func (o *GetApmPlanParams) WithClusterID(clusterID string) *GetApmPlanParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the get apm plan params
func (o *GetApmPlanParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithShowPlanDefaults adds the showPlanDefaults to the get apm plan params
func (o *GetApmPlanParams) WithShowPlanDefaults(showPlanDefaults *bool) *GetApmPlanParams {
	o.SetShowPlanDefaults(showPlanDefaults)
	return o
}

// SetShowPlanDefaults adds the showPlanDefaults to the get apm plan params
func (o *GetApmPlanParams) SetShowPlanDefaults(showPlanDefaults *bool) {
	o.ShowPlanDefaults = showPlanDefaults
}

// WriteToRequest writes these params to a swagger request
func (o *GetApmPlanParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cluster_id
	if err := r.SetPathParam("cluster_id", o.ClusterID); err != nil {
		return err
	}

	if o.ShowPlanDefaults != nil {

		// query param show_plan_defaults
		var qrShowPlanDefaults bool
		if o.ShowPlanDefaults != nil {
			qrShowPlanDefaults = *o.ShowPlanDefaults
		}
		qShowPlanDefaults := swag.FormatBool(qrShowPlanDefaults)
		if qShowPlanDefaults != "" {
			if err := r.SetQueryParam("show_plan_defaults", qShowPlanDefaults); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
