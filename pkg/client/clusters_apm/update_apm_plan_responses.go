// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by go-swagger; DO NOT EDIT.

package clusters_apm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/elastic/cloud-sdk-go/pkg/models"
)

// UpdateApmPlanReader is a Reader for the UpdateApmPlan structure.
type UpdateApmPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateApmPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateApmPlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewUpdateApmPlanAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateApmPlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateApmPlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 449:
		result := NewUpdateApmPlanRetryWith()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateApmPlanOK creates a UpdateApmPlanOK with default headers values
func NewUpdateApmPlanOK() *UpdateApmPlanOK {
	return &UpdateApmPlanOK{}
}

/* UpdateApmPlanOK describes a response with status code 200, with default header values.

The APM server plan is valid. The return object contains an internal representation of the plan that you can use for debugging.
*/
type UpdateApmPlanOK struct {
	Payload *models.ApmCrudResponse
}

func (o *UpdateApmPlanOK) Error() string {
	return fmt.Sprintf("[POST /clusters/apm/{cluster_id}/plan][%d] updateApmPlanOK  %+v", 200, o.Payload)
}
func (o *UpdateApmPlanOK) GetPayload() *models.ApmCrudResponse {
	return o.Payload
}

func (o *UpdateApmPlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApmCrudResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateApmPlanAccepted creates a UpdateApmPlanAccepted with default headers values
func NewUpdateApmPlanAccepted() *UpdateApmPlanAccepted {
	return &UpdateApmPlanAccepted{}
}

/* UpdateApmPlanAccepted describes a response with status code 202, with default header values.

The APM server plan is valid and the plan update is in progress.
*/
type UpdateApmPlanAccepted struct {
	Payload *models.ApmCrudResponse
}

func (o *UpdateApmPlanAccepted) Error() string {
	return fmt.Sprintf("[POST /clusters/apm/{cluster_id}/plan][%d] updateApmPlanAccepted  %+v", 202, o.Payload)
}
func (o *UpdateApmPlanAccepted) GetPayload() *models.ApmCrudResponse {
	return o.Payload
}

func (o *UpdateApmPlanAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApmCrudResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateApmPlanBadRequest creates a UpdateApmPlanBadRequest with default headers values
func NewUpdateApmPlanBadRequest() *UpdateApmPlanBadRequest {
	return &UpdateApmPlanBadRequest{}
}

/* UpdateApmPlanBadRequest describes a response with status code 400, with default header values.

The APM server plan contains errors. (code: 'clusters.cluster_invalid_plan' and 'clusters.plan_feature_not_implemented')
*/
type UpdateApmPlanBadRequest struct {
	Payload *models.BasicFailedReply
}

func (o *UpdateApmPlanBadRequest) Error() string {
	return fmt.Sprintf("[POST /clusters/apm/{cluster_id}/plan][%d] updateApmPlanBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateApmPlanBadRequest) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *UpdateApmPlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateApmPlanNotFound creates a UpdateApmPlanNotFound with default headers values
func NewUpdateApmPlanNotFound() *UpdateApmPlanNotFound {
	return &UpdateApmPlanNotFound{}
}

/* UpdateApmPlanNotFound describes a response with status code 404, with default header values.

The {cluster_id} can't be found. (code: 'clusters.cluster_not_found')
*/
type UpdateApmPlanNotFound struct {
	Payload *models.BasicFailedReply
}

func (o *UpdateApmPlanNotFound) Error() string {
	return fmt.Sprintf("[POST /clusters/apm/{cluster_id}/plan][%d] updateApmPlanNotFound  %+v", 404, o.Payload)
}
func (o *UpdateApmPlanNotFound) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *UpdateApmPlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateApmPlanRetryWith creates a UpdateApmPlanRetryWith with default headers values
func NewUpdateApmPlanRetryWith() *UpdateApmPlanRetryWith {
	return &UpdateApmPlanRetryWith{}
}

/* UpdateApmPlanRetryWith describes a response with status code 449, with default header values.

Elevated permissions are required. (code: '"root.needs_elevated_permissions"')
*/
type UpdateApmPlanRetryWith struct {
	Payload *models.BasicFailedReply
}

func (o *UpdateApmPlanRetryWith) Error() string {
	return fmt.Sprintf("[POST /clusters/apm/{cluster_id}/plan][%d] updateApmPlanRetryWith  %+v", 449, o.Payload)
}
func (o *UpdateApmPlanRetryWith) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *UpdateApmPlanRetryWith) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
