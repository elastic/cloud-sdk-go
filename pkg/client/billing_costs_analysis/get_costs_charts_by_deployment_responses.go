// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by go-swagger; DO NOT EDIT.

package billing_costs_analysis

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/elastic/cloud-sdk-go/pkg/models"
)

// GetCostsChartsByDeploymentReader is a Reader for the GetCostsChartsByDeployment structure.
type GetCostsChartsByDeploymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCostsChartsByDeploymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCostsChartsByDeploymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCostsChartsByDeploymentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCostsChartsByDeploymentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCostsChartsByDeploymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCostsChartsByDeploymentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCostsChartsByDeploymentOK creates a GetCostsChartsByDeploymentOK with default headers values
func NewGetCostsChartsByDeploymentOK() *GetCostsChartsByDeploymentOK {
	return &GetCostsChartsByDeploymentOK{}
}

/*
GetCostsChartsByDeploymentOK describes a response with status code 200, with default header values.

The usage charts of a deployment.
*/
type GetCostsChartsByDeploymentOK struct {
	Payload *models.ChartItems
}

// IsSuccess returns true when this get costs charts by deployment o k response has a 2xx status code
func (o *GetCostsChartsByDeploymentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get costs charts by deployment o k response has a 3xx status code
func (o *GetCostsChartsByDeploymentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get costs charts by deployment o k response has a 4xx status code
func (o *GetCostsChartsByDeploymentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get costs charts by deployment o k response has a 5xx status code
func (o *GetCostsChartsByDeploymentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get costs charts by deployment o k response a status code equal to that given
func (o *GetCostsChartsByDeploymentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get costs charts by deployment o k response
func (o *GetCostsChartsByDeploymentOK) Code() int {
	return 200
}

func (o *GetCostsChartsByDeploymentOK) Error() string {
	return fmt.Sprintf("[GET /billing/costs/{organization_id}/deployments/{deployment_id}/charts][%d] getCostsChartsByDeploymentOK  %+v", 200, o.Payload)
}

func (o *GetCostsChartsByDeploymentOK) String() string {
	return fmt.Sprintf("[GET /billing/costs/{organization_id}/deployments/{deployment_id}/charts][%d] getCostsChartsByDeploymentOK  %+v", 200, o.Payload)
}

func (o *GetCostsChartsByDeploymentOK) GetPayload() *models.ChartItems {
	return o.Payload
}

func (o *GetCostsChartsByDeploymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChartItems)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCostsChartsByDeploymentBadRequest creates a GetCostsChartsByDeploymentBadRequest with default headers values
func NewGetCostsChartsByDeploymentBadRequest() *GetCostsChartsByDeploymentBadRequest {
	return &GetCostsChartsByDeploymentBadRequest{}
}

/*
GetCostsChartsByDeploymentBadRequest describes a response with status code 400, with default header values.

The specified date range is invalid. (code: `costs.invalid_date_range`)
*/
type GetCostsChartsByDeploymentBadRequest struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this get costs charts by deployment bad request response has a 2xx status code
func (o *GetCostsChartsByDeploymentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get costs charts by deployment bad request response has a 3xx status code
func (o *GetCostsChartsByDeploymentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get costs charts by deployment bad request response has a 4xx status code
func (o *GetCostsChartsByDeploymentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get costs charts by deployment bad request response has a 5xx status code
func (o *GetCostsChartsByDeploymentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get costs charts by deployment bad request response a status code equal to that given
func (o *GetCostsChartsByDeploymentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get costs charts by deployment bad request response
func (o *GetCostsChartsByDeploymentBadRequest) Code() int {
	return 400
}

func (o *GetCostsChartsByDeploymentBadRequest) Error() string {
	return fmt.Sprintf("[GET /billing/costs/{organization_id}/deployments/{deployment_id}/charts][%d] getCostsChartsByDeploymentBadRequest  %+v", 400, o.Payload)
}

func (o *GetCostsChartsByDeploymentBadRequest) String() string {
	return fmt.Sprintf("[GET /billing/costs/{organization_id}/deployments/{deployment_id}/charts][%d] getCostsChartsByDeploymentBadRequest  %+v", 400, o.Payload)
}

func (o *GetCostsChartsByDeploymentBadRequest) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *GetCostsChartsByDeploymentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCostsChartsByDeploymentForbidden creates a GetCostsChartsByDeploymentForbidden with default headers values
func NewGetCostsChartsByDeploymentForbidden() *GetCostsChartsByDeploymentForbidden {
	return &GetCostsChartsByDeploymentForbidden{}
}

/*
GetCostsChartsByDeploymentForbidden describes a response with status code 403, with default header values.

The current user does not have access to the requested organization. (code: `organization.invalid_access`)
*/
type GetCostsChartsByDeploymentForbidden struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this get costs charts by deployment forbidden response has a 2xx status code
func (o *GetCostsChartsByDeploymentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get costs charts by deployment forbidden response has a 3xx status code
func (o *GetCostsChartsByDeploymentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get costs charts by deployment forbidden response has a 4xx status code
func (o *GetCostsChartsByDeploymentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get costs charts by deployment forbidden response has a 5xx status code
func (o *GetCostsChartsByDeploymentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get costs charts by deployment forbidden response a status code equal to that given
func (o *GetCostsChartsByDeploymentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get costs charts by deployment forbidden response
func (o *GetCostsChartsByDeploymentForbidden) Code() int {
	return 403
}

func (o *GetCostsChartsByDeploymentForbidden) Error() string {
	return fmt.Sprintf("[GET /billing/costs/{organization_id}/deployments/{deployment_id}/charts][%d] getCostsChartsByDeploymentForbidden  %+v", 403, o.Payload)
}

func (o *GetCostsChartsByDeploymentForbidden) String() string {
	return fmt.Sprintf("[GET /billing/costs/{organization_id}/deployments/{deployment_id}/charts][%d] getCostsChartsByDeploymentForbidden  %+v", 403, o.Payload)
}

func (o *GetCostsChartsByDeploymentForbidden) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *GetCostsChartsByDeploymentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCostsChartsByDeploymentNotFound creates a GetCostsChartsByDeploymentNotFound with default headers values
func NewGetCostsChartsByDeploymentNotFound() *GetCostsChartsByDeploymentNotFound {
	return &GetCostsChartsByDeploymentNotFound{}
}

/*
GetCostsChartsByDeploymentNotFound describes a response with status code 404, with default header values.

Organization not found. (code: `organization.not_found`)
*/
type GetCostsChartsByDeploymentNotFound struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this get costs charts by deployment not found response has a 2xx status code
func (o *GetCostsChartsByDeploymentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get costs charts by deployment not found response has a 3xx status code
func (o *GetCostsChartsByDeploymentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get costs charts by deployment not found response has a 4xx status code
func (o *GetCostsChartsByDeploymentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get costs charts by deployment not found response has a 5xx status code
func (o *GetCostsChartsByDeploymentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get costs charts by deployment not found response a status code equal to that given
func (o *GetCostsChartsByDeploymentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get costs charts by deployment not found response
func (o *GetCostsChartsByDeploymentNotFound) Code() int {
	return 404
}

func (o *GetCostsChartsByDeploymentNotFound) Error() string {
	return fmt.Sprintf("[GET /billing/costs/{organization_id}/deployments/{deployment_id}/charts][%d] getCostsChartsByDeploymentNotFound  %+v", 404, o.Payload)
}

func (o *GetCostsChartsByDeploymentNotFound) String() string {
	return fmt.Sprintf("[GET /billing/costs/{organization_id}/deployments/{deployment_id}/charts][%d] getCostsChartsByDeploymentNotFound  %+v", 404, o.Payload)
}

func (o *GetCostsChartsByDeploymentNotFound) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *GetCostsChartsByDeploymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCostsChartsByDeploymentInternalServerError creates a GetCostsChartsByDeploymentInternalServerError with default headers values
func NewGetCostsChartsByDeploymentInternalServerError() *GetCostsChartsByDeploymentInternalServerError {
	return &GetCostsChartsByDeploymentInternalServerError{}
}

/*
GetCostsChartsByDeploymentInternalServerError describes a response with status code 500, with default header values.

Error fetching the itemized costs for the organization. (code: `billing_service.failed_request`)
*/
type GetCostsChartsByDeploymentInternalServerError struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this get costs charts by deployment internal server error response has a 2xx status code
func (o *GetCostsChartsByDeploymentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get costs charts by deployment internal server error response has a 3xx status code
func (o *GetCostsChartsByDeploymentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get costs charts by deployment internal server error response has a 4xx status code
func (o *GetCostsChartsByDeploymentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get costs charts by deployment internal server error response has a 5xx status code
func (o *GetCostsChartsByDeploymentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get costs charts by deployment internal server error response a status code equal to that given
func (o *GetCostsChartsByDeploymentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get costs charts by deployment internal server error response
func (o *GetCostsChartsByDeploymentInternalServerError) Code() int {
	return 500
}

func (o *GetCostsChartsByDeploymentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /billing/costs/{organization_id}/deployments/{deployment_id}/charts][%d] getCostsChartsByDeploymentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCostsChartsByDeploymentInternalServerError) String() string {
	return fmt.Sprintf("[GET /billing/costs/{organization_id}/deployments/{deployment_id}/charts][%d] getCostsChartsByDeploymentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCostsChartsByDeploymentInternalServerError) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *GetCostsChartsByDeploymentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
