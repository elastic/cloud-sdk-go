// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by go-swagger; DO NOT EDIT.

package platform_infrastructure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/elastic/cloud-sdk-go/pkg/models"
)

// AddBlueprinterBlessingReader is a Reader for the AddBlueprinterBlessing structure.
type AddBlueprinterBlessingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddBlueprinterBlessingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddBlueprinterBlessingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewAddBlueprinterBlessingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddBlueprinterBlessingConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddBlueprinterBlessingOK creates a AddBlueprinterBlessingOK with default headers values
func NewAddBlueprinterBlessingOK() *AddBlueprinterBlessingOK {
	return &AddBlueprinterBlessingOK{}
}

/*
AddBlueprinterBlessingOK describes a response with status code 200, with default header values.

Blessing added successfully.
*/
type AddBlueprinterBlessingOK struct {
	Payload *models.RoleAggregate
}

// IsSuccess returns true when this add blueprinter blessing o k response has a 2xx status code
func (o *AddBlueprinterBlessingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add blueprinter blessing o k response has a 3xx status code
func (o *AddBlueprinterBlessingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add blueprinter blessing o k response has a 4xx status code
func (o *AddBlueprinterBlessingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add blueprinter blessing o k response has a 5xx status code
func (o *AddBlueprinterBlessingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add blueprinter blessing o k response a status code equal to that given
func (o *AddBlueprinterBlessingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add blueprinter blessing o k response
func (o *AddBlueprinterBlessingOK) Code() int {
	return 200
}

func (o *AddBlueprinterBlessingOK) Error() string {
	return fmt.Sprintf("[PUT /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}/blessings/{runner_id}][%d] addBlueprinterBlessingOK  %+v", 200, o.Payload)
}

func (o *AddBlueprinterBlessingOK) String() string {
	return fmt.Sprintf("[PUT /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}/blessings/{runner_id}][%d] addBlueprinterBlessingOK  %+v", 200, o.Payload)
}

func (o *AddBlueprinterBlessingOK) GetPayload() *models.RoleAggregate {
	return o.Payload
}

func (o *AddBlueprinterBlessingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoleAggregate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddBlueprinterBlessingNotFound creates a AddBlueprinterBlessingNotFound with default headers values
func NewAddBlueprinterBlessingNotFound() *AddBlueprinterBlessingNotFound {
	return &AddBlueprinterBlessingNotFound{}
}

/*
AddBlueprinterBlessingNotFound describes a response with status code 404, with default header values.

The role can't be found. (code: `roles.not_found`)
*/
type AddBlueprinterBlessingNotFound struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this add blueprinter blessing not found response has a 2xx status code
func (o *AddBlueprinterBlessingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add blueprinter blessing not found response has a 3xx status code
func (o *AddBlueprinterBlessingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add blueprinter blessing not found response has a 4xx status code
func (o *AddBlueprinterBlessingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add blueprinter blessing not found response has a 5xx status code
func (o *AddBlueprinterBlessingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add blueprinter blessing not found response a status code equal to that given
func (o *AddBlueprinterBlessingNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add blueprinter blessing not found response
func (o *AddBlueprinterBlessingNotFound) Code() int {
	return 404
}

func (o *AddBlueprinterBlessingNotFound) Error() string {
	return fmt.Sprintf("[PUT /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}/blessings/{runner_id}][%d] addBlueprinterBlessingNotFound  %+v", 404, o.Payload)
}

func (o *AddBlueprinterBlessingNotFound) String() string {
	return fmt.Sprintf("[PUT /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}/blessings/{runner_id}][%d] addBlueprinterBlessingNotFound  %+v", 404, o.Payload)
}

func (o *AddBlueprinterBlessingNotFound) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *AddBlueprinterBlessingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddBlueprinterBlessingConflict creates a AddBlueprinterBlessingConflict with default headers values
func NewAddBlueprinterBlessingConflict() *AddBlueprinterBlessingConflict {
	return &AddBlueprinterBlessingConflict{}
}

/*
AddBlueprinterBlessingConflict describes a response with status code 409, with default header values.

Your request failed because the specified version does not match the persisted version. (code: `roles.version_conflict`)
*/
type AddBlueprinterBlessingConflict struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this add blueprinter blessing conflict response has a 2xx status code
func (o *AddBlueprinterBlessingConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add blueprinter blessing conflict response has a 3xx status code
func (o *AddBlueprinterBlessingConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add blueprinter blessing conflict response has a 4xx status code
func (o *AddBlueprinterBlessingConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this add blueprinter blessing conflict response has a 5xx status code
func (o *AddBlueprinterBlessingConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this add blueprinter blessing conflict response a status code equal to that given
func (o *AddBlueprinterBlessingConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the add blueprinter blessing conflict response
func (o *AddBlueprinterBlessingConflict) Code() int {
	return 409
}

func (o *AddBlueprinterBlessingConflict) Error() string {
	return fmt.Sprintf("[PUT /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}/blessings/{runner_id}][%d] addBlueprinterBlessingConflict  %+v", 409, o.Payload)
}

func (o *AddBlueprinterBlessingConflict) String() string {
	return fmt.Sprintf("[PUT /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}/blessings/{runner_id}][%d] addBlueprinterBlessingConflict  %+v", 409, o.Payload)
}

func (o *AddBlueprinterBlessingConflict) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *AddBlueprinterBlessingConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
