// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by go-swagger; DO NOT EDIT.

package platform_infrastructure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/elastic/cloud-sdk-go/pkg/models"
)

// StopConstructorMaintenanceModeReader is a Reader for the StopConstructorMaintenanceMode structure.
type StopConstructorMaintenanceModeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StopConstructorMaintenanceModeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewStopConstructorMaintenanceModeAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewStopConstructorMaintenanceModeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStopConstructorMaintenanceModeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStopConstructorMaintenanceModeAccepted creates a StopConstructorMaintenanceModeAccepted with default headers values
func NewStopConstructorMaintenanceModeAccepted() *StopConstructorMaintenanceModeAccepted {
	return &StopConstructorMaintenanceModeAccepted{}
}

/*
StopConstructorMaintenanceModeAccepted describes a response with status code 202, with default header values.

The stop maintenance mode command was issued successfully
*/
type StopConstructorMaintenanceModeAccepted struct {
	Payload models.EmptyResponse
}

// IsSuccess returns true when this stop constructor maintenance mode accepted response has a 2xx status code
func (o *StopConstructorMaintenanceModeAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this stop constructor maintenance mode accepted response has a 3xx status code
func (o *StopConstructorMaintenanceModeAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stop constructor maintenance mode accepted response has a 4xx status code
func (o *StopConstructorMaintenanceModeAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this stop constructor maintenance mode accepted response has a 5xx status code
func (o *StopConstructorMaintenanceModeAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this stop constructor maintenance mode accepted response a status code equal to that given
func (o *StopConstructorMaintenanceModeAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the stop constructor maintenance mode accepted response
func (o *StopConstructorMaintenanceModeAccepted) Code() int {
	return 202
}

func (o *StopConstructorMaintenanceModeAccepted) Error() string {
	return fmt.Sprintf("[POST /platform/infrastructure/constructors/{constructor_id}/maintenance-mode/_stop][%d] stopConstructorMaintenanceModeAccepted  %+v", 202, o.Payload)
}

func (o *StopConstructorMaintenanceModeAccepted) String() string {
	return fmt.Sprintf("[POST /platform/infrastructure/constructors/{constructor_id}/maintenance-mode/_stop][%d] stopConstructorMaintenanceModeAccepted  %+v", 202, o.Payload)
}

func (o *StopConstructorMaintenanceModeAccepted) GetPayload() models.EmptyResponse {
	return o.Payload
}

func (o *StopConstructorMaintenanceModeAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopConstructorMaintenanceModeForbidden creates a StopConstructorMaintenanceModeForbidden with default headers values
func NewStopConstructorMaintenanceModeForbidden() *StopConstructorMaintenanceModeForbidden {
	return &StopConstructorMaintenanceModeForbidden{}
}

/*
StopConstructorMaintenanceModeForbidden describes a response with status code 403, with default header values.

The stop maintenance mode command was prohibited for the given constructor. (code: `constructors.command_prohibited`)
*/
type StopConstructorMaintenanceModeForbidden struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this stop constructor maintenance mode forbidden response has a 2xx status code
func (o *StopConstructorMaintenanceModeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stop constructor maintenance mode forbidden response has a 3xx status code
func (o *StopConstructorMaintenanceModeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stop constructor maintenance mode forbidden response has a 4xx status code
func (o *StopConstructorMaintenanceModeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this stop constructor maintenance mode forbidden response has a 5xx status code
func (o *StopConstructorMaintenanceModeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this stop constructor maintenance mode forbidden response a status code equal to that given
func (o *StopConstructorMaintenanceModeForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the stop constructor maintenance mode forbidden response
func (o *StopConstructorMaintenanceModeForbidden) Code() int {
	return 403
}

func (o *StopConstructorMaintenanceModeForbidden) Error() string {
	return fmt.Sprintf("[POST /platform/infrastructure/constructors/{constructor_id}/maintenance-mode/_stop][%d] stopConstructorMaintenanceModeForbidden  %+v", 403, o.Payload)
}

func (o *StopConstructorMaintenanceModeForbidden) String() string {
	return fmt.Sprintf("[POST /platform/infrastructure/constructors/{constructor_id}/maintenance-mode/_stop][%d] stopConstructorMaintenanceModeForbidden  %+v", 403, o.Payload)
}

func (o *StopConstructorMaintenanceModeForbidden) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *StopConstructorMaintenanceModeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopConstructorMaintenanceModeNotFound creates a StopConstructorMaintenanceModeNotFound with default headers values
func NewStopConstructorMaintenanceModeNotFound() *StopConstructorMaintenanceModeNotFound {
	return &StopConstructorMaintenanceModeNotFound{}
}

/*
StopConstructorMaintenanceModeNotFound describes a response with status code 404, with default header values.

The constructor specified by {constructor_id} cannot be found. (code: `constructors.constructor_not_found`)
*/
type StopConstructorMaintenanceModeNotFound struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this stop constructor maintenance mode not found response has a 2xx status code
func (o *StopConstructorMaintenanceModeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stop constructor maintenance mode not found response has a 3xx status code
func (o *StopConstructorMaintenanceModeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stop constructor maintenance mode not found response has a 4xx status code
func (o *StopConstructorMaintenanceModeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this stop constructor maintenance mode not found response has a 5xx status code
func (o *StopConstructorMaintenanceModeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this stop constructor maintenance mode not found response a status code equal to that given
func (o *StopConstructorMaintenanceModeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the stop constructor maintenance mode not found response
func (o *StopConstructorMaintenanceModeNotFound) Code() int {
	return 404
}

func (o *StopConstructorMaintenanceModeNotFound) Error() string {
	return fmt.Sprintf("[POST /platform/infrastructure/constructors/{constructor_id}/maintenance-mode/_stop][%d] stopConstructorMaintenanceModeNotFound  %+v", 404, o.Payload)
}

func (o *StopConstructorMaintenanceModeNotFound) String() string {
	return fmt.Sprintf("[POST /platform/infrastructure/constructors/{constructor_id}/maintenance-mode/_stop][%d] stopConstructorMaintenanceModeNotFound  %+v", 404, o.Payload)
}

func (o *StopConstructorMaintenanceModeNotFound) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *StopConstructorMaintenanceModeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
