// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by go-swagger; DO NOT EDIT.

package platform_infrastructure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/elastic/cloud-sdk-go/pkg/models"
)

// DeleteBlueprinterRoleReader is a Reader for the DeleteBlueprinterRole structure.
type DeleteBlueprinterRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBlueprinterRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteBlueprinterRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteBlueprinterRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteBlueprinterRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteBlueprinterRoleConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteBlueprinterRoleOK creates a DeleteBlueprinterRoleOK with default headers values
func NewDeleteBlueprinterRoleOK() *DeleteBlueprinterRoleOK {
	return &DeleteBlueprinterRoleOK{}
}

/*
DeleteBlueprinterRoleOK describes a response with status code 200, with default header values.

The role was successfully deleted.
*/
type DeleteBlueprinterRoleOK struct {
	Payload models.EmptyResponse
}

// IsSuccess returns true when this delete blueprinter role o k response has a 2xx status code
func (o *DeleteBlueprinterRoleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete blueprinter role o k response has a 3xx status code
func (o *DeleteBlueprinterRoleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete blueprinter role o k response has a 4xx status code
func (o *DeleteBlueprinterRoleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete blueprinter role o k response has a 5xx status code
func (o *DeleteBlueprinterRoleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete blueprinter role o k response a status code equal to that given
func (o *DeleteBlueprinterRoleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete blueprinter role o k response
func (o *DeleteBlueprinterRoleOK) Code() int {
	return 200
}

func (o *DeleteBlueprinterRoleOK) Error() string {
	return fmt.Sprintf("[DELETE /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}][%d] deleteBlueprinterRoleOK  %+v", 200, o.Payload)
}

func (o *DeleteBlueprinterRoleOK) String() string {
	return fmt.Sprintf("[DELETE /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}][%d] deleteBlueprinterRoleOK  %+v", 200, o.Payload)
}

func (o *DeleteBlueprinterRoleOK) GetPayload() models.EmptyResponse {
	return o.Payload
}

func (o *DeleteBlueprinterRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBlueprinterRoleBadRequest creates a DeleteBlueprinterRoleBadRequest with default headers values
func NewDeleteBlueprinterRoleBadRequest() *DeleteBlueprinterRoleBadRequest {
	return &DeleteBlueprinterRoleBadRequest{}
}

/*
DeleteBlueprinterRoleBadRequest describes a response with status code 400, with default header values.

The role is currently running container sets. (code: `roles.in_use`)
*/
type DeleteBlueprinterRoleBadRequest struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this delete blueprinter role bad request response has a 2xx status code
func (o *DeleteBlueprinterRoleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete blueprinter role bad request response has a 3xx status code
func (o *DeleteBlueprinterRoleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete blueprinter role bad request response has a 4xx status code
func (o *DeleteBlueprinterRoleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete blueprinter role bad request response has a 5xx status code
func (o *DeleteBlueprinterRoleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete blueprinter role bad request response a status code equal to that given
func (o *DeleteBlueprinterRoleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete blueprinter role bad request response
func (o *DeleteBlueprinterRoleBadRequest) Code() int {
	return 400
}

func (o *DeleteBlueprinterRoleBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}][%d] deleteBlueprinterRoleBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteBlueprinterRoleBadRequest) String() string {
	return fmt.Sprintf("[DELETE /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}][%d] deleteBlueprinterRoleBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteBlueprinterRoleBadRequest) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *DeleteBlueprinterRoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBlueprinterRoleNotFound creates a DeleteBlueprinterRoleNotFound with default headers values
func NewDeleteBlueprinterRoleNotFound() *DeleteBlueprinterRoleNotFound {
	return &DeleteBlueprinterRoleNotFound{}
}

/*
DeleteBlueprinterRoleNotFound describes a response with status code 404, with default header values.

The role can't be found. (code: `roles.not_found`)
*/
type DeleteBlueprinterRoleNotFound struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this delete blueprinter role not found response has a 2xx status code
func (o *DeleteBlueprinterRoleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete blueprinter role not found response has a 3xx status code
func (o *DeleteBlueprinterRoleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete blueprinter role not found response has a 4xx status code
func (o *DeleteBlueprinterRoleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete blueprinter role not found response has a 5xx status code
func (o *DeleteBlueprinterRoleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete blueprinter role not found response a status code equal to that given
func (o *DeleteBlueprinterRoleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete blueprinter role not found response
func (o *DeleteBlueprinterRoleNotFound) Code() int {
	return 404
}

func (o *DeleteBlueprinterRoleNotFound) Error() string {
	return fmt.Sprintf("[DELETE /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}][%d] deleteBlueprinterRoleNotFound  %+v", 404, o.Payload)
}

func (o *DeleteBlueprinterRoleNotFound) String() string {
	return fmt.Sprintf("[DELETE /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}][%d] deleteBlueprinterRoleNotFound  %+v", 404, o.Payload)
}

func (o *DeleteBlueprinterRoleNotFound) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *DeleteBlueprinterRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBlueprinterRoleConflict creates a DeleteBlueprinterRoleConflict with default headers values
func NewDeleteBlueprinterRoleConflict() *DeleteBlueprinterRoleConflict {
	return &DeleteBlueprinterRoleConflict{}
}

/*
DeleteBlueprinterRoleConflict describes a response with status code 409, with default header values.

Your request failed because the specified version does not match the persisted version. (code: `roles.version_conflict`)
*/
type DeleteBlueprinterRoleConflict struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this delete blueprinter role conflict response has a 2xx status code
func (o *DeleteBlueprinterRoleConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete blueprinter role conflict response has a 3xx status code
func (o *DeleteBlueprinterRoleConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete blueprinter role conflict response has a 4xx status code
func (o *DeleteBlueprinterRoleConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete blueprinter role conflict response has a 5xx status code
func (o *DeleteBlueprinterRoleConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete blueprinter role conflict response a status code equal to that given
func (o *DeleteBlueprinterRoleConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the delete blueprinter role conflict response
func (o *DeleteBlueprinterRoleConflict) Code() int {
	return 409
}

func (o *DeleteBlueprinterRoleConflict) Error() string {
	return fmt.Sprintf("[DELETE /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}][%d] deleteBlueprinterRoleConflict  %+v", 409, o.Payload)
}

func (o *DeleteBlueprinterRoleConflict) String() string {
	return fmt.Sprintf("[DELETE /platform/infrastructure/blueprinter/roles/{blueprinter_role_id}][%d] deleteBlueprinterRoleConflict  %+v", 409, o.Payload)
}

func (o *DeleteBlueprinterRoleConflict) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *DeleteBlueprinterRoleConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
