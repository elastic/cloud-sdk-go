// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/elastic/cloud-sdk-go/pkg/models"
)

// CreateOrganizationInvitationsReader is a Reader for the CreateOrganizationInvitations structure.
type CreateOrganizationInvitationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOrganizationInvitationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateOrganizationInvitationsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateOrganizationInvitationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateOrganizationInvitationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateOrganizationInvitationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateOrganizationInvitationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateOrganizationInvitationsCreated creates a CreateOrganizationInvitationsCreated with default headers values
func NewCreateOrganizationInvitationsCreated() *CreateOrganizationInvitationsCreated {
	return &CreateOrganizationInvitationsCreated{}
}

/*
CreateOrganizationInvitationsCreated describes a response with status code 201, with default header values.

Organization invitations created successfully
*/
type CreateOrganizationInvitationsCreated struct {
	Payload *models.OrganizationInvitations
}

// IsSuccess returns true when this create organization invitations created response has a 2xx status code
func (o *CreateOrganizationInvitationsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create organization invitations created response has a 3xx status code
func (o *CreateOrganizationInvitationsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create organization invitations created response has a 4xx status code
func (o *CreateOrganizationInvitationsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create organization invitations created response has a 5xx status code
func (o *CreateOrganizationInvitationsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create organization invitations created response a status code equal to that given
func (o *CreateOrganizationInvitationsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create organization invitations created response
func (o *CreateOrganizationInvitationsCreated) Code() int {
	return 201
}

func (o *CreateOrganizationInvitationsCreated) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_id}/invitations][%d] createOrganizationInvitationsCreated  %+v", 201, o.Payload)
}

func (o *CreateOrganizationInvitationsCreated) String() string {
	return fmt.Sprintf("[POST /organizations/{organization_id}/invitations][%d] createOrganizationInvitationsCreated  %+v", 201, o.Payload)
}

func (o *CreateOrganizationInvitationsCreated) GetPayload() *models.OrganizationInvitations {
	return o.Payload
}

func (o *CreateOrganizationInvitationsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrganizationInvitations)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOrganizationInvitationsBadRequest creates a CreateOrganizationInvitationsBadRequest with default headers values
func NewCreateOrganizationInvitationsBadRequest() *CreateOrganizationInvitationsBadRequest {
	return &CreateOrganizationInvitationsBadRequest{}
}

/*
	CreateOrganizationInvitationsBadRequest describes a response with status code 400, with default header values.

	* Invitation email was not valid. (code: `organization.invitation_invalid_email`)

* Invitation already sent. (code: `organization.invitation_already_exists`)
* User already belongs to organization. (code: `organization.user_organization_already_belongs`)
*/
type CreateOrganizationInvitationsBadRequest struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this create organization invitations bad request response has a 2xx status code
func (o *CreateOrganizationInvitationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create organization invitations bad request response has a 3xx status code
func (o *CreateOrganizationInvitationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create organization invitations bad request response has a 4xx status code
func (o *CreateOrganizationInvitationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create organization invitations bad request response has a 5xx status code
func (o *CreateOrganizationInvitationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create organization invitations bad request response a status code equal to that given
func (o *CreateOrganizationInvitationsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create organization invitations bad request response
func (o *CreateOrganizationInvitationsBadRequest) Code() int {
	return 400
}

func (o *CreateOrganizationInvitationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_id}/invitations][%d] createOrganizationInvitationsBadRequest  %+v", 400, o.Payload)
}

func (o *CreateOrganizationInvitationsBadRequest) String() string {
	return fmt.Sprintf("[POST /organizations/{organization_id}/invitations][%d] createOrganizationInvitationsBadRequest  %+v", 400, o.Payload)
}

func (o *CreateOrganizationInvitationsBadRequest) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *CreateOrganizationInvitationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOrganizationInvitationsForbidden creates a CreateOrganizationInvitationsForbidden with default headers values
func NewCreateOrganizationInvitationsForbidden() *CreateOrganizationInvitationsForbidden {
	return &CreateOrganizationInvitationsForbidden{}
}

/*
CreateOrganizationInvitationsForbidden describes a response with status code 403, with default header values.

The current user authentication is not valid. (code: `root.invalid_authentication`)
*/
type CreateOrganizationInvitationsForbidden struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this create organization invitations forbidden response has a 2xx status code
func (o *CreateOrganizationInvitationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create organization invitations forbidden response has a 3xx status code
func (o *CreateOrganizationInvitationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create organization invitations forbidden response has a 4xx status code
func (o *CreateOrganizationInvitationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create organization invitations forbidden response has a 5xx status code
func (o *CreateOrganizationInvitationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create organization invitations forbidden response a status code equal to that given
func (o *CreateOrganizationInvitationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create organization invitations forbidden response
func (o *CreateOrganizationInvitationsForbidden) Code() int {
	return 403
}

func (o *CreateOrganizationInvitationsForbidden) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_id}/invitations][%d] createOrganizationInvitationsForbidden  %+v", 403, o.Payload)
}

func (o *CreateOrganizationInvitationsForbidden) String() string {
	return fmt.Sprintf("[POST /organizations/{organization_id}/invitations][%d] createOrganizationInvitationsForbidden  %+v", 403, o.Payload)
}

func (o *CreateOrganizationInvitationsForbidden) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *CreateOrganizationInvitationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOrganizationInvitationsNotFound creates a CreateOrganizationInvitationsNotFound with default headers values
func NewCreateOrganizationInvitationsNotFound() *CreateOrganizationInvitationsNotFound {
	return &CreateOrganizationInvitationsNotFound{}
}

/*
	CreateOrganizationInvitationsNotFound describes a response with status code 404, with default header values.

	* Organization not found. (code: `organization.not_found`)

* User not found. (code: `user.not_found`)
* Invitation sender does not belong to organization. (code: `organization.user_organization_does_not_belong`)
*/
type CreateOrganizationInvitationsNotFound struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this create organization invitations not found response has a 2xx status code
func (o *CreateOrganizationInvitationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create organization invitations not found response has a 3xx status code
func (o *CreateOrganizationInvitationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create organization invitations not found response has a 4xx status code
func (o *CreateOrganizationInvitationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create organization invitations not found response has a 5xx status code
func (o *CreateOrganizationInvitationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create organization invitations not found response a status code equal to that given
func (o *CreateOrganizationInvitationsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create organization invitations not found response
func (o *CreateOrganizationInvitationsNotFound) Code() int {
	return 404
}

func (o *CreateOrganizationInvitationsNotFound) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_id}/invitations][%d] createOrganizationInvitationsNotFound  %+v", 404, o.Payload)
}

func (o *CreateOrganizationInvitationsNotFound) String() string {
	return fmt.Sprintf("[POST /organizations/{organization_id}/invitations][%d] createOrganizationInvitationsNotFound  %+v", 404, o.Payload)
}

func (o *CreateOrganizationInvitationsNotFound) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *CreateOrganizationInvitationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOrganizationInvitationsTooManyRequests creates a CreateOrganizationInvitationsTooManyRequests with default headers values
func NewCreateOrganizationInvitationsTooManyRequests() *CreateOrganizationInvitationsTooManyRequests {
	return &CreateOrganizationInvitationsTooManyRequests{}
}

/*
CreateOrganizationInvitationsTooManyRequests describes a response with status code 429, with default header values.

Request exceeds organization invitation creation rate limits. (code: `organization.invitations_rate_limit_exceeded`)
*/
type CreateOrganizationInvitationsTooManyRequests struct {

	/* The error codes associated with the response
	 */
	XCloudErrorCodes string

	Payload *models.BasicFailedReply
}

// IsSuccess returns true when this create organization invitations too many requests response has a 2xx status code
func (o *CreateOrganizationInvitationsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create organization invitations too many requests response has a 3xx status code
func (o *CreateOrganizationInvitationsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create organization invitations too many requests response has a 4xx status code
func (o *CreateOrganizationInvitationsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create organization invitations too many requests response has a 5xx status code
func (o *CreateOrganizationInvitationsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create organization invitations too many requests response a status code equal to that given
func (o *CreateOrganizationInvitationsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create organization invitations too many requests response
func (o *CreateOrganizationInvitationsTooManyRequests) Code() int {
	return 429
}

func (o *CreateOrganizationInvitationsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_id}/invitations][%d] createOrganizationInvitationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateOrganizationInvitationsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /organizations/{organization_id}/invitations][%d] createOrganizationInvitationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateOrganizationInvitationsTooManyRequests) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *CreateOrganizationInvitationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-cloud-error-codes
	hdrXCloudErrorCodes := response.GetHeader("x-cloud-error-codes")

	if hdrXCloudErrorCodes != "" {
		o.XCloudErrorCodes = hdrXCloudErrorCodes
	}

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
