// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by go-swagger; DO NOT EDIT.

package deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/elastic/cloud-sdk-go/pkg/models"
)

// ShutdownDeploymentReader is a Reader for the ShutdownDeployment structure.
type ShutdownDeploymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShutdownDeploymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewShutdownDeploymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewShutdownDeploymentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewShutdownDeploymentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewShutdownDeploymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewShutdownDeploymentOK creates a ShutdownDeploymentOK with default headers values
func NewShutdownDeploymentOK() *ShutdownDeploymentOK {
	return &ShutdownDeploymentOK{}
}

/*ShutdownDeploymentOK handles this case with default header values.

The request was valid and the resources of the deployment were shutdown
*/
type ShutdownDeploymentOK struct {
	Payload *models.DeploymentShutdownResponse
}

func (o *ShutdownDeploymentOK) Error() string {
	return fmt.Sprintf("[POST /deployments/{deployment_id}/_shutdown][%d] shutdownDeploymentOK  %+v", 200, o.Payload)
}

func (o *ShutdownDeploymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentShutdownResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShutdownDeploymentBadRequest creates a ShutdownDeploymentBadRequest with default headers values
func NewShutdownDeploymentBadRequest() *ShutdownDeploymentBadRequest {
	return &ShutdownDeploymentBadRequest{}
}

/*ShutdownDeploymentBadRequest handles this case with default header values.

The deployment request had errors
*/
type ShutdownDeploymentBadRequest struct {
	Payload *models.BasicFailedReply
}

func (o *ShutdownDeploymentBadRequest) Error() string {
	return fmt.Sprintf("[POST /deployments/{deployment_id}/_shutdown][%d] shutdownDeploymentBadRequest  %+v", 400, o.Payload)
}

func (o *ShutdownDeploymentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShutdownDeploymentUnauthorized creates a ShutdownDeploymentUnauthorized with default headers values
func NewShutdownDeploymentUnauthorized() *ShutdownDeploymentUnauthorized {
	return &ShutdownDeploymentUnauthorized{}
}

/*ShutdownDeploymentUnauthorized handles this case with default header values.

You are not authorized to perform this action
*/
type ShutdownDeploymentUnauthorized struct {
	Payload *models.BasicFailedReply
}

func (o *ShutdownDeploymentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /deployments/{deployment_id}/_shutdown][%d] shutdownDeploymentUnauthorized  %+v", 401, o.Payload)
}

func (o *ShutdownDeploymentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShutdownDeploymentNotFound creates a ShutdownDeploymentNotFound with default headers values
func NewShutdownDeploymentNotFound() *ShutdownDeploymentNotFound {
	return &ShutdownDeploymentNotFound{}
}

/*ShutdownDeploymentNotFound handles this case with default header values.

The Deployment specified by {deployment_id} cannot be found
*/
type ShutdownDeploymentNotFound struct {
	Payload *models.BasicFailedReply
}

func (o *ShutdownDeploymentNotFound) Error() string {
	return fmt.Sprintf("[POST /deployments/{deployment_id}/_shutdown][%d] shutdownDeploymentNotFound  %+v", 404, o.Payload)
}

func (o *ShutdownDeploymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
