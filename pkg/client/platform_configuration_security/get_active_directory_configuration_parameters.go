// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by go-swagger; DO NOT EDIT.

package platform_configuration_security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetActiveDirectoryConfigurationParams creates a new GetActiveDirectoryConfigurationParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetActiveDirectoryConfigurationParams() *GetActiveDirectoryConfigurationParams {
	return &GetActiveDirectoryConfigurationParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetActiveDirectoryConfigurationParamsWithTimeout creates a new GetActiveDirectoryConfigurationParams object
// with the ability to set a timeout on a request.
func NewGetActiveDirectoryConfigurationParamsWithTimeout(timeout time.Duration) *GetActiveDirectoryConfigurationParams {
	return &GetActiveDirectoryConfigurationParams{
		timeout: timeout,
	}
}

// NewGetActiveDirectoryConfigurationParamsWithContext creates a new GetActiveDirectoryConfigurationParams object
// with the ability to set a context for a request.
func NewGetActiveDirectoryConfigurationParamsWithContext(ctx context.Context) *GetActiveDirectoryConfigurationParams {
	return &GetActiveDirectoryConfigurationParams{
		Context: ctx,
	}
}

// NewGetActiveDirectoryConfigurationParamsWithHTTPClient creates a new GetActiveDirectoryConfigurationParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetActiveDirectoryConfigurationParamsWithHTTPClient(client *http.Client) *GetActiveDirectoryConfigurationParams {
	return &GetActiveDirectoryConfigurationParams{
		HTTPClient: client,
	}
}

/* GetActiveDirectoryConfigurationParams contains all the parameters to send to the API endpoint
   for the get active directory configuration operation.

   Typically these are written to a http.Request.
*/
type GetActiveDirectoryConfigurationParams struct {

	/* RealmID.

	   The Elasticsearch Security realm identifier.
	*/
	RealmID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get active directory configuration params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetActiveDirectoryConfigurationParams) WithDefaults() *GetActiveDirectoryConfigurationParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get active directory configuration params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetActiveDirectoryConfigurationParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get active directory configuration params
func (o *GetActiveDirectoryConfigurationParams) WithTimeout(timeout time.Duration) *GetActiveDirectoryConfigurationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get active directory configuration params
func (o *GetActiveDirectoryConfigurationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get active directory configuration params
func (o *GetActiveDirectoryConfigurationParams) WithContext(ctx context.Context) *GetActiveDirectoryConfigurationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get active directory configuration params
func (o *GetActiveDirectoryConfigurationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get active directory configuration params
func (o *GetActiveDirectoryConfigurationParams) WithHTTPClient(client *http.Client) *GetActiveDirectoryConfigurationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get active directory configuration params
func (o *GetActiveDirectoryConfigurationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRealmID adds the realmID to the get active directory configuration params
func (o *GetActiveDirectoryConfigurationParams) WithRealmID(realmID string) *GetActiveDirectoryConfigurationParams {
	o.SetRealmID(realmID)
	return o
}

// SetRealmID adds the realmId to the get active directory configuration params
func (o *GetActiveDirectoryConfigurationParams) SetRealmID(realmID string) {
	o.RealmID = realmID
}

// WriteToRequest writes these params to a swagger request
func (o *GetActiveDirectoryConfigurationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param realm_id
	if err := r.SetPathParam("realm_id", o.RealmID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
