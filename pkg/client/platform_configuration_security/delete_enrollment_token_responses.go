// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by go-swagger; DO NOT EDIT.

package platform_configuration_security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/elastic/cloud-sdk-go/pkg/models"
)

// DeleteEnrollmentTokenReader is a Reader for the DeleteEnrollmentToken structure.
type DeleteEnrollmentTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEnrollmentTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteEnrollmentTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteEnrollmentTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 449:
		result := NewDeleteEnrollmentTokenRetryWith()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteEnrollmentTokenOK creates a DeleteEnrollmentTokenOK with default headers values
func NewDeleteEnrollmentTokenOK() *DeleteEnrollmentTokenOK {
	return &DeleteEnrollmentTokenOK{}
}

/* DeleteEnrollmentTokenOK describes a response with status code 200, with default header values.

The supplied token has been revoked and can no longer be used to start services on new servers
*/
type DeleteEnrollmentTokenOK struct {
	Payload models.EmptyResponse
}

func (o *DeleteEnrollmentTokenOK) Error() string {
	return fmt.Sprintf("[DELETE /platform/configuration/security/enrollment-tokens/{token}][%d] deleteEnrollmentTokenOK  %+v", 200, o.Payload)
}
func (o *DeleteEnrollmentTokenOK) GetPayload() models.EmptyResponse {
	return o.Payload
}

func (o *DeleteEnrollmentTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEnrollmentTokenNotFound creates a DeleteEnrollmentTokenNotFound with default headers values
func NewDeleteEnrollmentTokenNotFound() *DeleteEnrollmentTokenNotFound {
	return &DeleteEnrollmentTokenNotFound{}
}

/* DeleteEnrollmentTokenNotFound describes a response with status code 404, with default header values.

Token not found (code: 'enrollment_tokens.invalid_token_id')
*/
type DeleteEnrollmentTokenNotFound struct {
	Payload *models.BasicFailedReply
}

func (o *DeleteEnrollmentTokenNotFound) Error() string {
	return fmt.Sprintf("[DELETE /platform/configuration/security/enrollment-tokens/{token}][%d] deleteEnrollmentTokenNotFound  %+v", 404, o.Payload)
}
func (o *DeleteEnrollmentTokenNotFound) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *DeleteEnrollmentTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEnrollmentTokenRetryWith creates a DeleteEnrollmentTokenRetryWith with default headers values
func NewDeleteEnrollmentTokenRetryWith() *DeleteEnrollmentTokenRetryWith {
	return &DeleteEnrollmentTokenRetryWith{}
}

/* DeleteEnrollmentTokenRetryWith describes a response with status code 449, with default header values.

elevated permissions are required. (code: '"root.unauthorized.rbac.elevated_permissions_required"')
*/
type DeleteEnrollmentTokenRetryWith struct {
	Payload *models.BasicFailedReply
}

func (o *DeleteEnrollmentTokenRetryWith) Error() string {
	return fmt.Sprintf("[DELETE /platform/configuration/security/enrollment-tokens/{token}][%d] deleteEnrollmentTokenRetryWith  %+v", 449, o.Payload)
}
func (o *DeleteEnrollmentTokenRetryWith) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *DeleteEnrollmentTokenRetryWith) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
