// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by go-swagger; DO NOT EDIT.

package deployments_ip_filtering

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/elastic/cloud-sdk-go/pkg/models"
)

// CreateIPFilterRulesetAssociationReader is a Reader for the CreateIPFilterRulesetAssociation structure.
type CreateIPFilterRulesetAssociationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateIPFilterRulesetAssociationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateIPFilterRulesetAssociationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewCreateIPFilterRulesetAssociationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 449:
		result := NewCreateIPFilterRulesetAssociationRetryWith()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateIPFilterRulesetAssociationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateIPFilterRulesetAssociationCreated creates a CreateIPFilterRulesetAssociationCreated with default headers values
func NewCreateIPFilterRulesetAssociationCreated() *CreateIPFilterRulesetAssociationCreated {
	return &CreateIPFilterRulesetAssociationCreated{}
}

/* CreateIPFilterRulesetAssociationCreated describes a response with status code 201, with default header values.

Create association request was valid and the association has been created
*/
type CreateIPFilterRulesetAssociationCreated struct {
	Payload models.EmptyResponse
}

func (o *CreateIPFilterRulesetAssociationCreated) Error() string {
	return fmt.Sprintf("[POST /deployments/ip-filtering/rulesets/{ruleset_id}/associations][%d] createIpFilterRulesetAssociationCreated  %+v", 201, o.Payload)
}
func (o *CreateIPFilterRulesetAssociationCreated) GetPayload() models.EmptyResponse {
	return o.Payload
}

func (o *CreateIPFilterRulesetAssociationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPFilterRulesetAssociationNotFound creates a CreateIPFilterRulesetAssociationNotFound with default headers values
func NewCreateIPFilterRulesetAssociationNotFound() *CreateIPFilterRulesetAssociationNotFound {
	return &CreateIPFilterRulesetAssociationNotFound{}
}

/* CreateIPFilterRulesetAssociationNotFound describes a response with status code 404, with default header values.

Associated entity specified by {id} cannot be found (code: 'ip_filtering.associated_entity_not_found')
*/
type CreateIPFilterRulesetAssociationNotFound struct {
	Payload *models.BasicFailedReply
}

func (o *CreateIPFilterRulesetAssociationNotFound) Error() string {
	return fmt.Sprintf("[POST /deployments/ip-filtering/rulesets/{ruleset_id}/associations][%d] createIpFilterRulesetAssociationNotFound  %+v", 404, o.Payload)
}
func (o *CreateIPFilterRulesetAssociationNotFound) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *CreateIPFilterRulesetAssociationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPFilterRulesetAssociationRetryWith creates a CreateIPFilterRulesetAssociationRetryWith with default headers values
func NewCreateIPFilterRulesetAssociationRetryWith() *CreateIPFilterRulesetAssociationRetryWith {
	return &CreateIPFilterRulesetAssociationRetryWith{}
}

/* CreateIPFilterRulesetAssociationRetryWith describes a response with status code 449, with default header values.

Elevated permissions are required. (code: '"root.unauthorized.rbac.elevated_permissions_required"')
*/
type CreateIPFilterRulesetAssociationRetryWith struct {
	Payload *models.BasicFailedReply
}

func (o *CreateIPFilterRulesetAssociationRetryWith) Error() string {
	return fmt.Sprintf("[POST /deployments/ip-filtering/rulesets/{ruleset_id}/associations][%d] createIpFilterRulesetAssociationRetryWith  %+v", 449, o.Payload)
}
func (o *CreateIPFilterRulesetAssociationRetryWith) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *CreateIPFilterRulesetAssociationRetryWith) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPFilterRulesetAssociationInternalServerError creates a CreateIPFilterRulesetAssociationInternalServerError with default headers values
func NewCreateIPFilterRulesetAssociationInternalServerError() *CreateIPFilterRulesetAssociationInternalServerError {
	return &CreateIPFilterRulesetAssociationInternalServerError{}
}

/* CreateIPFilterRulesetAssociationInternalServerError describes a response with status code 500, with default header values.

Request execution failed (code: 'ip_filtering.request_execution_failed')
*/
type CreateIPFilterRulesetAssociationInternalServerError struct {
	Payload *models.BasicFailedReply
}

func (o *CreateIPFilterRulesetAssociationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /deployments/ip-filtering/rulesets/{ruleset_id}/associations][%d] createIpFilterRulesetAssociationInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateIPFilterRulesetAssociationInternalServerError) GetPayload() *models.BasicFailedReply {
	return o.Payload
}

func (o *CreateIPFilterRulesetAssociationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BasicFailedReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
