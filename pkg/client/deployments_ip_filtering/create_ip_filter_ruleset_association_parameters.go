// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by go-swagger; DO NOT EDIT.

package deployments_ip_filtering

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/elastic/cloud-sdk-go/pkg/models"
)

// NewCreateIPFilterRulesetAssociationParams creates a new CreateIPFilterRulesetAssociationParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateIPFilterRulesetAssociationParams() *CreateIPFilterRulesetAssociationParams {
	return &CreateIPFilterRulesetAssociationParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateIPFilterRulesetAssociationParamsWithTimeout creates a new CreateIPFilterRulesetAssociationParams object
// with the ability to set a timeout on a request.
func NewCreateIPFilterRulesetAssociationParamsWithTimeout(timeout time.Duration) *CreateIPFilterRulesetAssociationParams {
	return &CreateIPFilterRulesetAssociationParams{
		timeout: timeout,
	}
}

// NewCreateIPFilterRulesetAssociationParamsWithContext creates a new CreateIPFilterRulesetAssociationParams object
// with the ability to set a context for a request.
func NewCreateIPFilterRulesetAssociationParamsWithContext(ctx context.Context) *CreateIPFilterRulesetAssociationParams {
	return &CreateIPFilterRulesetAssociationParams{
		Context: ctx,
	}
}

// NewCreateIPFilterRulesetAssociationParamsWithHTTPClient creates a new CreateIPFilterRulesetAssociationParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateIPFilterRulesetAssociationParamsWithHTTPClient(client *http.Client) *CreateIPFilterRulesetAssociationParams {
	return &CreateIPFilterRulesetAssociationParams{
		HTTPClient: client,
	}
}

/* CreateIPFilterRulesetAssociationParams contains all the parameters to send to the API endpoint
   for the create ip filter ruleset association operation.

   Typically these are written to a http.Request.
*/
type CreateIPFilterRulesetAssociationParams struct {

	/* Body.

	   Mandatory ruleset association description
	*/
	Body *models.FilterAssociation

	/* RulesetID.

	   Mandatory ruleset ID
	*/
	RulesetID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create ip filter ruleset association params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateIPFilterRulesetAssociationParams) WithDefaults() *CreateIPFilterRulesetAssociationParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create ip filter ruleset association params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateIPFilterRulesetAssociationParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create ip filter ruleset association params
func (o *CreateIPFilterRulesetAssociationParams) WithTimeout(timeout time.Duration) *CreateIPFilterRulesetAssociationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create ip filter ruleset association params
func (o *CreateIPFilterRulesetAssociationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create ip filter ruleset association params
func (o *CreateIPFilterRulesetAssociationParams) WithContext(ctx context.Context) *CreateIPFilterRulesetAssociationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create ip filter ruleset association params
func (o *CreateIPFilterRulesetAssociationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create ip filter ruleset association params
func (o *CreateIPFilterRulesetAssociationParams) WithHTTPClient(client *http.Client) *CreateIPFilterRulesetAssociationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create ip filter ruleset association params
func (o *CreateIPFilterRulesetAssociationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create ip filter ruleset association params
func (o *CreateIPFilterRulesetAssociationParams) WithBody(body *models.FilterAssociation) *CreateIPFilterRulesetAssociationParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create ip filter ruleset association params
func (o *CreateIPFilterRulesetAssociationParams) SetBody(body *models.FilterAssociation) {
	o.Body = body
}

// WithRulesetID adds the rulesetID to the create ip filter ruleset association params
func (o *CreateIPFilterRulesetAssociationParams) WithRulesetID(rulesetID string) *CreateIPFilterRulesetAssociationParams {
	o.SetRulesetID(rulesetID)
	return o
}

// SetRulesetID adds the rulesetId to the create ip filter ruleset association params
func (o *CreateIPFilterRulesetAssociationParams) SetRulesetID(rulesetID string) {
	o.RulesetID = rulesetID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateIPFilterRulesetAssociationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param ruleset_id
	if err := r.SetPathParam("ruleset_id", o.RulesetID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
