{
  "swagger" : "2.0",
  "info" : {
    "description" : "",
    "version" : "1",
    "title" : "Elastic Cloud API",
    "termsOfService" : ""
  },
  "host" : "api.elastic-cloud.com",
  "basePath" : "/api/v1/",
  "tags" : [ {
    "name" : "Accounts"
  }, {
    "name" : "Authentication"
  }, {
    "name" : "BillingCostsAnalysis"
  }, {
    "name" : "DeploymentTemplates"
  }, {
    "name" : "Deployments"
  }, {
    "name" : "DeploymentsTrafficFilter"
  }, {
    "name" : "Extensions"
  }, {
    "name" : "Stack"
  } ],
  "schemes" : [ "https" ],
  "security" : [ {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/account" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Fetch current account information",
        "description" : "Fetch current account information.",
        "operationId" : "get-current-account",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Account fetched successfully",
            "schema" : {
              "$ref" : "#/definitions/AccountResponse"
            }
          },
          "404" : {
            "description" : "Account not found. (code: `accounts.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "accounts.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Accounts"
        }
      },
      "put" : {
        "tags" : [ "Accounts" ],
        "summary" : "Updates the current account",
        "description" : "Updates the current account.",
        "operationId" : "update-current-account",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "the current account",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Account updated successfully",
            "schema" : {
              "$ref" : "#/definitions/AccountResponse"
            }
          },
          "404" : {
            "description" : "Account not found. (code: `accounts.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "accounts.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Accounts"
        }
      },
      "patch" : {
        "tags" : [ "Accounts" ],
        "summary" : "Updates the current account",
        "description" : "Updates the current account.",
        "operationId" : "patch-current-account",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "All changes in the specified object are applied to the current account according to the JSON Merge Patch processing rules. Omitting existing fields causes the same values to be reapplied. Specifying a `null` value reverts the field to the default value, or removes the field when no default value exists.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Account updated successfully",
            "schema" : {
              "$ref" : "#/definitions/AccountResponse"
            }
          },
          "404" : {
            "description" : "Account not found. (code: `accounts.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "accounts.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Accounts"
        }
      }
    },
    "/billing/costs/{organization_id}" : {
      "get" : {
        "tags" : [ "BillingCostsAnalysis" ],
        "summary" : "Get costs overview for the organization",
        "description" : "EXPERIMENTAL (it may change in future versions): Retrieves an overview of the costs by organization ID.",
        "operationId" : "get-costs-overview",
        "parameters" : [ {
          "name" : "organization_id",
          "in" : "path",
          "description" : "Identifier for the organization",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Top-level cost overview for the organization",
            "schema" : {
              "$ref" : "#/definitions/CostsOverview"
            }
          },
          "400" : {
            "description" : "The specified date range is invalid. (code: `costs.invalid_date_range`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "costs.invalid_date_range" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "403" : {
            "description" : "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "organization.invalid_access" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "organization.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "An error occurred when fetching an overview of the costs for the organization. (code: `billing_service.failed_request`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "billing_service.failed_request" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Billing Costs Analysis"
        }
      }
    },
    "/billing/costs/{organization_id}/deployments" : {
      "get" : {
        "tags" : [ "BillingCostsAnalysis" ],
        "summary" : "Get deployments costs for the organization",
        "description" : "EXPERIMENTAL (it may change in future versions): Retrieves the costs associated with all deployments for the organization.",
        "operationId" : "get-costs-deployments",
        "parameters" : [ {
          "name" : "organization_id",
          "in" : "path",
          "description" : "Identifier for the organization",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "A datetime for the beginning of the desired range for which to fetch activity. Defaults to start of current month.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "A datetime for the end of the desired range for which to fetch activity. Defaults to the current date.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The costs associated to a set of products",
            "schema" : {
              "$ref" : "#/definitions/DeploymentsCosts"
            }
          },
          "400" : {
            "description" : "Invalid date range specified. (code: `costs.invalid_date_range`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "costs.invalid_date_range" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "403" : {
            "description" : "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "organization.invalid_access" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "organization.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "An error occurred when fetching the costs associated with all deployments for the organization. (code: `billing_service.failed_request`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "billing_service.failed_request" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Billing Costs Analysis"
        }
      }
    },
    "/billing/costs/{organization_id}/deployments/{deployment_id}/items" : {
      "get" : {
        "tags" : [ "BillingCostsAnalysis" ],
        "summary" : "Get itemized costs by deployments",
        "description" : "EXPERIMENTAL (it may change in future versions): Retrieves the itemized costs for the given deployment.",
        "operationId" : "get-costs-items-by-deployment",
        "parameters" : [ {
          "name" : "organization_id",
          "in" : "path",
          "description" : "Identifier for the organization",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Id of a Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The costs associated to a set items billed for a single deployment.",
            "schema" : {
              "$ref" : "#/definitions/ItemsCosts"
            }
          },
          "400" : {
            "description" : "The specified date range is invalid. (code: `costs.invalid_date_range`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "costs.invalid_date_range" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "403" : {
            "description" : "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "organization.invalid_access" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "* The organization was not found. (code: `organization.not_found`)\n* The Elasticsearch cluster was not found. (code: `billing_service.es_cluster_id_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "organization.not_found", "billing_service.es_cluster_id_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "An error occurred when fetching the itemized costs for the given deployment of the organization. (code: `billing_service.failed_request`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "billing_service.failed_request" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Billing Costs Analysis"
        }
      }
    },
    "/billing/costs/{organization_id}/items" : {
      "get" : {
        "tags" : [ "BillingCostsAnalysis" ],
        "summary" : "Get itemized costs for the organization",
        "description" : "EXPERIMENTAL (it may change in future versions): Retrieves the itemized costs for the organization.",
        "operationId" : "get-costs-items",
        "parameters" : [ {
          "name" : "organization_id",
          "in" : "path",
          "description" : "Identifier for the organization",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The costs associated to a set of items",
            "schema" : {
              "$ref" : "#/definitions/ItemsCosts"
            }
          },
          "400" : {
            "description" : "The specified date range is invalid. (code: `costs.invalid_date_range`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "costs.invalid_date_range" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "403" : {
            "description" : "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "organization.invalid_access" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "organization.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "Error fetching the itemized costs for the organization. (code: `billing_service.failed_request`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "billing_service.failed_request" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Billing Costs Analysis"
        }
      }
    },
    "/deployments" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "List Deployments",
        "description" : "List Deployments.",
        "operationId" : "list-deployments",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The list of deployments that belong to the authenticated user.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentsListResponse"
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action.",
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - CRUD"
        }
      },
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Create Deployment",
        "description" : "Creates a Deployment.",
        "operationId" : "create-deployment",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "request_id",
          "in" : "query",
          "description" : "An optional idempotency token - if two create requests share the same request_id token (min size 32 characters, max 128) then only one deployment will be created, the second request will return the info of that deployment (in the same format described below, but with blanks for auth-related fields)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "If true, will just validate the Deployment definition but will not perform the creation",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The deployment definition",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeploymentCreateRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The request was valid and a new deployment was created",
            "headers" : {
              "x-cloud-resource-version" : {
                "type" : "string",
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations"
              },
              "x-cloud-resource-created" : {
                "type" : "string",
                "description" : "The date-time when the resource was created (ISO format relative to UTC)"
              },
              "x-cloud-resource-last-modified" : {
                "type" : "string",
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/DeploymentCreateResponse"
            }
          },
          "202" : {
            "description" : "The request was valid and deployment creation had already been started.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentCreateResponse"
            }
          },
          "200" : {
            "description" : "The request was valid (used when validate_only is true).",
            "schema" : {
              "$ref" : "#/definitions/DeploymentCreateResponse"
            }
          },
          "400" : {
            "description" : "The deployment request had errors.",
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action.",
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - CRUD"
        }
      }
    },
    "/deployments/_search" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Search Deployments",
        "description" : "Retrieves the information for all of the deployments that match the specified query.",
        "operationId" : "search-deployments",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Optional) The search query to run. When not specified, all of the deployments are matched.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SearchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of deployments that match the specified query and belong to the authenticated user.",
            "headers" : {
              "x-cloud-resource-version" : {
                "type" : "string",
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations"
              },
              "x-cloud-resource-created" : {
                "type" : "string",
                "description" : "The date-time when the resource was created (ISO format relative to UTC)"
              },
              "x-cloud-resource-last-modified" : {
                "type" : "string",
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/DeploymentsSearchResponse"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/eligible-remote-clusters" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get eligible remote clusters",
        "description" : "Returns the list of deployments which contain eligible remote clusters for a specific version.",
        "operationId" : "search-eligible-remote-clusters",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version",
          "in" : "query",
          "description" : "The version of the Elasticsearch cluster cluster that will potentially be configured to have remote clusters.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Optional) The search query to run against all deployments containing eligible remote clusters. When not specified, all the eligible deployments are matched.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SearchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of deployments which contains eligible remote clusters for a specific version",
            "schema" : {
              "$ref" : "#/definitions/DeploymentsSearchResponse"
            }
          },
          "400" : {
            "description" : "The provided version is invalid. (code: `stackpack.invalid_version`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "stackpack.invalid_version" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Remote Clusters"
        }
      }
    },
    "/deployments/extensions" : {
      "get" : {
        "tags" : [ "Extensions" ],
        "summary" : "List Extensions",
        "description" : "Retrieves all of the available extensions.",
        "operationId" : "list-extensions",
        "parameters" : [ {
          "name" : "include_deployments",
          "in" : "query",
          "description" : "Include deployments referencing this extension.\nDEPRECATED: To get the list of deployments that reference an extension, use the Get Extension API.\n",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "The extensions that are available",
            "schema" : {
              "$ref" : "#/definitions/Extensions"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Extensions"
        }
      },
      "post" : {
        "tags" : [ "Extensions" ],
        "summary" : "Create an extension",
        "description" : "Creates the extension.\n The extensions API supports two types of usage patterns.\n A). Specify a `download_url`, http or https URL,  where the extension is currently hosted. This will result in extension being copied to elastic repository.\n B). Create only the extension metadata using the `POST` endpoint and then use `PUT` to upload the extension file. Leave the `download_url` unspecified in this case.\n",
        "operationId" : "create-extension",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "the data that creates the extension",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateExtensionRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The extension that was just created.",
            "headers" : {
              "x-cloud-resource-version" : {
                "type" : "string",
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations"
              },
              "x-cloud-resource-created" : {
                "type" : "string",
                "description" : "The date-time when the resource was created (ISO format relative to UTC)"
              },
              "x-cloud-resource-last-modified" : {
                "type" : "string",
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Extension"
            }
          },
          "404" : {
            "description" : "Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.no_user_id" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "400" : {
            "description" : "Could not download the extension from the specified URL. (code: `extensions.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.request_execution_failed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "409" : {
            "description" : "An extension already exists with the generated id. Please try again. (code: `extensions.id_already_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.id_already_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Extensions"
        }
      }
    },
    "/deployments/extensions/{extension_id}" : {
      "get" : {
        "tags" : [ "Extensions" ],
        "summary" : "Get Extension",
        "description" : "Retrieves an extension.",
        "operationId" : "get-extension",
        "parameters" : [ {
          "name" : "extension_id",
          "in" : "path",
          "description" : "Id of an extension",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "include_deployments",
          "in" : "query",
          "description" : "Include deployments referencing this extension. Up to only 10000 deployments will be included.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "The Extension",
            "headers" : {
              "x-cloud-resource-version" : {
                "type" : "string",
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations"
              },
              "x-cloud-resource-created" : {
                "type" : "string",
                "description" : "The date-time when the resource was created (ISO format relative to UTC)"
              },
              "x-cloud-resource-last-modified" : {
                "type" : "string",
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Extension"
            }
          },
          "404" : {
            "description" : "The extension requested does not exist. (code: `extensions.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Extensions"
        }
      },
      "post" : {
        "tags" : [ "Extensions" ],
        "summary" : "Update Extension",
        "description" : "Updates an extension.",
        "operationId" : "update-extension",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "extension_id",
          "in" : "path",
          "description" : "Id of an extension",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The extension update data.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateExtensionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Extension updated successfully.",
            "headers" : {
              "x-cloud-resource-version" : {
                "type" : "string",
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations"
              },
              "x-cloud-resource-created" : {
                "type" : "string",
                "description" : "The date-time when the resource was created (ISO format relative to UTC)"
              },
              "x-cloud-resource-last-modified" : {
                "type" : "string",
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Extension"
            }
          },
          "401" : {
            "description" : "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.unauthorised", "extensions.no_user_id" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "The extension you want does not exist. (code: `extensions.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "400" : {
            "description" : "Could not download the extension from the specified URL. (code: `extensions.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.request_execution_failed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "409" : {
            "description" : "The version you sent does not match the persisted version. (code: `extensions.version_conflict`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.version_conflict" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Extensions"
        }
      },
      "put" : {
        "tags" : [ "Extensions" ],
        "summary" : "Uploads the Extension",
        "description" : "Uploads archive for an extension.",
        "operationId" : "upload-extension",
        "consumes" : [ "multipart/form-data" ],
        "parameters" : [ {
          "name" : "extension_id",
          "in" : "path",
          "description" : "Id of an extension",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "Zip file that contains the extension",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "200" : {
            "description" : "Archive uploaded successfully.",
            "headers" : {
              "x-cloud-resource-version" : {
                "type" : "string",
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations"
              },
              "x-cloud-resource-created" : {
                "type" : "string",
                "description" : "The date-time when the resource was created (ISO format relative to UTC)"
              },
              "x-cloud-resource-last-modified" : {
                "type" : "string",
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Extension"
            }
          },
          "401" : {
            "description" : "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.unauthorised", "extensions.no_user_id" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "The extension you want does not exist. (code: `extensions.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "400" : {
            "description" : "Could not accept the extensions file. (code: `extensions.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.request_execution_failed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Extensions"
        }
      },
      "delete" : {
        "tags" : [ "Extensions" ],
        "summary" : "Delete Extension",
        "description" : "Deletes a Extension.",
        "operationId" : "delete-extension",
        "parameters" : [ {
          "name" : "extension_id",
          "in" : "path",
          "description" : "Id of an extension",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Extension deleted successfully.",
            "headers" : {
              "x-cloud-resource-version" : {
                "type" : "string",
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations"
              },
              "x-cloud-resource-created" : {
                "type" : "string",
                "description" : "The date-time when the resource was created (ISO format relative to UTC)"
              },
              "x-cloud-resource-last-modified" : {
                "type" : "string",
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/EmptyResponse"
            }
          },
          "401" : {
            "description" : "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.unauthorised", "extensions.no_user_id" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "The extension requested does not exist. (code: `extensions.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "409" : {
            "description" : "The version you sent does not match the persisted version. (code: `extensions.version_conflict`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "extensions.version_conflict" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Extensions"
        }
      }
    },
    "/deployments/templates" : {
      "get" : {
        "tags" : [ "DeploymentTemplates" ],
        "summary" : "Get deployment templates",
        "description" : "Retrieves all deployment templates.",
        "operationId" : "get-deployment-templates-v2",
        "parameters" : [ {
          "name" : "metadata",
          "in" : "query",
          "description" : "An optional key/value pair in the form of (key:value) that will act as a filter and exclude any templates that do not have a matching metadata item associated.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "show_instance_configurations",
          "in" : "query",
          "description" : "If true, will return details for each instance configuration referenced by the template.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "show_max_zones",
          "in" : "query",
          "description" : "If true, will populate the max_zones field in the instance configurations. Only relevant if show_instance_configurations=true.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "stack_version",
          "in" : "query",
          "description" : "If present, it will cause the returned deployment templates to be adapted to return only the elements allowed in that version.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "region",
          "in" : "query",
          "description" : "Region of the deployment templates",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The deployment templates were returned successfully.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeploymentTemplateInfoV2"
              }
            }
          },
          "401" : {
            "description" : "The user is not authorized to access requested region. (code: `templates.region_not_allowed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "templates.region_not_allowed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "400" : {
            "description" : "The requested region was not found. (code: `templates.region_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "templates.region_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Templates"
        }
      }
    },
    "/deployments/templates/{template_id}" : {
      "get" : {
        "tags" : [ "DeploymentTemplates" ],
        "summary" : "Get deployment template",
        "description" : "Retrieves a deployment template by id.",
        "operationId" : "get-deployment-template-v2",
        "parameters" : [ {
          "name" : "template_id",
          "in" : "path",
          "description" : "The identifier for the deployment template.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "show_instance_configurations",
          "in" : "query",
          "description" : "If true, will return details for each instance configuration referenced by the template.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "show_max_zones",
          "in" : "query",
          "description" : "If true, will populate the max_zones field in the instance configurations. Only relevant if show_instance_configurations=true.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "stack_version",
          "in" : "query",
          "description" : "If present, it will cause the returned deployment template to be adapted to return only the elements allowed in that version.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "region",
          "in" : "query",
          "description" : "Region of the deployment template",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The deployment template was found and returned successfully.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentTemplateInfoV2"
            }
          },
          "404" : {
            "description" : "The deployment template specified by {template_id} cannot be found. (code: `templates.template_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "templates.template_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "401" : {
            "description" : "The user is not authorized to access requested region. (code: `templates.region_not_allowed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "templates.region_not_allowed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "400" : {
            "description" : "The requested region is not supported. (code: `templates.region_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "templates.region_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Templates"
        }
      }
    },
    "/deployments/traffic-filter/associations/{association_type}/{associated_entity_id}/rulesets" : {
      "get" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Get associated rulesets",
        "description" : "Retrieves the rulesets associated with a deployment.",
        "operationId" : "get-traffic-filter-deployment-ruleset-associations",
        "parameters" : [ {
          "name" : "association_type",
          "in" : "path",
          "description" : "Association type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "associated_entity_id",
          "in" : "path",
          "description" : "Associated entity ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Rulesets in the deployment were successfully returned",
            "schema" : {
              "$ref" : "#/definitions/TrafficFilterSettings"
            }
          },
          "400" : {
            "description" : "Invalid association type. (code: `traffic_filter.invalid_association_type`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.invalid_association_type" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "Error fetching traffic filter rulesets. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.request_execution_failed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - Associations"
        }
      }
    },
    "/deployments/traffic-filter/rulesets" : {
      "get" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "List traffic filter rulesets",
        "description" : "List all of the traffic filter rulesets.",
        "operationId" : "get-traffic-filter-rulesets",
        "parameters" : [ {
          "name" : "include_associations",
          "in" : "query",
          "description" : "Retrieves a list of resources that are associated to the specified ruleset.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "region",
          "in" : "query",
          "description" : "If provided limits the rulesets to that region only.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of traffic filter routes",
            "schema" : {
              "$ref" : "#/definitions/TrafficFilterRulesets"
            }
          },
          "500" : {
            "description" : "Error fetching traffic filter rulesets. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.request_execution_failed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - CRUD"
        }
      },
      "post" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Create a ruleset",
        "description" : "Creates a ruleset that consists of a set of rules.",
        "operationId" : "create-traffic-filter-ruleset",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The specification for traffic filter ruleset.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TrafficFilterRulesetRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The ruleset definition is valid and the creation has started.",
            "schema" : {
              "$ref" : "#/definitions/TrafficFilterRulesetResponse"
            }
          },
          "500" : {
            "description" : "Error creating the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.request_execution_failed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - CRUD"
        }
      }
    },
    "/deployments/traffic-filter/rulesets/{ruleset_id}" : {
      "get" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Retrieves the ruleset by ID.",
        "description" : "Retrieves a list of resources that are associated to the specified ruleset.",
        "operationId" : "get-traffic-filter-ruleset",
        "parameters" : [ {
          "name" : "ruleset_id",
          "in" : "path",
          "description" : "The mandatory ruleset ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "include_associations",
          "in" : "query",
          "description" : "Retrieves a list of resources that are associated to the specified ruleset.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "The container for a set of traffic filter rules.",
            "schema" : {
              "$ref" : "#/definitions/TrafficFilterRulesetInfo"
            }
          },
          "404" : {
            "description" : "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "Error reading the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.request_execution_failed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - CRUD"
        }
      },
      "put" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Updates a ruleset",
        "description" : "Updates the ruleset with the definition.",
        "operationId" : "update-traffic-filter-ruleset",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ruleset_id",
          "in" : "path",
          "description" : "The mandatory ruleset ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The specification for traffic filter ruleset.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TrafficFilterRulesetRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The ruleset definition was valid and the update has started.",
            "schema" : {
              "$ref" : "#/definitions/TrafficFilterRulesetResponse"
            }
          },
          "404" : {
            "description" : "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "Error reading the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.request_execution_failed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - CRUD"
        }
      },
      "delete" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Delete a ruleset",
        "description" : "Deletes the ruleset by ID.",
        "operationId" : "delete-traffic-filter-ruleset",
        "parameters" : [ {
          "name" : "ruleset_id",
          "in" : "path",
          "description" : "The mandatory ruleset ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ignore_associations",
          "in" : "query",
          "description" : "When true, ignores the associations and deletes the ruleset. When false, recognizes the associations, which prevents the deletion of the rule set.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "The traffic filter ruleset was successfully deleted.",
            "schema" : {
              "$ref" : "#/definitions/EmptyResponse"
            }
          },
          "404" : {
            "description" : "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "Error deleting the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.request_execution_failed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - CRUD"
        }
      }
    },
    "/deployments/traffic-filter/rulesets/{ruleset_id}/associations" : {
      "get" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Get associated deployments",
        "description" : "Retrieves a list of deployments that are associated to the specified ruleset.",
        "operationId" : "get-traffic-filter-ruleset-deployment-associations",
        "parameters" : [ {
          "name" : "ruleset_id",
          "in" : "path",
          "description" : "The mandatory ruleset ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Associations referred by traffic filter rulesets were successfully returned",
            "schema" : {
              "$ref" : "#/definitions/RulesetAssociations"
            }
          },
          "500" : {
            "description" : "Error fetching deployments. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.request_execution_failed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - Associations"
        }
      },
      "post" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Create ruleset association",
        "description" : "Applies the ruleset to the specified deployment.",
        "operationId" : "create-traffic-filter-ruleset-association",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ruleset_id",
          "in" : "path",
          "description" : "The mandatory ruleset ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Mandatory ruleset association description",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FilterAssociation"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Create association request was valid and the association has been created",
            "schema" : {
              "$ref" : "#/definitions/EmptyResponse"
            }
          },
          "200" : {
            "description" : "Create association request was valid and the association already exists",
            "schema" : {
              "$ref" : "#/definitions/EmptyResponse"
            }
          },
          "404" : {
            "description" : "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "Creation failed. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.request_execution_failed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - Associations"
        }
      }
    },
    "/deployments/traffic-filter/rulesets/{ruleset_id}/associations/{association_type}/{associated_entity_id}" : {
      "delete" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Delete ruleset association",
        "description" : "Deletes the traffic rules in the ruleset from the deployment.",
        "operationId" : "delete-traffic-filter-ruleset-association",
        "parameters" : [ {
          "name" : "ruleset_id",
          "in" : "path",
          "description" : "The mandatory ruleset ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "association_type",
          "in" : "path",
          "description" : "Association type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "associated_entity_id",
          "in" : "path",
          "description" : "Associated entity ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Delete association request was valid and the association has been deleted",
            "schema" : {
              "$ref" : "#/definitions/EmptyResponse"
            }
          },
          "404" : {
            "description" : "The traffic filter ruleset association cannot be found. (code: `traffic_filter.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "Deletion failed. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "traffic_filter.request_execution_failed" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - Associations"
        }
      }
    },
    "/deployments/{deployment_id}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment",
        "description" : "Retrieves information about a Deployment.",
        "operationId" : "get-deployment",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "show_security",
          "in" : "query",
          "description" : "Whether to include the Elasticsearch 2.x security information in the response - can be large per cluster and also include credentials",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_metadata",
          "in" : "query",
          "description" : "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plans",
          "in" : "query",
          "description" : "Whether to include the full current and pending plan information in the response - can be large per cluster",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "show_plan_logs",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the attempt log - can be very large per cluster",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plan_history",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the plan history- can be very large per cluster",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plan_defaults",
          "in" : "query",
          "description" : "If showing plans, whether to show values that are left at their default value (less readable but more informative)",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "convert_legacy_plans",
          "in" : "query",
          "description" : "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true')",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_system_alerts",
          "in" : "query",
          "description" : "Number of system alerts (such as forced restarts due to memory limits) to be included in the response - can be large per cluster. Negative numbers or 0 will not return field.",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "show_settings",
          "in" : "query",
          "description" : "Whether to show cluster settings in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "enrich_with_template",
          "in" : "query",
          "description" : "If showing plans, whether to enrich the plan by including the missing elements from the deployment template it is based on",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "The Deployment info response",
            "headers" : {
              "x-cloud-resource-version" : {
                "type" : "string",
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations"
              },
              "x-cloud-resource-created" : {
                "type" : "string",
                "description" : "The date-time when the resource was created (ISO format relative to UTC)"
              },
              "x-cloud-resource-last-modified" : {
                "type" : "string",
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/DeploymentGetResponse"
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action.",
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - CRUD"
        }
      },
      "put" : {
        "tags" : [ "Deployments" ],
        "summary" : "Update Deployment",
        "description" : "Updates a Deployment.",
        "operationId" : "update-deployment",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "hide_pruned_orphans",
          "in" : "query",
          "description" : "Whether or not to hide orphaned resources that were shut down (relevant if prune on the request is true)",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "skip_snapshot",
          "in" : "query",
          "description" : "Whether or not to skip snapshots before shutting down orphaned resources (relevant if prune on the request is true)",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "If true, will just validate the Deployment definition but will not perform the update",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "If specified then checks for conflicts against the version stored in the persistent store (returned in 'x-cloud-resource-version' of the GET request)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The deployment definition",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeploymentUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was valid and the deployment was updated.",
            "headers" : {
              "x-cloud-resource-version" : {
                "type" : "string",
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations"
              },
              "x-cloud-resource-created" : {
                "type" : "string",
                "description" : "The date-time when the resource was created (ISO format relative to UTC)"
              },
              "x-cloud-resource-last-modified" : {
                "type" : "string",
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/DeploymentUpdateResponse"
            }
          },
          "400" : {
            "description" : "The deployment request had errors.",
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action.",
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - CRUD"
        }
      }
    },
    "/deployments/{deployment_id}/_restore" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Restores a shutdown Deployment",
        "description" : "Restores all resources in a Deployment.",
        "operationId" : "restore-deployment",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "restore_snapshot",
          "in" : "query",
          "description" : "Whether or not to restore a snapshot for those resources that allow it.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was valid and the resources of the deployment were restored.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentRestoreResponse"
            }
          },
          "400" : {
            "description" : "There are Elasticsearch resources in the deployment which are not shut down.",
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action.",
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - CRUD"
        }
      }
    },
    "/deployments/{deployment_id}/_shutdown" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Shuts down Deployment",
        "description" : "Shuts down all resources in a Deployment.",
        "operationId" : "shutdown-deployment",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "hide",
          "in" : "query",
          "description" : "Whether or not to hide the deployment and its resources.Only applicable for Platform administrators.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "skip_snapshot",
          "in" : "query",
          "description" : "Whether or not to skip snapshots before shutting down the resources",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was valid and the resources of the deployment were shutdown.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentShutdownResponse"
            }
          },
          "400" : {
            "description" : "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.restricted_parameter" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action.",
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - CRUD"
        }
      }
    },
    "/deployments/{deployment_id}/apm/{ref_id}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment APM Resource Info",
        "description" : "Get info about an APM Resource belonging to a given Deployment.",
        "operationId" : "get-deployment-apm-resource-info",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "show_metadata",
          "in" : "query",
          "description" : "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plans",
          "in" : "query",
          "description" : "Whether to include the full current and pending plan information in the response - can be large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "show_plan_logs",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plan_history",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the plan history- can be very large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plan_defaults",
          "in" : "query",
          "description" : "If showing plans, whether to show values that are left at their default value (less readable but more informative).",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_settings",
          "in" : "query",
          "description" : "Whether to show cluster settings in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response.",
            "schema" : {
              "$ref" : "#/definitions/ApmResourceInfo"
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Info"
        }
      }
    },
    "/deployments/{deployment_id}/apm/{ref_id}/_reset-token" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Reset the secret token for an APM resource.",
        "description" : "Reset the token of an APM resource.",
        "operationId" : "deployment-apm-reset-secret-token",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "Response containing the new secret token, plan to apply it starts",
            "schema" : {
              "$ref" : "#/definitions/ApmCrudResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "APM routes"
        }
      }
    },
    "/deployments/{deployment_id}/appsearch/{ref_id}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment App Search Resource Info",
        "description" : "Get info about an App Search Resource belonging to a given Deployment.",
        "operationId" : "get-deployment-appsearch-resource-info",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "show_metadata",
          "in" : "query",
          "description" : "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plans",
          "in" : "query",
          "description" : "Whether to include the full current and pending plan information in the response - can be large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "show_plan_logs",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plan_history",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the plan history- can be very large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plan_defaults",
          "in" : "query",
          "description" : "If showing plans, whether to show values that are left at their default value (less readable but more informative).",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_settings",
          "in" : "query",
          "description" : "Whether to show cluster settings in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response.",
            "schema" : {
              "$ref" : "#/definitions/AppSearchResourceInfo"
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Info"
        }
      }
    },
    "/deployments/{deployment_id}/appsearch/{ref_id}/read_only_mode" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Set AppSearch read-only status",
        "description" : "Enable/Disable read-only mode on the given App Search resource.",
        "operationId" : "get-appsearch-read-only-mode",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "schema" : {
              "$ref" : "#/definitions/ReadOnlyResponse"
            }
          },
          "404" : {
            "description" : "The Resource specified by ref_id cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "App Search - Read-only"
        }
      },
      "put" : {
        "tags" : [ "Deployments" ],
        "summary" : "Set AppSearch read-only status",
        "description" : "Enable/Disable read-only mode on the given App Search resource.",
        "operationId" : "set-appsearch-read-only-mode",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "read-only request body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReadOnlyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "schema" : {
              "$ref" : "#/definitions/ReadOnlyResponse"
            }
          },
          "404" : {
            "description" : "The Resource specified by ref_id cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "App Search - Read-only"
        }
      }
    },
    "/deployments/{deployment_id}/elasticsearch/{ref_id}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment Elasticsearch Resource Info",
        "description" : "Get info about an Elasticsearch Resource belonging to a given Deployment.",
        "operationId" : "get-deployment-es-resource-info",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "show_security",
          "in" : "query",
          "description" : "Whether to include the Elasticsearch 2.x security information in the response - can be large per cluster and also include credentials.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_metadata",
          "in" : "query",
          "description" : "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plans",
          "in" : "query",
          "description" : "Whether to include the full current and pending plan information in the response - can be large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "show_plan_logs",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plan_history",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the plan history- can be very large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plan_defaults",
          "in" : "query",
          "description" : "If showing plans, whether to show values that are left at their default value (less readable but more informative).",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "convert_legacy_plans",
          "in" : "query",
          "description" : "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true').",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_system_alerts",
          "in" : "query",
          "description" : "Number of system alerts (such as forced restarts due to memory limits) to be included in the response - can be large per cluster. Negative numbers or 0 will not return field.",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "show_settings",
          "in" : "query",
          "description" : "Whether to show cluster settings in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "enrich_with_template",
          "in" : "query",
          "description" : "If showing plans, whether to enrich the plan by including the missing elements from the deployment template it is based on.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response.",
            "schema" : {
              "$ref" : "#/definitions/ElasticsearchResourceInfo"
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Info"
        }
      }
    },
    "/deployments/{deployment_id}/elasticsearch/{ref_id}/_enable-ccr" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Migrate Elasticsearch and associated Kibana resources to enable CCR",
        "description" : "Migrates the specified Elasticsearch resource and its associated Kibana to enable CCR (if supported).",
        "operationId" : "enable-deployment-resource-ccr",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "When `true`, will not enable CCR but returns warnings if any elements may lose availability during CCR enablement",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/elasticsearch/{ref_id}/_enable-ilm" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Migrate Elasticsearch resource to use ILM",
        "description" : "Migrates the specified Elasticsearch resource to use ILM.",
        "operationId" : "enable-deployment-resource-ilm",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "When `true`, does not enable ILM but returns warnings if any applications may lose availability during ILM migration.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Information to build the ILM policies that will be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EnableIlmRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/elasticsearch/{ref_id}/_enable-slm" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Migrate Elasticsearch resource to use SLM",
        "description" : "Migrates the specified Elasticsearch resource to use SLM.",
        "operationId" : "enable-deployment-resource-slm",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "When `true`, does not enable SLM but returns warnings if any applications may lose availability during SLM migration.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/elasticsearch/{ref_id}/_reset-password" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Reset 'elastic' user password",
        "description" : "Resets the password of the 'elastic' user.",
        "operationId" : "reset-elasticsearch-user-password",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The password reset was out carried successfully",
            "schema" : {
              "$ref" : "#/definitions/ElasticsearchElasticUserPasswordResetResponse"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "Failed to reset the 'elastic' user's password. (code: `deployments.elasticsearch.password_reset_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.elasticsearch.password_reset_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/elasticsearch/{ref_id}/_restart" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Restart Deployment Elasticsearch Resource",
        "description" : "Restarts an Elasticsearch Resource. If a Resource is active: this command re-applies the existing plan but applies a \"cluster_reboot\", which issues a restart command and waits for it to complete. If a Resource is inactive: this command starts it up with the most recent successful plan.",
        "operationId" : "restart-deployment-es-resource",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "restore_snapshot",
          "in" : "query",
          "description" : "When set to true and restoring from shutdown, then will restore the cluster from the last snapshot (if available).",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "skip_snapshot",
          "in" : "query",
          "description" : "If true, will not take a snapshot of the cluster before restarting.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "cancel_pending",
          "in" : "query",
          "description" : "If true, cancels any pending plans before restarting. If false and there are pending plans, returns an error.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "group_attribute",
          "in" : "query",
          "description" : "Indicates the property or properties used to divide the list of instances to restart in groups. Valid options are: '\\_\\_all\\_\\_' (restart all at once), '\\_\\_zone\\_\\_' by logical zone, '\\_\\_name\\_\\_' one instance at a time, or a comma-separated list of attributes of the instances",
          "required" : false,
          "type" : "string",
          "default" : "__zone__"
        }, {
          "name" : "shard_init_wait_time",
          "in" : "query",
          "description" : "The time, in seconds, to wait for shards that show no progress of initializing, before rolling the next group (default: 10 minutes)",
          "required" : false,
          "type" : "integer",
          "default" : 600
        } ],
        "responses" : {
          "202" : {
            "description" : "The restart command was issued successfully.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "422" : {
            "description" : "The command sent to a Resource found the Resource in an illegal state, the error message gives more details. (code: `deployments.deployment_resource_plan_change_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_plan_change_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/elasticsearch/{ref_id}/_shutdown" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Shutdown Deployment Elasticsearch Resource",
        "description" : "Shutdown Elasticsearch Resource belonging to a given Deployment.",
        "operationId" : "shutdown-deployment-es-resource",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "hide",
          "in" : "query",
          "description" : "Hide cluster on shutdown. Hidden clusters are not listed by default. Only applicable for Platform administrators.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "skip_snapshot",
          "in" : "query",
          "description" : "If true, will skip taking a snapshot of the cluster before shutting the cluster down (if even possible).",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "400" : {
            "description" : "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.restricted_parameter" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/elasticsearch/{ref_id}/eligible-remote-clusters" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get eligible remote clusters",
        "description" : "Returns the list of deployments which contain eligible remote clusters for the elasticsearch resource.",
        "operationId" : "get-deployment-es-resource-eligible-remote-clusters",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Optional) The search query to run against all deployments containing eligible remote clusters. When not specified, all the eligible deployments are matched.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SearchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of deployments which contains eligible remote clusters for the resource",
            "schema" : {
              "$ref" : "#/definitions/DeploymentsSearchResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "400" : {
            "description" : "The resource specified doesn't yet have a valid version for the current plan or the pending plan. (code: `deployments.resource_does_not_have_a_valid_version`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.resource_does_not_have_a_valid_version" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Remote Clusters"
        }
      }
    },
    "/deployments/{deployment_id}/elasticsearch/{ref_id}/keystore" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get the items in the Elasticsearch resource keystore",
        "description" : "Fetches the current values of the keystore for the Elasticsearch resource.",
        "operationId" : "get-deployment-es-resource-keystore",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The contents of the Elasticsearch keystore",
            "schema" : {
              "$ref" : "#/definitions/KeystoreContents"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.metadata_internal_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.metadata_internal_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment Resources - CRUD"
        }
      },
      "patch" : {
        "tags" : [ "Deployments" ],
        "summary" : "Add or remove items from the Elasticsearch resource keystore",
        "description" : "Adds the specified values to the Elasticsearch keystore, or removes the keys for the unspecified values.",
        "operationId" : "set-deployment-es-resource-keystore",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The new settings that will be applied to the keystore of the Elasticsearch resource.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/KeystoreContents"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The new contents of the Elasticsearch keystore",
            "schema" : {
              "$ref" : "#/definitions/KeystoreContents"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.metadata_internal_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.metadata_internal_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment Resources - CRUD"
        }
      }
    },
    "/deployments/{deployment_id}/elasticsearch/{ref_id}/remote-clusters" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get remote clusters",
        "description" : "Returns the list of remote clusters for the elasticsearch resource.",
        "operationId" : "get-deployment-es-resource-remote-clusters",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of remote clusters for the resource",
            "schema" : {
              "$ref" : "#/definitions/RemoteResources"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Remote Clusters"
        }
      },
      "put" : {
        "tags" : [ "Deployments" ],
        "summary" : "Set remote clusters",
        "description" : "Overwrites or creates the remote clusters for the elasticsearch resource.",
        "operationId" : "set-deployment-es-resource-remote-clusters",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "List of remote clusters for the resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RemoteResources"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "The Remote Clusters were updated",
            "schema" : {
              "$ref" : "#/definitions/EmptyResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Remote Clusters"
        }
      }
    },
    "/deployments/{deployment_id}/enterprise_search/{ref_id}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment Enterprise Search Resource Info",
        "description" : "Get info about an Enterprise Search Resource belonging to a given Deployment.",
        "operationId" : "get-deployment-enterprise-search-resource-info",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "show_metadata",
          "in" : "query",
          "description" : "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plans",
          "in" : "query",
          "description" : "Whether to include the full current and pending plan information in the response - can be large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "show_plan_logs",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plan_history",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the plan history- can be very large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plan_defaults",
          "in" : "query",
          "description" : "If showing plans, whether to show values that are left at their default value (less readable but more informative).",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_settings",
          "in" : "query",
          "description" : "Whether to show cluster settings in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response.",
            "schema" : {
              "$ref" : "#/definitions/EnterpriseSearchResourceInfo"
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Info"
        }
      }
    },
    "/deployments/{deployment_id}/kibana/{ref_id}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment Kibana Resource Info",
        "description" : "Get info about a Kibana Resource belonging to a given Deployment.",
        "operationId" : "get-deployment-kib-resource-info",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "show_metadata",
          "in" : "query",
          "description" : "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plans",
          "in" : "query",
          "description" : "Whether to include the full current and pending plan information in the response - can be large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "show_plan_logs",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plan_history",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the plan history- can be very large per cluster.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_plan_defaults",
          "in" : "query",
          "description" : "If showing plans, whether to show values that are left at their default value (less readable but more informative).",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "convert_legacy_plans",
          "in" : "query",
          "description" : "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true').",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_settings",
          "in" : "query",
          "description" : "Whether to show cluster settings in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response.",
            "schema" : {
              "$ref" : "#/definitions/KibanaResourceInfo"
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Info"
        }
      }
    },
    "/deployments/{deployment_id}/upgrade_assistant/status" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment upgade assistant status",
        "description" : "Get details about an Elasticsearch resource belonging to a given deployment.",
        "operationId" : "get-deployment-upgrade-assistant-status",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The Upgrade Assistant returned the status successfully",
            "schema" : {
              "$ref" : "#/definitions/DeploymentUpgradeAssistantStatusResponse"
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Upgrade Assistant"
        }
      }
    },
    "/deployments/{deployment_id}/{resource_kind}/{ref_id}/_restore" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Restores a shutdown resource",
        "description" : "Restores a shutdown resource belonging to a given Deployment.",
        "operationId" : "restore-deployment-resource",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource_kind",
          "in" : "path",
          "description" : "The kind of resource",
          "required" : true,
          "type" : "string",
          "enum" : [ "elasticsearch", "kibana", "apm", "appsearch", "enterprise_search", "integrations_server" ]
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "restore_snapshot",
          "in" : "query",
          "description" : "Whether or not to restore a snapshot for those resources that allow it.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard Deployment Resource Crud Response",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCrudResponse"
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "400" : {
            "description" : "* The Resource does not have a pending plan. (code: `deployments.resource_does_not_have_a_pending_plan`)\n* The resource is not shut down. (code: `deployments.resource_not_shutdown`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.resource_does_not_have_a_pending_plan", "deployments.resource_not_shutdown" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment Resources - CRUD"
        }
      }
    },
    "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/_start" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Start all instances",
        "description" : "Starts all instances belonging to a Deployment Resource.",
        "operationId" : "start-deployment-resource-instances-all",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource_kind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "The start command was issued successfully.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "403" : {
            "description" : "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.instance_update_prohibited_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/_stop" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Stop all instances",
        "description" : "Stops all instances belonging to a Deployment Resource.",
        "operationId" : "stop-deployment-resource-instances-all",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource_kind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "The stop command was issued successfully.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "403" : {
            "description" : "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.instance_update_prohibited_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/maintenance-mode/_start" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Start maintenance mode (all instances)",
        "description" : "Starts maintenance mode of all instances belonging to a Deployment Resource.",
        "operationId" : "start-deployment-resource-instances-all-maintenance-mode",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource_kind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "The start maintenance command was issued successfully.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "403" : {
            "description" : "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.instance_update_prohibited_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/maintenance-mode/_stop" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Stop maintenance mode (all instances)",
        "description" : "Stops maintenance mode of all instances belonging to a Deployment Resource.",
        "operationId" : "stop-deployment-resource-instances-all-maintenance-mode",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource_kind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "The stop maintenance mode command was issued successfully.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "403" : {
            "description" : "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.instance_update_prohibited_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/_start" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Start instances",
        "description" : "Starts instances belonging to a Deployment Resource.",
        "operationId" : "start-deployment-resource-instances",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource_kind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instance_ids",
          "in" : "path",
          "description" : "A comma-separated list of instance identifiers.",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "ignore_missing",
          "in" : "query",
          "description" : "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "202" : {
            "description" : "The start command was issued successfully.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "403" : {
            "description" : "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.instance_update_prohibited_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/_stop" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Stop instances",
        "description" : "Stops instances belonging to a Deployment Resource.",
        "operationId" : "stop-deployment-resource-instances",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource_kind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instance_ids",
          "in" : "path",
          "description" : "A comma-separated list of instance identifiers.",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "ignore_missing",
          "in" : "query",
          "description" : "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "202" : {
            "description" : "The stop command was issued successfully.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "403" : {
            "description" : "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.instance_update_prohibited_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/maintenance-mode/_start" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Start maintenance mode",
        "description" : "Starts maintenance mode of instances belonging to a Deployment Resource.",
        "operationId" : "start-deployment-resource-maintenance-mode",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource_kind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instance_ids",
          "in" : "path",
          "description" : "A comma-separated list of instance identifiers.",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "ignore_missing",
          "in" : "query",
          "description" : "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "202" : {
            "description" : "The start maintenance command was issued successfully.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "403" : {
            "description" : "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.instance_update_prohibited_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/maintenance-mode/_stop" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Stop maintenance mode",
        "description" : "Stops maintenance mode of instances belonging to a Resource.",
        "operationId" : "stop-deployment-resource-maintenance-mode",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource_kind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instance_ids",
          "in" : "path",
          "description" : "A comma-separated list of instance identifiers.",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "ignore_missing",
          "in" : "query",
          "description" : "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "202" : {
            "description" : "The stop maintenance mode command was issued successfully.",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "403" : {
            "description" : "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.instance_update_prohibited_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/{resource_kind}/{ref_id}/plan/pending" : {
      "delete" : {
        "tags" : [ "Deployments" ],
        "summary" : "Cancel resource pending plan",
        "description" : "Cancels the pending plan of a Resource belonging to a given Deployment.",
        "operationId" : "cancel-deployment-resource-pending-plan",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource_kind",
          "in" : "path",
          "description" : "The kind of resource",
          "required" : true,
          "type" : "string",
          "enum" : [ "elasticsearch", "kibana", "apm", "appsearch", "enterprise_search", "integrations_server" ]
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "force_delete",
          "in" : "query",
          "description" : "When `true`, deletes the pending plan instead of attempting a graceful cancellation. The default is `false`.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "ignore_missing",
          "in" : "query",
          "description" : "When `true`, returns successfully, even when plans are missing. The default is `false`.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard Deployment Resource Crud Response",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCrudResponse"
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "400" : {
            "description" : "The Resource does not have a pending plan. (code: `deployments.resource_does_not_have_a_pending_plan`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.resource_does_not_have_a_pending_plan" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment Resources - CRUD"
        }
      }
    },
    "/deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_restart" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Restart Deployment Stateless Resource",
        "description" : "Restarts a Stateless Resource. If a Resource is active: this command re-applies the existing plan but applies a \"cluster_reboot\", which issues a restart command and waits for it to complete. If a Resource is inactive: this command starts it up with the most recent successful plan.",
        "operationId" : "restart-deployment-stateless-resource",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stateless_resource_kind",
          "in" : "path",
          "description" : "The kind of stateless resource",
          "required" : true,
          "type" : "string",
          "enum" : [ "kibana", "apm", "appsearch", "enterprise_search", "integrations_server" ]
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cancel_pending",
          "in" : "query",
          "description" : "If true, cancels any pending plans before restarting. If false and there are pending plans, returns an error.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "202" : {
            "description" : "The restart command was issued successfully",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "422" : {
            "description" : "The command sent to a Resource found the Resource in an illegal state, the error message gives more details. (code: `deployments.deployment_resource_plan_change_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_plan_change_error" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_shutdown" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Shutdown Deployment Stateless Resource",
        "description" : "Shut down Stateless Resource belonging to a given Deployment.\nKibana cannot be shut down on Elasticsearch Service as it is required for Elasticsearch administrative functions, such as Snapshot Lifecycle Management and version upgrades.",
        "operationId" : "shutdown-deployment-stateless-resource",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stateless_resource_kind",
          "in" : "path",
          "description" : "The kind of stateless resource",
          "required" : true,
          "type" : "string",
          "enum" : [ "kibana", "apm", "appsearch", "enterprise_search", "integrations_server" ]
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "hide",
          "in" : "query",
          "description" : "Hide cluster on shutdown. Hidden clusters are not listed by default. Only applicable for Platform administrators.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "skip_snapshot",
          "in" : "query",
          "description" : "If true, will skip taking a snapshot of the cluster before shutting the cluster down (if even possible)",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceCommandResponse"
            }
          },
          "400" : {
            "description" : "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.restricted_parameter" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_upgrade" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Upgrade Kibana, APM, Integrations Server, AppSearch, Enterprise Search inside Deployment",
        "description" : "Upgrades a running cluster.",
        "operationId" : "upgrade-deployment-stateless-resource",
        "parameters" : [ {
          "name" : "deployment_id",
          "in" : "path",
          "description" : "Identifier for the Deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stateless_resource_kind",
          "in" : "path",
          "description" : "The kind of stateless resource",
          "required" : true,
          "type" : "string",
          "enum" : [ "kibana", "apm", "appsearch", "enterprise_search", "integrations_server" ]
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "User-specified RefId for the Resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "When `true`, returns the update version without performing the upgrade",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "202" : {
            "description" : "The upgrade command was issued successfully. Use the \"GET\" command on the /{deployment_id} resource to monitor progress",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceUpgradeResponse"
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/stack/versions" : {
      "get" : {
        "tags" : [ "Stack" ],
        "summary" : "Get stack versions",
        "description" : "By default, retrieves only the available Elastic Stack versions. To retrieve all of the Elastic Stack versions, use the `show_deleted parameter`.",
        "operationId" : "get-version-stacks",
        "parameters" : [ {
          "name" : "show_deleted",
          "in" : "query",
          "description" : "Whether to show deleted stack versions or not",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "show_unusable",
          "in" : "query",
          "description" : "Whether to show versions that are unusable by the authenticated user",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of all available Elastic Stack versions are retrieved, including the template version and structure.",
            "schema" : {
              "$ref" : "#/definitions/StackVersionConfigs"
            }
          }
        },
        "x-doc" : {
          "tag" : "Stack - Versions - CRUD"
        }
      }
    },
    "/users/auth/keys" : {
      "get" : {
        "tags" : [ "Authentication" ],
        "summary" : "Get all API keys",
        "description" : "Retrieves the metadata for all of the API keys that the user generated.",
        "operationId" : "get-api-keys",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The metadata for the API keys is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/ApiKeysResponse"
            }
          }
        },
        "x-doc" : {
          "tag" : "Authentication"
        }
      },
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Create API key",
        "description" : "Creates a new API key.",
        "operationId" : "create-api-key",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The request to create the API key",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateApiKeyRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The API key is created and returned in the body of the response.",
            "schema" : {
              "$ref" : "#/definitions/ApiKeyResponse"
            }
          },
          "400" : {
            "description" : "The request is invalid. Specify a different request, then try again. (code: `api_keys.invalid_input`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "api_keys.invalid_input" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Authentication"
        }
      },
      "delete" : {
        "tags" : [ "Authentication" ],
        "summary" : "Delete API keys",
        "description" : "Delete or invalidate API keys.",
        "operationId" : "delete-api-keys",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The request to delete API keys",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeleteApiKeysRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The API keys are deleted.",
            "schema" : {
              "$ref" : "#/definitions/EmptyResponse"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Authentication"
        }
      }
    },
    "/users/auth/keys/{api_key_id}" : {
      "get" : {
        "tags" : [ "Authentication" ],
        "summary" : "Get API key",
        "description" : "Retrieves the metadata for an API key.",
        "operationId" : "get-api-key",
        "parameters" : [ {
          "name" : "api_key_id",
          "in" : "path",
          "description" : "The API Key ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The API key metadata is retrieved.",
            "schema" : {
              "$ref" : "#/definitions/ApiKeyResponse"
            }
          },
          "404" : {
            "description" : "The {api_key_id} can't be found. (code: `api_keys.key_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "api_keys.key_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Authentication"
        }
      },
      "delete" : {
        "tags" : [ "Authentication" ],
        "summary" : "Delete API key",
        "description" : "Delete or invalidate the API key.",
        "operationId" : "delete-api-key",
        "parameters" : [ {
          "name" : "api_key_id",
          "in" : "path",
          "description" : "The API Key ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The API key is deleted.",
            "schema" : {
              "$ref" : "#/definitions/EmptyResponse"
            }
          },
          "404" : {
            "description" : "The {api_key_id} can't be found. (code: `api_keys.key_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "api_keys.key_not_found" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          },
          "449" : {
            "description" : "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "type" : "string",
                "description" : "The error codes associated with the response",
                "enum" : [ "root.unauthorized.rbac.elevated_permissions_required" ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BasicFailedReply"
            }
          }
        },
        "x-doc" : {
          "tag" : "Authentication"
        }
      }
    }
  },
  "securityDefinitions" : {
    "apiKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "AbsoluteRefId" : {
      "type" : "object",
      "required" : [ "deployment_id", "ref_id" ],
      "properties" : {
        "deployment_id" : {
          "type" : "string",
          "description" : "The deployment id"
        },
        "ref_id" : {
          "type" : "string",
          "description" : "The reference id of the resource in the given deployment"
        }
      },
      "description" : "A reference to a specific resource of a deployment"
    },
    "AccountResponse" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The account's identifier"
        },
        "trust" : {
          "description" : "Settings related to the level of trust of the clusters in this account",
          "$ref" : "#/definitions/AccountTrustSettings"
        }
      },
      "description" : "An account is the entity that owns deployments, and it is accessed by users. Accounts are isolated from each other."
    },
    "AccountTrustRelationship" : {
      "type" : "object",
      "required" : [ "account_id", "trust_all" ],
      "properties" : {
        "account_id" : {
          "type" : "string",
          "description" : "the ID of the Account"
        },
        "trust_all" : {
          "type" : "boolean",
          "description" : "If true, all clusters in this account will by default be trusted and the `trust_allowlist` is ignored."
        },
        "trust_allowlist" : {
          "type" : "array",
          "description" : "The list of clusters to trust. Only used when `trust_all` is false.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "The trust relationship with the clusters of one account."
    },
    "AccountTrustSettings" : {
      "type" : "object",
      "required" : [ "trust_all" ],
      "properties" : {
        "trust_all" : {
          "type" : "boolean",
          "description" : "If true, all clusters in this account will by default trust all other clusters in the same account"
        }
      },
      "description" : "Settings related to the level of trust of the clusters in this account"
    },
    "AccountUpdateRequest" : {
      "type" : "object",
      "properties" : {
        "trust" : {
          "description" : "Settings related to the level of trust of the clusters in this account",
          "$ref" : "#/definitions/AccountTrustSettings"
        }
      },
      "description" : "A request to update an account"
    },
    "AllocatorMoveRequest" : {
      "type" : "object",
      "required" : [ "from" ],
      "properties" : {
        "from" : {
          "type" : "string",
          "description" : "The allocator id off which all instances in the cluster should be moved"
        },
        "to" : {
          "type" : "array",
          "description" : "An optional list of allocator ids to which the instance(s) should be moved. If not specified then any available allocator can be used (including the current one if it is healthy)",
          "items" : {
            "type" : "string"
          }
        },
        "allocator_down" : {
          "type" : "boolean",
          "description" : "Tells the infrastructure that all instances on the allocator should be considered as permanently down when deciding how to migrate data to new nodes. If left blank then the system will auto-decide (currently: will treat the allocator as up)"
        }
      },
      "description" : "As part of the upgrade plan, identifies the move requests for the Kibana instances or APM Servers on the allocators."
    },
    "ApiKeyResponse" : {
      "type" : "object",
      "required" : [ "creation_date", "description", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The API key ID."
        },
        "user_id" : {
          "type" : "string",
          "description" : "The user ID."
        },
        "description" : {
          "type" : "string",
          "description" : "The API key description. TIP: Useful when you have multiple API keys."
        },
        "key" : {
          "type" : "string",
          "description" : "The API key. TIP: Since the API key is returned only once, save it in a safe place."
        },
        "creation_date" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date/time for when the API key is created."
        }
      },
      "description" : "The response model for an API key."
    },
    "ApiKeysResponse" : {
      "type" : "object",
      "required" : [ "keys" ],
      "properties" : {
        "keys" : {
          "type" : "array",
          "description" : "The list of API keys.",
          "items" : {
            "$ref" : "#/definitions/ApiKeyResponse"
          }
        }
      },
      "description" : "The response model for the API keys."
    },
    "Apm" : {
      "type" : "object",
      "required" : [ "backend_plan", "display_name", "elasticsearch_cluster_ref_id", "ref_id" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "A locally-unique user-specified id"
        },
        "display_name" : {
          "type" : "string",
          "description" : "The human readable name (defaults to the generated cluster id if not specified)"
        },
        "elasticsearch_cluster_ref_id" : {
          "type" : "string",
          "description" : "The user-specified id of the Elasticsearch Cluster that this will link to"
        },
        "backend_plan" : {
          "type" : "object",
          "description" : "The backend plan as JSON"
        }
      },
      "description" : "Holds diagnostics for an APM resource"
    },
    "ApmConfiguration" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "The version of the Apm cluster (must be one of the ECE supported versions, and won't work unless it matches the APM version. Leave blank to auto-detect version.)"
        },
        "docker_image" : {
          "type" : "string",
          "description" : "A docker URI that allows overriding of the default docker image specified for this version"
        },
        "system_settings" : {
          "$ref" : "#/definitions/ApmSystemSettings"
        },
        "user_settings_json" : {
          "type" : "object",
          "description" : "An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided the parameters are on the allowlist and not on the denylist. (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Apm settings)"
        },
        "user_settings_yaml" : {
          "type" : "string",
          "description" : "An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided the parameters are on the allowlist and not on the denylist. (These field together with 'user_settings_override*' and 'system_settings' defines the total set of Apm settings)"
        },
        "user_settings_override_json" : {
          "type" : "object",
          "description" : "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Apm settings)"
        },
        "user_settings_override_yaml" : {
          "type" : "string",
          "description" : "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Apm settings)"
        }
      },
      "description" : "The configuration options for the APM Server."
    },
    "ApmCrudResponse" : {
      "type" : "object",
      "required" : [ "secret_token" ],
      "properties" : {
        "apm_id" : {
          "type" : "string",
          "description" : "For an operation creating or updating an APM server, the Id of that server"
        },
        "secret_token" : {
          "type" : "string",
          "description" : "The secret token for accessing the server"
        },
        "diagnostics" : {
          "type" : "object",
          "description" : "If the endpoint is called with URL param 'validate_only=true', then this contains advanced debug info (the internal plan representation)"
        }
      },
      "description" : "The response to an APM CRUD (create/update-plan) request."
    },
    "ApmInfo" : {
      "type" : "object",
      "required" : [ "elasticsearch_cluster", "external_links", "healthy", "id", "name", "plan_info", "status", "topology" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of the APM"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the APM"
        },
        "elasticsearch_cluster" : {
          "$ref" : "#/definitions/TargetElasticsearchCluster"
        },
        "deployment_id" : {
          "type" : "string",
          "description" : "The id of the deployment that this APM Server belongs to."
        },
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the APM is healthy or not (one or more of the info subsections will have healthy: false)"
        },
        "status" : {
          "type" : "string",
          "description" : "APM status",
          "enum" : [ "initializing", "stopping", "stopped", "rebooting", "restarting", "reconfiguring", "started" ]
        },
        "plan_info" : {
          "$ref" : "#/definitions/ApmPlansInfo"
        },
        "metadata" : {
          "$ref" : "#/definitions/ClusterMetadataInfo"
        },
        "topology" : {
          "$ref" : "#/definitions/ClusterTopologyInfo"
        },
        "external_links" : {
          "type" : "array",
          "description" : "External resources related to the APM",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ExternalHyperlink"
          }
        },
        "links" : {
          "type" : "object",
          "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation",
          "additionalProperties" : {
            "$ref" : "#/definitions/Hyperlink"
          }
        },
        "settings" : {
          "description" : "The cluster metadata settings for the APM",
          "$ref" : "#/definitions/ApmSettings"
        },
        "region" : {
          "type" : "string",
          "description" : "The region that this APM belongs to. Only populated in SaaS or federated ECE."
        },
        "apm_server_mode" : {
          "type" : "string",
          "description" : "The mode APM is operating in.",
          "enum" : [ "Standalone", "Managed" ]
        }
      },
      "description" : "The overview information for the APM Server."
    },
    "ApmPayload" : {
      "type" : "object",
      "required" : [ "elasticsearch_cluster_ref_id", "plan", "ref_id", "region" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "A locally-unique user-specified id for APM"
        },
        "elasticsearch_cluster_ref_id" : {
          "type" : "string",
          "description" : "Alias to the Elasticsearch Cluster to attach APM to"
        },
        "display_name" : {
          "type" : "string",
          "description" : "The human readable name for the APM cluster (default: takes the name of its Elasticsearch cluster)"
        },
        "region" : {
          "type" : "string",
          "description" : "The region where this resource exists"
        },
        "plan" : {
          "$ref" : "#/definitions/ApmPlan"
        },
        "settings" : {
          "description" : "The settings for building this APM cluster",
          "$ref" : "#/definitions/ApmSettings"
        }
      },
      "description" : "An APM creation request paired with the alias of the Elasticsearch cluster it should be paired with"
    },
    "ApmPlan" : {
      "type" : "object",
      "required" : [ "apm" ],
      "properties" : {
        "cluster_topology" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApmTopologyElement"
          }
        },
        "apm" : {
          "$ref" : "#/definitions/ApmConfiguration"
        },
        "transient" : {
          "$ref" : "#/definitions/TransientApmPlanConfiguration"
        }
      },
      "description" : "The plan for the APM Server."
    },
    "ApmPlanControlConfiguration" : {
      "type" : "object",
      "properties" : {
        "timeout" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB)"
        },
        "calm_wait_time" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s"
        },
        "extended_maintenance" : {
          "type" : "boolean",
          "description" : "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster"
        },
        "cluster_reboot" : {
          "type" : "string",
          "description" : "Set to 'forced' to force a reboot as part of the upgrade plan",
          "enum" : [ "forced" ]
        }
      },
      "description" : "The plan control configuration options for the APM Server."
    },
    "ApmPlanInfo" : {
      "type" : "object",
      "required" : [ "healthy", "plan_attempt_log", "warnings" ],
      "properties" : {
        "plan_attempt_id" : {
          "type" : "string",
          "description" : "A UUID for each plan attempt"
        },
        "plan_attempt_name" : {
          "type" : "string",
          "description" : "A human readable name for each plan attempt, only populated when retrieving plan histories"
        },
        "healthy" : {
          "type" : "boolean",
          "description" : "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
        },
        "attempt_start_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "When this plan attempt (ie to apply the plan to the APM) started (ISO format in UTC)"
        },
        "attempt_end_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)"
        },
        "plan_end_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)"
        },
        "plan" : {
          "$ref" : "#/definitions/ApmPlan"
        },
        "plan_attempt_log" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterPlanStepInfo"
          }
        },
        "source" : {
          "description" : "Information describing the source that facilitated the plans current state",
          "$ref" : "#/definitions/ChangeSourceInfo"
        },
        "warnings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterPlanWarning"
          }
        }
      },
      "description" : "Information about the APM Server plan."
    },
    "ApmPlansInfo" : {
      "type" : "object",
      "required" : [ "healthy", "history" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
        },
        "current" : {
          "$ref" : "#/definitions/ApmPlanInfo"
        },
        "pending" : {
          "$ref" : "#/definitions/ApmPlanInfo"
        },
        "history" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApmPlanInfo"
          }
        }
      },
      "description" : "Information about current, pending, and past APM Server plans."
    },
    "ApmResourceInfo" : {
      "type" : "object",
      "required" : [ "elasticsearch_cluster_ref_id", "id", "info", "ref_id", "region" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "The locally-unique user-specified id of a Resource"
        },
        "elasticsearch_cluster_ref_id" : {
          "type" : "string",
          "description" : "The Elasticsearch cluster that this resource depends on."
        },
        "id" : {
          "type" : "string",
          "description" : "The randomly-generated id of a Resource"
        },
        "region" : {
          "type" : "string",
          "description" : "The region where this resource exists"
        },
        "info" : {
          "description" : "Info for the resource.",
          "$ref" : "#/definitions/ApmInfo"
        }
      },
      "description" : "Describes an APM resource belonging to a Deployment"
    },
    "ApmSettings" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/ClusterMetadataSettings"
        }
      },
      "description" : "The settings for the APM Server."
    },
    "ApmSubInfo" : {
      "type" : "object",
      "required" : [ "apm_id", "enabled" ],
      "properties" : {
        "apm_id" : {
          "type" : "string",
          "description" : "The APM cluster Id"
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Whether the associated APM cluster is currently available"
        },
        "links" : {
          "type" : "object",
          "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation",
          "additionalProperties" : {
            "$ref" : "#/definitions/Hyperlink"
          }
        }
      },
      "description" : "Information about the APM Servers associated with the Elasticsearch cluster."
    },
    "ApmSystemSettings" : {
      "type" : "object",
      "properties" : {
        "elasticsearch_url" : {
          "type" : "string",
          "description" : "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)"
        },
        "kibana_url" : {
          "type" : "string",
          "description" : "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)"
        },
        "elasticsearch_username" : {
          "type" : "string",
          "description" : "Optionally override the account within APM - defaults to a system account that always exists (if specified, the password must also be specified). Note that this field is never returned from the API, it is write only."
        },
        "elasticsearch_password" : {
          "type" : "string",
          "description" : "Optionally override the account within APM - defaults to a system account that always exists (if specified, the username must also be specified). Note that this field is never returned from the API, it is write only."
        },
        "secret_token" : {
          "type" : "string",
          "description" : "Optionally override the secret token within APM - defaults to the previously existing secretToken"
        },
        "debug_enabled" : {
          "type" : "boolean",
          "description" : "Optionally enable debug mode for APM servers - defaults false"
        }
      },
      "description" : "A structure that defines a curated subset of the APM Server settings. \nTIP: To define the complete set of APM Server setting, use `ApmSystemSettings` with `user_settings_override_` and `user_settings_`."
    },
    "ApmTopologyElement" : {
      "type" : "object",
      "properties" : {
        "instance_configuration_id" : {
          "type" : "string",
          "description" : "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration."
        },
        "size" : {
          "$ref" : "#/definitions/TopologySize"
        },
        "zone_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of zones in which nodes will be placed"
        },
        "apm" : {
          "$ref" : "#/definitions/ApmConfiguration"
        }
      },
      "description" : "Defines the topology of the APM Server nodes. For example, the number or capacity of the nodes, and where you can allocate the nodes."
    },
    "AppSearch" : {
      "type" : "object",
      "required" : [ "backend_plan", "display_name", "elasticsearch_cluster_ref_id", "ref_id" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "A locally-unique user-specified id"
        },
        "display_name" : {
          "type" : "string",
          "description" : "The human readable name (defaults to the generated cluster id if not specified)"
        },
        "elasticsearch_cluster_ref_id" : {
          "type" : "string",
          "description" : "The user-specified id of the Elasticsearch Cluster that this will link to"
        },
        "backend_plan" : {
          "type" : "object",
          "description" : "The backend plan as JSON"
        }
      },
      "description" : "Holds diagnostics for an AppSearch resource"
    },
    "AppSearchConfiguration" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "The version of the AppSearch cluster (must be one of the ECE supported versions, and won't work unless it matches the Elasticsearch version. Leave blank to auto-detect version.)"
        },
        "docker_image" : {
          "type" : "string",
          "description" : "A docker URI that allows overriding of the default docker image specified for this version"
        },
        "system_settings" : {
          "$ref" : "#/definitions/AppSearchSystemSettings"
        },
        "user_settings_json" : {
          "type" : "object",
          "description" : "An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided the parameters are on the allowlist and not on the denylist. (This field together with 'user_settings_override*' and 'system_settings' defines the total set of AppSearch settings)"
        },
        "user_settings_yaml" : {
          "type" : "string",
          "description" : "An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided the parameters are on the allowlist and not on the denylist. (These field together with 'user_settings_override*' and 'system_settings' defines the total set of AppSearch settings)"
        },
        "user_settings_override_json" : {
          "type" : "object",
          "description" : "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of AppSearch settings)"
        },
        "user_settings_override_yaml" : {
          "type" : "string",
          "description" : "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of AppSearch settings)"
        }
      }
    },
    "AppSearchInfo" : {
      "type" : "object",
      "required" : [ "elasticsearch_cluster", "external_links", "healthy", "id", "name", "plan_info", "status", "topology" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of the App Search"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the App Search"
        },
        "elasticsearch_cluster" : {
          "$ref" : "#/definitions/TargetElasticsearchCluster"
        },
        "deployment_id" : {
          "type" : "string",
          "description" : "The id of the deployment that this App Search belongs to."
        },
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the App Search is healthy or not (one or more of the info subsections will have healthy: false)"
        },
        "status" : {
          "type" : "string",
          "description" : "App Search status",
          "enum" : [ "initializing", "stopping", "stopped", "rebooting", "restarting", "reconfiguring", "started" ]
        },
        "plan_info" : {
          "$ref" : "#/definitions/AppSearchPlansInfo"
        },
        "metadata" : {
          "$ref" : "#/definitions/ClusterMetadataInfo"
        },
        "topology" : {
          "$ref" : "#/definitions/ClusterTopologyInfo"
        },
        "external_links" : {
          "type" : "array",
          "description" : "External resources related to the App Search",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ExternalHyperlink"
          }
        },
        "links" : {
          "type" : "object",
          "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation",
          "additionalProperties" : {
            "$ref" : "#/definitions/Hyperlink"
          }
        },
        "settings" : {
          "description" : "The cluster metadata settings for the App Search",
          "$ref" : "#/definitions/AppSearchSettings"
        },
        "region" : {
          "type" : "string",
          "description" : "The region that this App Search belongs to. Only populated in SaaS or federated ECE."
        }
      },
      "description" : "The overview information for the App Search Server."
    },
    "AppSearchNodeTypes" : {
      "type" : "object",
      "required" : [ "appserver", "worker" ],
      "properties" : {
        "appserver" : {
          "type" : "boolean",
          "description" : "Defines whether this instance should run as Application/API server"
        },
        "worker" : {
          "type" : "boolean",
          "description" : "Defines whether this instance should run as background worker"
        }
      },
      "description" : "Node types to enable for an AppSearch instance"
    },
    "AppSearchPayload" : {
      "type" : "object",
      "required" : [ "elasticsearch_cluster_ref_id", "plan", "ref_id", "region" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "A locally-unique user-specified id for AppSearch"
        },
        "elasticsearch_cluster_ref_id" : {
          "type" : "string",
          "description" : "Alias to the Elasticsearch Cluster to attach AppSearch to"
        },
        "display_name" : {
          "type" : "string",
          "description" : "The human readable name for the AppSearch cluster (default: takes the name of its Elasticsearch cluster)"
        },
        "region" : {
          "type" : "string",
          "description" : "The region where this resource exists"
        },
        "plan" : {
          "$ref" : "#/definitions/AppSearchPlan"
        },
        "settings" : {
          "description" : "The settings for building this AppSearch cluster",
          "$ref" : "#/definitions/AppSearchSettings"
        }
      },
      "description" : "An AppSearch creation request paired with the alias of the Elasticsearch cluster it should be paired with"
    },
    "AppSearchPlan" : {
      "type" : "object",
      "required" : [ "appsearch" ],
      "properties" : {
        "cluster_topology" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AppSearchTopologyElement"
          }
        },
        "appsearch" : {
          "$ref" : "#/definitions/AppSearchConfiguration"
        },
        "transient" : {
          "$ref" : "#/definitions/TransientAppSearchPlanConfiguration"
        }
      },
      "description" : "The plan for the App Search cluster."
    },
    "AppSearchPlanControlConfiguration" : {
      "type" : "object",
      "properties" : {
        "timeout" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB)"
        },
        "calm_wait_time" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s"
        },
        "move_instances" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InstanceMoveRequest"
          }
        },
        "move_allocators" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllocatorMoveRequest"
          }
        },
        "reallocate_instances" : {
          "type" : "boolean",
          "description" : "If true (default: false) does not allow re-using any existing instances currently in the cluster, ie even unchanged instances will be re-created"
        },
        "preferred_allocators" : {
          "type" : "array",
          "description" : "List of allocators on which instances are placed if possible (if not possible/not specified then any available allocator with space is used)",
          "items" : {
            "type" : "string"
          }
        },
        "extended_maintenance" : {
          "type" : "boolean",
          "description" : "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster"
        },
        "cluster_reboot" : {
          "type" : "string",
          "description" : "Set to 'forced' to force a reboot as part of the upgrade plan",
          "enum" : [ "forced" ]
        }
      }
    },
    "AppSearchPlanInfo" : {
      "type" : "object",
      "required" : [ "healthy", "plan_attempt_log", "warnings" ],
      "properties" : {
        "plan_attempt_id" : {
          "type" : "string",
          "description" : "A UUID for each plan attempt"
        },
        "plan_attempt_name" : {
          "type" : "string",
          "description" : "A human readable name for each plan attempt, only populated when retrieving plan histories"
        },
        "healthy" : {
          "type" : "boolean",
          "description" : "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
        },
        "attempt_start_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "When this plan attempt (ie to apply the plan to the App Search) started (ISO format in UTC)"
        },
        "attempt_end_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)"
        },
        "plan_end_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)"
        },
        "plan" : {
          "$ref" : "#/definitions/AppSearchPlan"
        },
        "plan_attempt_log" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterPlanStepInfo"
          }
        },
        "source" : {
          "description" : "Information describing the source that facilitated the plans current state",
          "$ref" : "#/definitions/ChangeSourceInfo"
        },
        "warnings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterPlanWarning"
          }
        }
      },
      "description" : "Information about the App Search Server plan."
    },
    "AppSearchPlansInfo" : {
      "type" : "object",
      "required" : [ "healthy", "history" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
        },
        "current" : {
          "$ref" : "#/definitions/AppSearchPlanInfo"
        },
        "pending" : {
          "$ref" : "#/definitions/AppSearchPlanInfo"
        },
        "history" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AppSearchPlanInfo"
          }
        }
      },
      "description" : "Information about current, pending, and past App Search Server plans."
    },
    "AppSearchResourceInfo" : {
      "type" : "object",
      "required" : [ "elasticsearch_cluster_ref_id", "id", "info", "ref_id", "region" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "The locally-unique user-specified id of a Resource"
        },
        "elasticsearch_cluster_ref_id" : {
          "type" : "string",
          "description" : "The Elasticsearch cluster that this resource depends on."
        },
        "id" : {
          "type" : "string",
          "description" : "The randomly-generated id of a Resource"
        },
        "region" : {
          "type" : "string",
          "description" : "The region where this resource exists"
        },
        "info" : {
          "description" : "Info for the resource.",
          "$ref" : "#/definitions/AppSearchInfo"
        }
      },
      "description" : "Describes an App Search resource belonging to a Deployment"
    },
    "AppSearchSettings" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/ClusterMetadataSettings"
        }
      },
      "description" : "The settings for the App Search."
    },
    "AppSearchSubInfo" : {
      "type" : "object",
      "required" : [ "app_search_id", "enabled" ],
      "properties" : {
        "app_search_id" : {
          "type" : "string",
          "description" : "The App Search Id"
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Whether the associated App Search is currently available"
        },
        "links" : {
          "type" : "object",
          "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation",
          "additionalProperties" : {
            "$ref" : "#/definitions/Hyperlink"
          }
        }
      },
      "description" : "Information about the APM Servers associated with the Elasticsearch cluster."
    },
    "AppSearchSystemSettings" : {
      "type" : "object",
      "properties" : {
        "elasticsearch_url" : {
          "type" : "string",
          "description" : "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)"
        },
        "elasticsearch_username" : {
          "type" : "string",
          "description" : "Optionally override the account within App Search - defaults to a system account that always exists (if specified, the password must also be specified). Note that this field is never returned from the API, it is write only."
        },
        "elasticsearch_password" : {
          "type" : "string",
          "description" : "Optionally override the account within App Search - defaults to a system account that always exists (if specified, the username must also be specified). Note that this field is never returned from the API, it is write only."
        },
        "secret_session_key" : {
          "type" : "string",
          "description" : "Optionally override the secret session key within App Search - defaults to the previously existing secretSession. Note that this field is never returned from the API, it is write only."
        }
      },
      "description" : "This structure defines a curated subset of the AppSearch settings. (This field together with 'user_settings_override*' and  'user_settings*' defines the total set of AppSearch settings)"
    },
    "AppSearchTopologyElement" : {
      "type" : "object",
      "properties" : {
        "node_type" : {
          "description" : "Defines the AppSearch node type",
          "$ref" : "#/definitions/AppSearchNodeTypes"
        },
        "instance_configuration_id" : {
          "type" : "string",
          "description" : "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration."
        },
        "size" : {
          "$ref" : "#/definitions/TopologySize"
        },
        "zone_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of zones in which nodes will be placed"
        },
        "appsearch" : {
          "$ref" : "#/definitions/AppSearchConfiguration"
        }
      },
      "description" : "Defines the topology of the AppSearch nodes (eg number/capacity of nodes, and where they can be allocated)"
    },
    "AutodetectStrategyConfig" : {
      "type" : "object",
      "description" : "A strategy that lets constructor choose the most optimal way to execute the plan."
    },
    "Balance" : {
      "type" : "object",
      "required" : [ "available", "line_items", "remaining" ],
      "properties" : {
        "available" : {
          "type" : "number",
          "format" : "double",
          "description" : "Available balance"
        },
        "remaining" : {
          "type" : "number",
          "format" : "double",
          "description" : "Remaining balance"
        },
        "line_items" : {
          "type" : "array",
          "description" : "A collection of order line items for for an organization",
          "items" : {
            "$ref" : "#/definitions/SimplifiedLineItem"
          }
        }
      },
      "description" : "The available balance for an organization"
    },
    "BasicFailedReply" : {
      "type" : "object",
      "required" : [ "errors" ],
      "properties" : {
        "errors" : {
          "type" : "array",
          "description" : "A list of errors that occurred in the failing request",
          "items" : {
            "$ref" : "#/definitions/BasicFailedReplyElement"
          }
        }
      }
    },
    "BasicFailedReplyElement" : {
      "type" : "object",
      "required" : [ "code", "message" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "A structured code representing the error type that occurred"
        },
        "message" : {
          "type" : "string",
          "description" : "A human readable message describing the error that occurred"
        },
        "fields" : {
          "type" : "array",
          "description" : "If the error can be tied to a specific field or fields in the user request, this lists those fields",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "BoolQuery" : {
      "type" : "object",
      "properties" : {
        "must" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueryContainer"
          }
        },
        "should" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueryContainer"
          }
        },
        "must_not" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueryContainer"
          }
        },
        "filter" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueryContainer"
          }
        },
        "minimum_should_match" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The minimum number of optional should clauses to match."
        }
      },
      "description" : "A query for documents that match boolean combinations of other queries."
    },
    "ChangeSourceInfo" : {
      "type" : "object",
      "required" : [ "action", "date", "facilitator" ],
      "properties" : {
        "facilitator" : {
          "type" : "string",
          "description" : "The service where the change originated from"
        },
        "action" : {
          "type" : "string",
          "description" : "The type of plan change that was initiated"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The time the change was initiated"
        },
        "user_id" : {
          "type" : "string",
          "description" : "The user that requested the change"
        },
        "admin_id" : {
          "type" : "string",
          "description" : "The admin user that requested the change"
        },
        "remote_addresses" : {
          "type" : "array",
          "description" : "The host addresses of the user that originated the change",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "A container for information about the source of a change."
    },
    "ClusterCredentials" : {
      "type" : "object",
      "required" : [ "password", "username" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "description" : "The username of the newly created cluster"
        },
        "password" : {
          "type" : "string",
          "description" : "The password of the newly created cluster"
        }
      },
      "description" : "The username and password for the new Elasticsearch cluster, which is returned from the Elasticsearch cluster `create` command."
    },
    "ClusterCurationSettings" : {
      "type" : "object",
      "required" : [ "specs" ],
      "properties" : {
        "specs" : {
          "type" : "array",
          "description" : "Specifications for curation",
          "items" : {
            "$ref" : "#/definitions/ClusterCurationSpec"
          }
        }
      },
      "description" : "The index curation settings for an Elasticsearch cluster."
    },
    "ClusterCurationSpec" : {
      "type" : "object",
      "required" : [ "index_pattern", "trigger_interval_seconds" ],
      "properties" : {
        "index_pattern" : {
          "type" : "string",
          "description" : "Index matching pattern"
        },
        "trigger_interval_seconds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of seconds after index creation to trigger this spec"
        }
      },
      "description" : "Specifies the conditions to trigger an Elasticsearch cluster curation."
    },
    "ClusterInstanceConfigurationInfo" : {
      "type" : "object",
      "required" : [ "id", "name", "resource" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of the configuration used to create the instance"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the configuration used to create the instance"
        },
        "resource" : {
          "type" : "string",
          "description" : "The resource type of the instance configuration",
          "enum" : [ "memory", "storage" ]
        }
      },
      "description" : "Information about a configuration that creates a Kibana instance or APM Server."
    },
    "ClusterInstanceDiskInfo" : {
      "type" : "object",
      "required" : [ "disk_space_used", "storage_multiplier" ],
      "properties" : {
        "disk_space_available" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "If known, the amount of total disk space available to the container in MB"
        },
        "disk_space_used" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The amount of disk space being used by the service in MB"
        },
        "storage_multiplier" : {
          "type" : "number",
          "format" : "double",
          "description" : "The storage multiplier originally defined to calculate disk space."
        }
      },
      "description" : "Information about the use and storage capacity of a Kibana instance or APM Server."
    },
    "ClusterInstanceInfo" : {
      "type" : "object",
      "required" : [ "container_started", "healthy", "instance_name", "maintenance_mode", "service_running" ],
      "properties" : {
        "instance_name" : {
          "type" : "string",
          "description" : "Whether the instance is healthy (ie started and running)"
        },
        "instance_configuration" : {
          "$ref" : "#/definitions/ClusterInstanceConfigurationInfo"
        },
        "service_version" : {
          "type" : "string",
          "description" : "The version of the service that the instance is running (eg Elasticsearch or Kibana), if available"
        },
        "service_id" : {
          "type" : "string",
          "description" : "The service-specific (eg Elasticsearch) id of the node, if available"
        },
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the instance is healthy (ie started and running)"
        },
        "container_started" : {
          "type" : "boolean",
          "description" : "Whether the container has started (does not tell you anything about the service -ie Elasticsearch- running inside the container)"
        },
        "service_running" : {
          "type" : "boolean",
          "description" : "Whether the service launched inside the container -ie Elasticsearch- is actually running"
        },
        "maintenance_mode" : {
          "type" : "boolean",
          "description" : "Whether the service is is maintenance mode (meaning that the proxy is not routing external traffic to it)"
        },
        "zone" : {
          "type" : "string",
          "description" : "The zone in which this instance is being allocated"
        },
        "allocator_id" : {
          "type" : "string",
          "description" : "The id of the allocator on which this instance is running (if the container is started or starting)"
        },
        "memory" : {
          "$ref" : "#/definitions/ClusterInstanceMemoryInfo"
        },
        "disk" : {
          "$ref" : "#/definitions/ClusterInstanceDiskInfo"
        },
        "service_roles" : {
          "type" : "array",
          "description" : "List of roles assigned to the service running in the instance. Currently only populated for Elasticsearch, with possible values: master,data,ingest,ml",
          "items" : {
            "type" : "string"
          }
        },
        "node_roles" : {
          "type" : "array",
          "description" : "A list of the node roles assigned to the service running in the instance. Currently populated only for Elasticsearch.",
          "items" : {
            "type" : "string",
            "enum" : [ "master", "ingest", "ml", "data_hot", "data_content", "data_warm", "data_cold", "data_frozen", "remote_cluster_client", "transform", "voting_only" ]
          }
        }
      },
      "description" : "Information about each Kibana instance and APM Server in the Elasticsearch cluster."
    },
    "ClusterInstanceMemoryInfo" : {
      "type" : "object",
      "required" : [ "instance_capacity" ],
      "properties" : {
        "instance_capacity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The memory capacity in MB of the instance"
        },
        "instance_capacity_planned" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The planned memory capacity in MB of the instance (only shown when an override is present)"
        },
        "memory_pressure" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The % memory pressure of the service if available (60-75% consider increasing capacity, >75% can incur significant performance and stability issues)"
        },
        "native_memory_pressure" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The % native memory pressure of the service if available"
        }
      },
      "description" : "Information about the memory capacity and use of the Kibana instance or APM Server."
    },
    "ClusterMetadataInfo" : {
      "type" : "object",
      "required" : [ "last_modified", "version" ],
      "properties" : {
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The resource version number of the cluster metadata"
        },
        "last_modified" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The most recent time the cluster metadata was changed (ISO format in UTC)"
        },
        "endpoint" : {
          "type" : "string",
          "description" : "The DNS name of the cluster endpoint, if available"
        },
        "service_url" : {
          "type" : "string",
          "description" : "The full URL to access this deployment resource"
        },
        "aliased_endpoint" : {
          "type" : "string",
          "description" : "The DNS name of the cluster endpoint derived from the deployment alias, if available"
        },
        "aliased_url" : {
          "type" : "string",
          "description" : "The full aliased URL to access this deployment resource"
        },
        "cloud_id" : {
          "type" : "string",
          "description" : "The cloud ID, an encoded string that provides other Elastic services with the necessary information to connect to this Elasticsearch and Kibana (only present if both exist)"
        },
        "raw" : {
          "type" : "object",
          "description" : "An unstructured JSON representation of the public and internal state (can be filtered out via URL parameter). The contents and structure of the `raw` field can change at any time. "
        },
        "ports" : {
          "description" : "The ports that allow communication with the cluster using various protocols.",
          "$ref" : "#/definitions/ClusterMetadataPortInfo"
        },
        "services_urls" : {
          "type" : "array",
          "description" : "A list of the URLs to access services that the resource provides at this time. Note that if the service is not running or has not started yet, the URL to access it won't be available",
          "items" : {
            "$ref" : "#/definitions/ServiceUrl"
          }
        }
      },
      "description" : "Information about the public and internal state, and the configuration settings of an Elasticsearch cluster."
    },
    "ClusterMetadataPortInfo" : {
      "type" : "object",
      "required" : [ "http", "https", "transport_passthrough" ],
      "properties" : {
        "http" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Port where the cluster listens for HTTP traffic"
        },
        "https" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Port where the cluster listens for HTTPS traffic"
        },
        "transport_passthrough" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Port where the cluster listens for transport traffic using TLS"
        }
      },
      "description" : "Information about the ports that allow communication between the Elasticsearch cluster and various protocols."
    },
    "ClusterMetadataSettings" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The display name of the cluster"
        }
      },
      "description" : "The top-level configuration settings for the Elasticsearch cluster."
    },
    "ClusterPlanStepInfo" : {
      "type" : "object",
      "required" : [ "info_log", "stage", "started", "status", "step_id" ],
      "properties" : {
        "step_id" : {
          "type" : "string",
          "description" : "ID of current step"
        },
        "started" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "When the step started (ISO format in UTC)"
        },
        "completed" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "When the step completed (ISO format in UTC)"
        },
        "duration_in_millis" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The duration of the step in MS"
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the step (success, warning, error - warning means something didn't go as expected but it was not serious enough to abort the plan)",
          "enum" : [ "success", "warning", "error", "pending" ]
        },
        "stage" : {
          "type" : "string",
          "description" : "Current stage that the step is in",
          "enum" : [ "starting", "completed", "in_progress" ]
        },
        "info_log" : {
          "type" : "array",
          "description" : "Human readable summaries of the step, including messages for each stage of the step",
          "items" : {
            "$ref" : "#/definitions/ClusterPlanStepLogMessageInfo"
          }
        }
      },
      "description" : "Information about a step in a plan."
    },
    "ClusterPlanStepLogMessageInfo" : {
      "type" : "object",
      "required" : [ "details", "message", "stage", "timestamp" ],
      "properties" : {
        "timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Timestamp marking on info log of step"
        },
        "delta_in_millis" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time in milliseconds since previous log message"
        },
        "stage" : {
          "type" : "string",
          "description" : "Stage that info log message takes place in",
          "enum" : [ "starting", "completed", "in_progress" ]
        },
        "message" : {
          "type" : "string",
          "description" : "Human readable log message"
        },
        "details" : {
          "type" : "object",
          "description" : "A map with details for the log about what happened during the step execution. Keys and values for are always both strings, representing the name of the detail and its value, respectively.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "failure_type" : {
          "type" : "string",
          "description" : "The failure type, in case the step failed"
        }
      },
      "description" : "The log message from a specified stage of an executed step in a plan."
    },
    "ClusterPlanWarning" : {
      "type" : "object",
      "required" : [ "code", "message" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "A unique warning code"
        },
        "message" : {
          "type" : "string",
          "description" : "A description of the warning"
        },
        "step_id" : {
          "type" : "string",
          "description" : "The ID of the step which produced a warning, if any"
        }
      },
      "description" : "Information about a warning from a plan."
    },
    "ClusterSnapshotRetention" : {
      "type" : "object",
      "properties" : {
        "snapshots" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of snapshots to retain"
        },
        "max_age" : {
          "type" : "string",
          "description" : "Total retention period for all snapshots, with the format 'length unit' (space is optional), where unit can be one of: d (day), h (hour), min (minute)"
        }
      },
      "description" : "Information about the Elasticsearch cluster snapshot retention."
    },
    "ClusterSnapshotSettings" : {
      "type" : "object",
      "properties" : {
        "interval" : {
          "type" : "string",
          "description" : "Interval between snapshots, with the format 'length unit' (space is optional), where unit can be one of: d (day), h (hour), min (minute). Default is 30 minutes"
        },
        "retention" : {
          "description" : "Cluster snapshot retention information",
          "$ref" : "#/definitions/ClusterSnapshotRetention"
        },
        "slm" : {
          "type" : "boolean",
          "description" : "When set to true, the deployment will have SLM enabled. Default value is true.",
          "readOnly" : true
        },
        "cron_expression" : {
          "type" : "string",
          "description" : "Cron expression indicating when should snapshots be taken. This can be enabled only if SLM is enabled for the deployment and 'interval' is not present"
        }
      },
      "description" : "The snapshot configuration settings for an Elasticsearch cluster."
    },
    "ClusterSystemAlert" : {
      "type" : "object",
      "required" : [ "alert_type", "instance_name", "timestamp" ],
      "properties" : {
        "timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Timestamp marking the system alert"
        },
        "instance_name" : {
          "type" : "string",
          "description" : "Instance that caused the system alert"
        },
        "alert_type" : {
          "type" : "string",
          "description" : "Type of system alert",
          "enum" : [ "automatic_restart", "heap_dump", "unknown_event" ]
        },
        "url" : {
          "type" : "string",
          "description" : "The URL related to the event. Only applicable for alert_type: heap_dump"
        },
        "exit_code" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The exit_code related to the event. Only applicable for alert_type: slain"
        }
      },
      "description" : "Information about a system alert on an Elasticsearch cluster."
    },
    "ClusterTopologyInfo" : {
      "type" : "object",
      "required" : [ "healthy", "instances" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the cluster topology is healthy (ie all instances are started and the services they run - ie elasticsearch - are available"
        },
        "instances" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterInstanceInfo"
          }
        }
      },
      "description" : "The topology for Elasticsearch clusters, multiple Kibana instances, or multiple APM Servers. The `ClusterTopologyInfo` also includes the instances and containers, and where they are located."
    },
    "Costs" : {
      "type" : "object",
      "required" : [ "data_transfer_and_storage", "resources", "total" ],
      "properties" : {
        "total" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total costs"
        },
        "resources" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total costs associated to the Elastic Cloud resources"
        },
        "data_transfer_and_storage" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total costs associated to Data Transfer and Storage (DTS)"
        }
      },
      "description" : "Costs overview for an organization. All of the costs, credits, trials are expressed in Elastic Consumption Unit (ECU)."
    },
    "CostsOverview" : {
      "type" : "object",
      "required" : [ "costs", "hourly_rate", "trials" ],
      "properties" : {
        "costs" : {
          "description" : "Costs for the organization",
          "$ref" : "#/definitions/Costs"
        },
        "trials" : {
          "type" : "number",
          "format" : "double",
          "description" : "Trial costs for the organization"
        },
        "hourly_rate" : {
          "type" : "number",
          "format" : "double",
          "description" : "Hourly rate applied."
        },
        "balance" : {
          "description" : "Balance for the organization",
          "$ref" : "#/definitions/Balance"
        }
      },
      "description" : "The top level costs overview for an organization. All of the costs, credits, trials are expressed in Elastic Consumption Unit (ECU)."
    },
    "CreateApiKeyRequest" : {
      "type" : "object",
      "required" : [ "description" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "API key description. Useful if there are multiple keys"
        },
        "authentication_token" : {
          "type" : "string",
          "description" : "Deprecated. The security token from reauthenticate API"
        }
      },
      "description" : "The request payload that creates the API keys."
    },
    "CreateExtensionRequest" : {
      "type" : "object",
      "required" : [ "extension_type", "name", "version" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The extension name. Only ASCII alphanumeric and [_.-] characters allowed"
        },
        "description" : {
          "type" : "string",
          "description" : "The extension description."
        },
        "download_url" : {
          "type" : "string",
          "description" : "The URL to download the extension archive."
        },
        "extension_type" : {
          "type" : "string",
          "description" : "The extension type.",
          "enum" : [ "plugin", "bundle" ]
        },
        "version" : {
          "type" : "string",
          "description" : "The Elasticsearch version."
        }
      },
      "description" : "The body of a request to create a new extension"
    },
    "Creates" : {
      "type" : "object",
      "properties" : {
        "elasticsearch" : {
          "type" : "array",
          "description" : "Diagnostics for Elasticsearch clusters",
          "items" : {
            "$ref" : "#/definitions/Elasticsearch"
          }
        },
        "kibana" : {
          "type" : "array",
          "description" : "Diagnostics for Kibanas",
          "items" : {
            "$ref" : "#/definitions/Kibana"
          }
        },
        "apm" : {
          "type" : "array",
          "description" : "Diagnostics for APMs",
          "items" : {
            "$ref" : "#/definitions/Apm"
          }
        },
        "appsearch" : {
          "type" : "array",
          "description" : "Diagnostics for AppSearches",
          "items" : {
            "$ref" : "#/definitions/AppSearch"
          }
        },
        "enterprise_search" : {
          "type" : "array",
          "description" : "Diagnostics for Enterprise Search resources",
          "items" : {
            "$ref" : "#/definitions/EnterpriseSearch"
          }
        }
      },
      "description" : "Holds diagnostics for resources that will be created"
    },
    "DeleteApiKeysRequest" : {
      "type" : "object",
      "required" : [ "keys" ],
      "properties" : {
        "keys" : {
          "type" : "array",
          "description" : "The list of API key IDs.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "The request payload that deletes the API keys."
    },
    "DeploymentCosts" : {
      "type" : "object",
      "required" : [ "costs", "deployment_id", "deployment_name", "hourly_rate" ],
      "properties" : {
        "deployment_id" : {
          "type" : "string",
          "description" : "Elasticsearch deployment id"
        },
        "deployment_name" : {
          "type" : "string",
          "description" : "Elasticsearch deployment name"
        },
        "costs" : {
          "description" : "Costs associated to the deployment",
          "$ref" : "#/definitions/Costs"
        },
        "hourly_rate" : {
          "type" : "number",
          "format" : "double",
          "description" : "Price per hour"
        },
        "period" : {
          "description" : "Period",
          "$ref" : "#/definitions/Period"
        }
      },
      "description" : "Detailed costs for a deployment for an organization. All of the costs are expressed in Elastic Consumption Unit (ECU)."
    },
    "DeploymentCreateMetadata" : {
      "type" : "object",
      "properties" : {
        "tags" : {
          "type" : "array",
          "description" : "Arbitrary user-defined metadata associated with this deployment",
          "items" : {
            "$ref" : "#/definitions/MetadataItem"
          }
        }
      },
      "description" : "Additional information about the new deployment object."
    },
    "DeploymentCreateRequest" : {
      "type" : "object",
      "required" : [ "resources" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "A name for the deployment; otherwise this will be the generated deployment id"
        },
        "resources" : {
          "description" : "The Resources that will belong to this Deployment",
          "$ref" : "#/definitions/DeploymentCreateResources"
        },
        "settings" : {
          "description" : "Additional configuration for this Deployment",
          "$ref" : "#/definitions/DeploymentCreateSettings"
        },
        "metadata" : {
          "description" : "Additional information about this deployment",
          "$ref" : "#/definitions/DeploymentCreateMetadata"
        },
        "alias" : {
          "type" : "string",
          "description" : "A user-defined alias to use in place of Cluster IDs for user-friendly URLs"
        }
      },
      "description" : "A request for creating a new Deployment consisting of multiple clusters"
    },
    "DeploymentCreateResources" : {
      "type" : "object",
      "properties" : {
        "elasticsearch" : {
          "type" : "array",
          "description" : "A list of payloads for Elasticsearch cluster creation.",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchPayload"
          }
        },
        "kibana" : {
          "type" : "array",
          "description" : "A list of payloads for Kibana creation.",
          "items" : {
            "$ref" : "#/definitions/KibanaPayload"
          }
        },
        "apm" : {
          "type" : "array",
          "description" : "A list of payloads for APM creation.",
          "items" : {
            "$ref" : "#/definitions/ApmPayload"
          }
        },
        "appsearch" : {
          "type" : "array",
          "description" : "A list of payloads for AppSearch updates. AppSearch has been replaced by Enterprise Search in the Elastic Stack 7.7 and higher.",
          "items" : {
            "$ref" : "#/definitions/AppSearchPayload"
          }
        },
        "enterprise_search" : {
          "type" : "array",
          "description" : "A list of payloads for Enterprise Search creation.",
          "items" : {
            "$ref" : "#/definitions/EnterpriseSearchPayload"
          }
        }
      },
      "description" : "Describes the resources that will belong to a Deployment"
    },
    "DeploymentCreateResponse" : {
      "type" : "object",
      "required" : [ "created", "id", "name", "resources" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of the deployment"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the deployment"
        },
        "alias" : {
          "type" : "string",
          "description" : "A user-defined deployment alias for user-friendly resource URLs"
        },
        "created" : {
          "type" : "boolean",
          "description" : "Whether or not the deployment was freshly created"
        },
        "resources" : {
          "type" : "array",
          "description" : "List of created resources.",
          "items" : {
            "$ref" : "#/definitions/DeploymentResource"
          }
        },
        "diagnostics" : {
          "description" : "Backend diagnostics. Sent if validation is requested.",
          "$ref" : "#/definitions/DeploymentDiagnostics"
        }
      },
      "description" : "A response returned from the Deployment create endpoint"
    },
    "DeploymentCreateSettings" : {
      "type" : "object",
      "properties" : {
        "ip_filtering_settings" : {
          "description" : "> WARNING\n> This endpoint is deprecated and scheduled to be removed in the next major version. Use traffic filter settings instead.\n\nThe set of rulesets applies to this deployment.",
          "$ref" : "#/definitions/IpFilteringSettings"
        },
        "traffic_filter_settings" : {
          "description" : "The traffic filter rulesets to apply to this deployment.",
          "$ref" : "#/definitions/TrafficFilterSettings"
        },
        "observability" : {
          "description" : "Observability settings for this deployment",
          "$ref" : "#/definitions/DeploymentObservabilitySettings"
        }
      },
      "description" : "Additional configuration for the new deployment object."
    },
    "DeploymentDiagnostics" : {
      "type" : "object",
      "properties" : {
        "creates" : {
          "description" : "Diagnostics for resources to be created",
          "$ref" : "#/definitions/Creates"
        },
        "updates" : {
          "description" : "Diagnostics for existing resources that may be updated",
          "$ref" : "#/definitions/Updates"
        }
      },
      "description" : "Describes the diagnostics for a given Deployment-modifying payload"
    },
    "DeploymentGetResponse" : {
      "type" : "object",
      "required" : [ "healthy", "id", "name", "resources" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "A randomly-generated id of this Deployment"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of this deployment"
        },
        "alias" : {
          "type" : "string",
          "description" : "A user-defined deployment alias for user-friendly resource URLs"
        },
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the deployment is overall healthy or not (one or more of the resource info subsections will have healthy: false)"
        },
        "resources" : {
          "description" : "The Resources that belong to this Deployment",
          "$ref" : "#/definitions/DeploymentResources"
        },
        "settings" : {
          "description" : "Additional configuration for this Deployment",
          "$ref" : "#/definitions/DeploymentSettings"
        },
        "metadata" : {
          "description" : "Additional information about this deployment",
          "$ref" : "#/definitions/DeploymentMetadata"
        },
        "observability" : {
          "description" : "The observability information for this deployment",
          "$ref" : "#/definitions/DeploymentObservability"
        }
      },
      "description" : "Describes a given Deployment"
    },
    "DeploymentLogging" : {
      "type" : "object",
      "required" : [ "healthy" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the deployment logging is healthy or not"
        },
        "urls" : {
          "type" : "object",
          "description" : "The URLs to view this deployment's logs in Kibana",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "issues" : {
          "type" : "array",
          "description" : "Logging health issues for the deployment",
          "items" : {
            "$ref" : "#/definitions/ObservabilityIssue"
          }
        }
      },
      "description" : "Logging information for a deployment"
    },
    "DeploymentLoggingSettings" : {
      "type" : "object",
      "required" : [ "destination" ],
      "properties" : {
        "destination" : {
          "description" : "The destination deployment that this deployment's logs will be sent to",
          "$ref" : "#/definitions/AbsoluteRefId"
        }
      },
      "description" : "The logging settings for a deployment"
    },
    "DeploymentMetadata" : {
      "type" : "object",
      "properties" : {
        "tags" : {
          "type" : "array",
          "description" : "Arbitrary user-defined metadata associated with this deployment",
          "items" : {
            "$ref" : "#/definitions/MetadataItem"
          }
        }
      },
      "description" : "Additional information about the current deployment object."
    },
    "DeploymentMetrics" : {
      "type" : "object",
      "required" : [ "healthy" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the deployment metrics are healthy or not"
        },
        "urls" : {
          "type" : "object",
          "description" : "The URLs to view this deployment's metrics in Kibana",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "issues" : {
          "type" : "array",
          "description" : "Metrics health issues for the deployment",
          "items" : {
            "$ref" : "#/definitions/ObservabilityIssue"
          }
        }
      },
      "description" : "Metrics information for a deployment"
    },
    "DeploymentMetricsSettings" : {
      "type" : "object",
      "required" : [ "destination" ],
      "properties" : {
        "destination" : {
          "description" : "The destination deployment that this deployment's metrics will be sent to",
          "$ref" : "#/definitions/AbsoluteRefId"
        }
      },
      "description" : "The metrics settings for a deployment"
    },
    "DeploymentObservability" : {
      "type" : "object",
      "required" : [ "healthy" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the deployment observability is healthy or not (one or more of the subsections will have healthy: false)"
        },
        "logging" : {
          "description" : "The logging information for the deployment",
          "$ref" : "#/definitions/DeploymentLogging"
        },
        "metrics" : {
          "description" : "The metrics information for the deployment",
          "$ref" : "#/definitions/DeploymentMetrics"
        },
        "issues" : {
          "type" : "array",
          "description" : "General observability health issues for the deployment",
          "items" : {
            "$ref" : "#/definitions/ObservabilityIssue"
          }
        }
      },
      "description" : "Observability information for a deployment"
    },
    "DeploymentObservabilitySettings" : {
      "type" : "object",
      "properties" : {
        "logging" : {
          "description" : "The logging settings for the deployment",
          "$ref" : "#/definitions/DeploymentLoggingSettings"
        },
        "metrics" : {
          "description" : "The metrics settings for the deployment",
          "$ref" : "#/definitions/DeploymentMetricsSettings"
        }
      },
      "description" : "The observability settings for a deployment"
    },
    "DeploymentResource" : {
      "type" : "object",
      "required" : [ "id", "kind", "ref_id", "region" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "A locally-unique friendly alias for this Elasticsearch cluster"
        },
        "elasticsearch_cluster_ref_id" : {
          "type" : "string",
          "description" : "The Elasticsearch cluster that this resource depends on."
        },
        "id" : {
          "type" : "string",
          "description" : "A system-unique id for the created resource"
        },
        "kind" : {
          "type" : "string",
          "description" : "The kind of resource"
        },
        "region" : {
          "type" : "string",
          "description" : "Identifier of the region in which this resource runs."
        },
        "cloud_id" : {
          "type" : "string",
          "description" : "An encoded string that provides other Elastic services with the necessary information to connect to this Elasticsearch and Kibana"
        },
        "credentials" : {
          "description" : "Credentials for logging into a created resource. Only provided on initial create and absent otherwise.",
          "$ref" : "#/definitions/ClusterCredentials"
        },
        "secret_token" : {
          "type" : "string",
          "description" : "Secret token for using a created resource. Only provided on initial create and absent otherwise."
        },
        "warnings" : {
          "type" : "array",
          "description" : "List of warnings generated from validating resource updates",
          "items" : {
            "$ref" : "#/definitions/ReplyWarning"
          }
        }
      },
      "description" : "Data for a deployment resource"
    },
    "DeploymentResourceCommandResponse" : {
      "type" : "object",
      "properties" : {
        "warnings" : {
          "type" : "array",
          "description" : "List of warnings generated from validating command",
          "items" : {
            "$ref" : "#/definitions/ReplyWarning"
          }
        }
      },
      "description" : "Response returned when a command is successfully issued against a given Deployment resource"
    },
    "DeploymentResourceCrudResponse" : {
      "type" : "object",
      "required" : [ "id", "kind", "ref_id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of the deployment"
        },
        "kind" : {
          "type" : "string",
          "description" : "The kind of the stateless resource"
        },
        "ref_id" : {
          "type" : "string",
          "description" : "The reference id of the resource"
        }
      },
      "description" : "A response returned from the Deployment Resource endpoints"
    },
    "DeploymentResourceUpgradeResponse" : {
      "type" : "object",
      "required" : [ "resource_id", "stack_version" ],
      "properties" : {
        "resource_id" : {
          "type" : "string"
        },
        "stack_version" : {
          "type" : "string"
        }
      }
    },
    "DeploymentResources" : {
      "type" : "object",
      "required" : [ "apm", "appsearch", "elasticsearch", "enterprise_search", "kibana" ],
      "properties" : {
        "elasticsearch" : {
          "type" : "array",
          "description" : "List of Elasticsearch resources in your Deployment",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchResourceInfo"
          }
        },
        "kibana" : {
          "type" : "array",
          "description" : "List of Kibana resources in your Deployment",
          "items" : {
            "$ref" : "#/definitions/KibanaResourceInfo"
          }
        },
        "apm" : {
          "type" : "array",
          "description" : "List of Apm resources in your Deployment",
          "items" : {
            "$ref" : "#/definitions/ApmResourceInfo"
          }
        },
        "appsearch" : {
          "type" : "array",
          "description" : "List of App Search resources in your Deployment",
          "items" : {
            "$ref" : "#/definitions/AppSearchResourceInfo"
          }
        },
        "enterprise_search" : {
          "type" : "array",
          "description" : "List of Enterprise Search resources in your Deployment",
          "items" : {
            "$ref" : "#/definitions/EnterpriseSearchResourceInfo"
          }
        }
      },
      "description" : "Describes a resource belonging to a Deployment"
    },
    "DeploymentRestoreResponse" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of the deployment"
        }
      },
      "description" : "A response returned from the Deployment restore endpoint"
    },
    "DeploymentSearchResponse" : {
      "type" : "object",
      "required" : [ "healthy", "id", "name", "resources" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "A randomly-generated id of this Deployment"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of this deployment"
        },
        "alias" : {
          "type" : "string",
          "description" : "A user-defined deployment alias for user-friendly resource URLs"
        },
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the deployment is overall healthy or not (one or more of the resource info subsections will have healthy: false)"
        },
        "resources" : {
          "description" : "The Resources that belong to this Deployment",
          "$ref" : "#/definitions/DeploymentResources"
        },
        "settings" : {
          "description" : "Additional configuration for this Deployment",
          "$ref" : "#/definitions/DeploymentSettings"
        },
        "metadata" : {
          "description" : "Additional information about this deployment",
          "$ref" : "#/definitions/DeploymentMetadata"
        }
      },
      "description" : "Describes a searched Deployment"
    },
    "DeploymentSettings" : {
      "type" : "object",
      "properties" : {
        "ip_filtering_settings" : {
          "description" : "DEPRECATED The set of IP filtering rulesets applies to this deployment.",
          "$ref" : "#/definitions/IpFilteringSettings"
        },
        "traffic_filter_settings" : {
          "description" : "The traffic filter rulesets for this deployment.",
          "$ref" : "#/definitions/TrafficFilterSettings"
        },
        "observability" : {
          "description" : "Logging and monitoring settings for this deployment",
          "$ref" : "#/definitions/DeploymentObservabilitySettings"
        }
      },
      "description" : "Additional configuration about the current deployment object."
    },
    "DeploymentShutdownResponse" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of the deployment"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the deployment"
        },
        "orphaned" : {
          "description" : "Details about orphaned resources",
          "$ref" : "#/definitions/Orphaned"
        }
      },
      "description" : "A response returned from the Deployment shutdown endpoint"
    },
    "DeploymentTemplateInfoV2" : {
      "type" : "object",
      "required" : [ "deployment_template", "id", "instance_configurations", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The unique identifier for the template."
        },
        "name" : {
          "type" : "string",
          "description" : "A human readable name for the template."
        },
        "description" : {
          "type" : "string",
          "description" : "An optional description for the template."
        },
        "deployment_template" : {
          "description" : "The body of the deployment template to use for creating a deployment.",
          "$ref" : "#/definitions/DeploymentCreateRequest"
        },
        "system_owned" : {
          "type" : "boolean",
          "description" : "Whether or not if this is system owned template."
        },
        "source" : {
          "description" : "Information describing the source that created or modified the template.",
          "$ref" : "#/definitions/ChangeSourceInfo"
        },
        "metadata" : {
          "type" : "array",
          "description" : "Optional arbitrary metadata to associate with this template.",
          "items" : {
            "$ref" : "#/definitions/MetadataItem"
          }
        },
        "instance_configurations" : {
          "type" : "array",
          "description" : "List of instance configurations used in the cluster template.",
          "items" : {
            "$ref" : "#/definitions/InstanceConfigurationInfo"
          }
        },
        "order" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Determines the order in which this template should be returned when listed. Templates are returned in ascending order. If not specified, then the template willbe appended to the end of the list."
        },
        "min_version" : {
          "type" : "string",
          "description" : "Minimum stack version required by this template, if any."
        },
        "template_category_id" : {
          "type" : "string",
          "description" : "Provider and version agnostic template identifier used for grouping related template types."
        },
        "kibana_deeplink" : {
          "type" : "array",
          "description" : "The Kibana Deeplink for this type of deployment.",
          "items" : {
            "$ref" : "#/definitions/KibanaDeeplink"
          }
        }
      },
      "description" : "Deployment template detailed information"
    },
    "DeploymentTemplateReference" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The unique identifier of the deployment template"
        },
        "version" : {
          "type" : "string",
          "description" : "A version identifier to disambiguate multiple revisions of the same template"
        }
      },
      "description" : "Specifies the deployment template used to create the plan."
    },
    "DeploymentUpdateMetadata" : {
      "type" : "object",
      "properties" : {
        "tags" : {
          "type" : "array",
          "description" : "Arbitrary user-defined metadata associated with this deployment",
          "items" : {
            "$ref" : "#/definitions/MetadataItem"
          }
        }
      },
      "description" : "Additional information about the current deployment object."
    },
    "DeploymentUpdateRequest" : {
      "type" : "object",
      "required" : [ "prune_orphans" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "A new name for the deployment, otherwise stays the same."
        },
        "prune_orphans" : {
          "type" : "boolean",
          "description" : "Whether or not to prune orphan resources that are no longer mentioned in this request. Note that resourcesare tracked by ref_id, and if a resource's ref_id is changed, any previous running resources created with that previousref_id are considered to be orphaned as well."
        },
        "resources" : {
          "description" : "New information about the Resources that will have this Deployment, otherwise they stay the same",
          "$ref" : "#/definitions/DeploymentUpdateResources"
        },
        "settings" : {
          "description" : "Any new configuration for the current deployment object. If there is no new configuration the value is unchanged.",
          "$ref" : "#/definitions/DeploymentUpdateSettings"
        },
        "metadata" : {
          "description" : "Any new information about the current deployment object. If there is no new information the value is unchanged.",
          "$ref" : "#/definitions/DeploymentUpdateMetadata"
        },
        "alias" : {
          "type" : "string",
          "description" : "A user-defined alias to use in place of Cluster IDs for user-friendly URLs"
        }
      },
      "description" : "A request for updating a Deployment consisting of multiple resources"
    },
    "DeploymentUpdateResources" : {
      "type" : "object",
      "properties" : {
        "elasticsearch" : {
          "type" : "array",
          "description" : "A list of payloads for Elasticsearch cluster updates",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchPayload"
          }
        },
        "kibana" : {
          "type" : "array",
          "description" : "A list of payloads for Kibana updates",
          "items" : {
            "$ref" : "#/definitions/KibanaPayload"
          }
        },
        "apm" : {
          "type" : "array",
          "description" : "A list of payloads for APM updates",
          "items" : {
            "$ref" : "#/definitions/ApmPayload"
          }
        },
        "appsearch" : {
          "type" : "array",
          "description" : "A list of payloads for AppSearch updates. AppSearch has been replaced by Enterprise Search in the Elastic Stack 7.7 and higher",
          "items" : {
            "$ref" : "#/definitions/AppSearchPayload"
          }
        },
        "enterprise_search" : {
          "type" : "array",
          "description" : "A list of payloads for Enterprise Search updates",
          "items" : {
            "$ref" : "#/definitions/EnterpriseSearchPayload"
          }
        }
      },
      "description" : "Describes the Deployment resource updates"
    },
    "DeploymentUpdateResponse" : {
      "type" : "object",
      "required" : [ "id", "name", "resources" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of the deployment"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the deployment"
        },
        "alias" : {
          "type" : "string",
          "description" : "A user-defined alias to use in place of ResourceIds for user-friendly resource URLs"
        },
        "resources" : {
          "type" : "array",
          "description" : "List of resources that are part of the deployment after the update operation.",
          "items" : {
            "$ref" : "#/definitions/DeploymentResource"
          }
        },
        "shutdown_resources" : {
          "description" : "List of resources that have been shut down",
          "$ref" : "#/definitions/Orphaned"
        },
        "diagnostics" : {
          "description" : "Backend diagnostics. Sent if validation is requested.",
          "$ref" : "#/definitions/DeploymentDiagnostics"
        }
      },
      "description" : "A response returned from the Deployment update endpoint"
    },
    "DeploymentUpdateSettings" : {
      "type" : "object",
      "properties" : {
        "observability" : {
          "description" : "Logging and monitoring settings for this deployment. If provided it will change observability settings, if null observability will be removed from the deployment, otherwise will stay the same",
          "$ref" : "#/definitions/DeploymentObservabilitySettings"
        }
      },
      "description" : "Additional configuration for the new deployment object."
    },
    "DeploymentUpgradeAssistantStatusResponse" : {
      "type" : "object",
      "required" : [ "details", "ready_for_upgrade" ],
      "properties" : {
        "ready_for_upgrade" : {
          "type" : "boolean",
          "description" : "A boolean indicating whether or not the cluster is ready to be upgraded"
        },
        "details" : {
          "type" : "string",
          "description" : "Message with information about the number of Elasticsearch and Kibana deprecations"
        }
      },
      "description" : "The status of your cluster and its readiness to be upgraded"
    },
    "DeploymentsCosts" : {
      "type" : "object",
      "required" : [ "deployments", "total_cost" ],
      "properties" : {
        "total_cost" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total cost for all deployments"
        },
        "deployments" : {
          "type" : "array",
          "description" : "Costs of the list of deployments",
          "items" : {
            "$ref" : "#/definitions/DeploymentCosts"
          }
        }
      },
      "description" : "Costs associated to a set of deployments for an organization. All of the costs are expressed in Elastic Consumption Unit (ECU)."
    },
    "DeploymentsListResponse" : {
      "type" : "object",
      "required" : [ "deployments" ],
      "properties" : {
        "deployments" : {
          "type" : "array",
          "description" : "The deployments",
          "items" : {
            "$ref" : "#/definitions/DeploymentsListingData"
          }
        }
      },
      "description" : "Contains a list of deployments"
    },
    "DeploymentsListingData" : {
      "type" : "object",
      "required" : [ "id", "name", "resources" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of this deployment"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of this deployment"
        },
        "resources" : {
          "type" : "array",
          "description" : "List of resources in this deployment",
          "items" : {
            "$ref" : "#/definitions/DeploymentResource"
          }
        }
      }
    },
    "DeploymentsSearchResponse" : {
      "type" : "object",
      "required" : [ "deployments", "return_count" ],
      "properties" : {
        "return_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of deployments actually returned"
        },
        "match_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "If a query is supplied, then the total number of deployments that matched"
        },
        "deployments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DeploymentSearchResponse"
          }
        }
      },
      "description" : "Contains a list of Deployments as result of a search request."
    },
    "DiscreteSizes" : {
      "type" : "object",
      "required" : [ "default_size", "resource", "sizes" ],
      "properties" : {
        "sizes" : {
          "type" : "array",
          "description" : "List of supported sizes",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "default_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The default size"
        },
        "resource" : {
          "type" : "string",
          "description" : "The unit that each size represents",
          "enum" : [ "memory", "storage" ]
        }
      },
      "description" : "Instance sizes that are supported by the Elasticsearch instance, Kibana instance, or APM Server configuration."
    },
    "DtsDimensionCosts" : {
      "type" : "object",
      "required" : [ "cost", "name", "quantity", "rate", "sku", "type" ],
      "properties" : {
        "cost" : {
          "type" : "number",
          "format" : "double",
          "description" : "Costs associated to the Data Transfer and Storage (DTS) dimensions for an organization"
        },
        "name" : {
          "type" : "string",
          "description" : "DTS dimension name"
        },
        "quantity" : {
          "description" : "DTS usage",
          "$ref" : "#/definitions/DtsQuantity"
        },
        "rate" : {
          "description" : "Cost per unit",
          "$ref" : "#/definitions/DtsRate"
        },
        "sku" : {
          "type" : "string",
          "description" : "DTS dimension Stock Keeping Unit (SKU)"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the DTS dimension usage"
        }
      },
      "description" : "The costs associated to a Data Transfer and Storage (DTS) dimension for an organization. All of the costs, credits, and trials are expressed in Elastic Consumption Units (ECU)."
    },
    "DtsQuantity" : {
      "type" : "object",
      "required" : [ "formatted_value", "value" ],
      "properties" : {
        "value" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Raw quantity"
        },
        "formatted_value" : {
          "type" : "string",
          "description" : "Quantity in human readable format"
        }
      },
      "description" : "DTS quantity"
    },
    "DtsRate" : {
      "type" : "object",
      "required" : [ "formatted_value", "value" ],
      "properties" : {
        "value" : {
          "type" : "number",
          "format" : "double",
          "description" : "Raw rate"
        },
        "formatted_value" : {
          "type" : "string",
          "description" : "Rate in human readable format"
        }
      },
      "description" : "DTS Rate"
    },
    "Elasticsearch" : {
      "type" : "object",
      "required" : [ "backend_plan", "display_name", "ref_id" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "A locally-unique user-specified id"
        },
        "display_name" : {
          "type" : "string",
          "description" : "The human readable name for the cluster (defaults to the generated cluster id if not specified)"
        },
        "backend_plan" : {
          "type" : "object",
          "description" : "The backend plan as JSON"
        }
      },
      "description" : "Holds diagnostics for an Elasticsearch cluster"
    },
    "ElasticsearchClusterBlockingIssueElement" : {
      "type" : "object",
      "required" : [ "description", "instances" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "Description of the issue"
        },
        "instances" : {
          "type" : "array",
          "description" : "A list of instances that are affected by the issue",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Information about an issue and the Elasticsearch instance it affects."
    },
    "ElasticsearchClusterBlockingIssues" : {
      "type" : "object",
      "required" : [ "cluster_level", "healthy", "index_level" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the cluster has issues (false) or not (true)"
        },
        "cluster_level" : {
          "type" : "array",
          "description" : "A list of issues that affect availability of entire cluster",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchClusterBlockingIssueElement"
          }
        },
        "index_level" : {
          "type" : "array",
          "description" : "A list of issues that affect availability of the cluster's indices",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchClusterBlockingIssueElement"
          }
        }
      },
      "description" : "Issues that prevent the Elasticsearch cluster or index from correctly operating."
    },
    "ElasticsearchClusterInfo" : {
      "type" : "object",
      "required" : [ "associated_apm_clusters", "associated_appsearch_clusters", "associated_enterprise_search_clusters", "associated_kibana_clusters", "cluster_id", "cluster_name", "elasticsearch", "external_links", "healthy", "metadata", "plan_info", "snapshots", "status", "topology" ],
      "properties" : {
        "cluster_id" : {
          "type" : "string",
          "description" : "The id of the cluster"
        },
        "cluster_name" : {
          "type" : "string",
          "description" : "The name of the cluster"
        },
        "deployment_id" : {
          "type" : "string",
          "description" : "The id of the deployment that this Elasticsearch belongs to."
        },
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the cluster is healthy or not (one or more of the info subsections will have healthy: false)"
        },
        "status" : {
          "type" : "string",
          "description" : "Cluster status",
          "enum" : [ "initializing", "stopping", "stopped", "rebooting", "restarting", "reconfiguring", "started" ]
        },
        "plan_info" : {
          "$ref" : "#/definitions/ElasticsearchClusterPlansInfo"
        },
        "elasticsearch" : {
          "$ref" : "#/definitions/ElasticsearchInfo"
        },
        "metadata" : {
          "$ref" : "#/definitions/ClusterMetadataInfo"
        },
        "topology" : {
          "$ref" : "#/definitions/ClusterTopologyInfo"
        },
        "system_alerts" : {
          "type" : "array",
          "description" : "List of cluster system alerts",
          "items" : {
            "$ref" : "#/definitions/ClusterSystemAlert"
          }
        },
        "associated_kibana_clusters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/KibanaSubClusterInfo"
          }
        },
        "associated_apm_clusters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApmSubInfo"
          }
        },
        "associated_appsearch_clusters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AppSearchSubInfo"
          }
        },
        "associated_enterprise_search_clusters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EnterpriseSearchSubInfo"
          }
        },
        "security" : {
          "$ref" : "#/definitions/ElasticsearchClusterSecurityInfo"
        },
        "elasticsearch_monitoring_info" : {
          "$ref" : "#/definitions/ElasticsearchMonitoringInfo"
        },
        "snapshots" : {
          "$ref" : "#/definitions/SnapshotStatusInfo"
        },
        "external_links" : {
          "type" : "array",
          "description" : "External resources related to the cluster",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ExternalHyperlink"
          }
        },
        "links" : {
          "type" : "object",
          "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation",
          "additionalProperties" : {
            "$ref" : "#/definitions/Hyperlink"
          }
        },
        "settings" : {
          "$ref" : "#/definitions/ElasticsearchClusterSettings"
        },
        "region" : {
          "type" : "string",
          "description" : "The region that this cluster belongs to. Only populated in SaaS or federated ECE."
        }
      },
      "description" : "The information for an Elasticsearch cluster."
    },
    "ElasticsearchClusterPlan" : {
      "type" : "object",
      "required" : [ "cluster_topology", "elasticsearch" ],
      "properties" : {
        "cluster_topology" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchClusterTopologyElement"
          }
        },
        "elasticsearch" : {
          "$ref" : "#/definitions/ElasticsearchConfiguration"
        },
        "deployment_template" : {
          "description" : "Documents which deployment template was used in the creation of this plan",
          "$ref" : "#/definitions/DeploymentTemplateReference"
        },
        "transient" : {
          "$ref" : "#/definitions/TransientElasticsearchPlanConfiguration"
        },
        "autoscaling_enabled" : {
          "type" : "boolean",
          "description" : "Enable autoscaling for this Elasticsearch cluster."
        }
      },
      "description" : "The plan for the Elasticsearch cluster."
    },
    "ElasticsearchClusterPlanInfo" : {
      "type" : "object",
      "required" : [ "healthy", "plan_attempt_log", "warnings" ],
      "properties" : {
        "plan_attempt_id" : {
          "type" : "string",
          "description" : "A UUID for each plan attempt"
        },
        "plan_attempt_name" : {
          "type" : "string",
          "description" : "A human readable name for each plan attempt, only populated when retrieving plan histories"
        },
        "healthy" : {
          "type" : "boolean",
          "description" : "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
        },
        "attempt_start_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "When this plan attempt (ie to apply the plan to the cluster) started (ISO format in UTC)"
        },
        "attempt_end_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)"
        },
        "plan_end_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)"
        },
        "plan" : {
          "$ref" : "#/definitions/ElasticsearchClusterPlan"
        },
        "plan_attempt_log" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterPlanStepInfo"
          }
        },
        "source" : {
          "description" : "Information describing the source that facilitated the plans current state",
          "$ref" : "#/definitions/ChangeSourceInfo"
        },
        "warnings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterPlanWarning"
          }
        }
      },
      "description" : "Information about the Elasticsearch cluster plan."
    },
    "ElasticsearchClusterPlansInfo" : {
      "type" : "object",
      "required" : [ "healthy", "history" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
        },
        "current" : {
          "$ref" : "#/definitions/ElasticsearchClusterPlanInfo"
        },
        "pending" : {
          "$ref" : "#/definitions/ElasticsearchClusterPlanInfo"
        },
        "history" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchClusterPlanInfo"
          }
        }
      },
      "description" : "Information about the current, pending, and past Elasticsearch cluster plans."
    },
    "ElasticsearchClusterRole" : {
      "type" : "object",
      "required" : [ "roles", "username" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "description" : "The username"
        },
        "roles" : {
          "type" : "array",
          "description" : "The list of roles for this user",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "The authorization information for an Elasticsearch cluster user."
    },
    "ElasticsearchClusterSecurityInfo" : {
      "type" : "object",
      "required" : [ "last_modified", "roles", "users", "users_roles", "version" ],
      "properties" : {
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The resource version number of the security settings"
        },
        "last_modified" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The most recent time the security settings were changed (ISO format in UTC)"
        },
        "users" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchClusterUser"
          }
        },
        "roles" : {
          "type" : "object",
          "description" : "An arbitrarily nested JSON object mapping roles to sets of resources and permissions - see the Elasticsearch security documentation for more details on roles"
        },
        "users_roles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchClusterRole"
          }
        }
      },
      "description" : "For 2.x Elasticsearch clusters, specifies the information about the users and roles. For 5.x Elasticsearch clusters, use the Kibana management UI."
    },
    "ElasticsearchClusterSettings" : {
      "type" : "object",
      "properties" : {
        "snapshot" : {
          "description" : "The snapshot settings for this deployment. When provided, snapshot settings are changed as specified. A `null` value reverts the field to the default value. Otherwise, all snapshot settings remain as they were set previously.",
          "$ref" : "#/definitions/ClusterSnapshotSettings"
        },
        "monitoring" : {
          "description" : "The monitoring settings for this deployment. When provided, monitoring settings are changed as specified. A `null` value reverts the field to the default value. Otherwise, all monitoring settings remain as they were set previously.",
          "$ref" : "#/definitions/ManagedMonitoringSettings"
        },
        "metadata" : {
          "$ref" : "#/definitions/ClusterMetadataSettings"
        },
        "curation" : {
          "description" : "The curation settings for this deployment. When provided, curation settings are changed as specified. A `null` value reverts the field to the default value. Otherwise, all curation settings remain as they were set previously.",
          "$ref" : "#/definitions/ClusterCurationSettings"
        },
        "dedicated_masters_threshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Threshold starting from which the number of instances in the cluster results in the introduction of dedicated masters. If the cluster is downscaled to a number of nodes below this one, dedicated masters will be removed. Limit is inclusive. When provided the threshold setting is updated. A `null` value removes the field. Otherwise, the setting remains as it was set previously."
        },
        "ip_filtering" : {
          "description" : "> WARNING\n> This endpoint is deprecated and scheduled to be removed in the next major version. Use traffic filter settings instead.\n\nThe set of rulesets to apply for all the resources in this cluster. When specified, the set of rulesets is updated and the same rulesets will be applied to Kibana and APM clusters as well. If not specified, the rulesets remain as they were set previously.",
          "$ref" : "#/definitions/IpFilteringSettings"
        },
        "traffic_filter" : {
          "description" : "The rulesets to apply to all resources in this cluster. When specified, the set of rulesets is updated and the same rulesets will be applied to Kibana and APM clusters as well. If not specified, the rulesets remain as they were set previously.",
          "$ref" : "#/definitions/TrafficFilterSettings"
        },
        "trust" : {
          "description" : "Configuration of trust with other clusters. When provided, trust settings are changed as specified. A `null` value reverts the field to the default value. Otherwise, all trust settings remain as they were set previously.",
          "$ref" : "#/definitions/ElasticsearchClusterTrustSettings"
        }
      },
      "description" : "The settings for an Elasticsearch cluster."
    },
    "ElasticsearchClusterTopologyElement" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of this topology element"
        },
        "node_type" : {
          "$ref" : "#/definitions/ElasticsearchNodeType"
        },
        "node_roles" : {
          "type" : "array",
          "description" : "The list of node roles for this topology element (ES version >= 7.10). Allowable values are: master, ingest, ml, data_hot, data_content, data_warm, data_cold, data_frozen, remote_cluster_client, transform",
          "items" : {
            "type" : "string",
            "enum" : [ "master", "ingest", "ml", "data_hot", "data_content", "data_warm", "data_cold", "data_frozen", "remote_cluster_client", "transform" ]
          }
        },
        "zone_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The default number of zones in which data nodes will be placed"
        },
        "elasticsearch" : {
          "$ref" : "#/definitions/ElasticsearchConfiguration"
        },
        "instance_configuration_id" : {
          "type" : "string",
          "description" : "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration."
        },
        "size" : {
          "$ref" : "#/definitions/TopologySize"
        },
        "autoscaling_min" : {
          "description" : "The minimum size of this topology element when autoscaling is enabled. This property is only supported, and must be provided, for ML topology elements.",
          "$ref" : "#/definitions/TopologySize"
        },
        "autoscaling_max" : {
          "description" : "The maximum size of this topology element when autoscaling is enabled. This property is only supported, and must be provided, for data and ML topology elements.",
          "$ref" : "#/definitions/TopologySize"
        },
        "autoscaling_policy_override_json" : {
          "type" : "object",
          "description" : "An arbitrary JSON object overriding the default autoscaling policy. Don't set unless you really know what you are doing."
        },
        "topology_element_control" : {
          "$ref" : "#/definitions/TopologyElementControl"
        }
      },
      "description" : "The topology of the Elasticsearch nodes, including the number, capacity, and type of nodes, and where they can be allocated."
    },
    "ElasticsearchClusterTrustSettings" : {
      "type" : "object",
      "properties" : {
        "accounts" : {
          "type" : "array",
          "description" : "The list of trust relationships with different accounts",
          "items" : {
            "$ref" : "#/definitions/AccountTrustRelationship"
          }
        },
        "external" : {
          "type" : "array",
          "description" : "The list of trust relationships with external entities",
          "items" : {
            "$ref" : "#/definitions/ExternalTrustRelationship"
          }
        }
      },
      "description" : "Configuration of trust with other clusters."
    },
    "ElasticsearchClusterUser" : {
      "type" : "object",
      "required" : [ "password_hash", "username" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "description" : "The username"
        },
        "password_hash" : {
          "type" : "string",
          "description" : "The hashed password"
        }
      },
      "description" : "The information about an Elasticsearch cluster user."
    },
    "ElasticsearchConfiguration" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "The version of the Elasticsearch cluster (must be one of the ECE supported versions). Currently cannot be different across the topology (and is generally specified in the globals). Defaults to the latest version if not specified."
        },
        "docker_image" : {
          "type" : "string",
          "description" : "A docker URI that allows overriding of the default docker image specified for this version"
        },
        "system_settings" : {
          "$ref" : "#/definitions/ElasticsearchSystemSettings"
        },
        "user_settings_json" : {
          "type" : "object",
          "description" : "An arbitrary JSON object allowing cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided the parameters arey are on the allowlist and not on the denylist. NOTES: (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Elasticsearch settings)"
        },
        "user_settings_yaml" : {
          "type" : "string",
          "description" : "An arbitrary YAML object allowing cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided the parameters arey are on the allowlist and not on the denylist. NOTES: (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Elasticsearch settings)"
        },
        "user_settings_override_json" : {
          "type" : "object",
          "description" : "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. NOTES: (This field together with 'system_settings' and 'user_settings*' defines the total set of Elasticsearch settings)"
        },
        "user_settings_override_yaml" : {
          "type" : "string",
          "description" : "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. NOTES: (This field together with 'system_settings' and 'user_settings*' defines the total set of Elasticsearch settings)"
        },
        "enabled_built_in_plugins" : {
          "type" : "array",
          "description" : "A list of plugin names from the Elastic-supported subset that are bundled with the version images. NOTES: (Users should consult the Elastic stack objects to see what plugins are available, this is currently only available from the UI)",
          "items" : {
            "type" : "string"
          }
        },
        "user_plugins" : {
          "type" : "array",
          "description" : "A list of admin-uploaded plugin objects that are available for this user.",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchUserPlugin"
          }
        },
        "user_bundles" : {
          "type" : "array",
          "description" : "A list of admin-uploaded bundle objects (eg scripts, synonym files) that are available for this user.",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchUserBundle"
          }
        },
        "curation" : {
          "description" : "Defines the index curation routing for the cluster",
          "$ref" : "#/definitions/ElasticsearchCuration"
        },
        "node_attributes" : {
          "type" : "object",
          "description" : "Defines the Elasticsearch node attributes for the instances in the topology",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "description" : "The Elasticsearch cluster settings. When specified at the top level, provides a field-by-field default. When specified at the topology level, provides the override settings."
    },
    "ElasticsearchCuration" : {
      "type" : "object",
      "required" : [ "from_instance_configuration_id", "to_instance_configuration_id" ],
      "properties" : {
        "from_instance_configuration_id" : {
          "type" : "string",
          "description" : "The source instance configuration"
        },
        "to_instance_configuration_id" : {
          "type" : "string",
          "description" : "The destination instance configuration"
        }
      },
      "description" : "The structure that defines the routing settings for index curation."
    },
    "ElasticsearchDependant" : {
      "type" : "object",
      "required" : [ "id", "kind" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of the orphaned resource"
        },
        "kind" : {
          "type" : "string",
          "description" : "The kind of resource"
        }
      },
      "description" : "Details about an orphaned Elasticsearch-dependent resources."
    },
    "ElasticsearchElasticUserPasswordResetResponse" : {
      "type" : "object",
      "required" : [ "password", "username" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "description" : "The username for the newly-reset password for the given Elasticsearch cluster"
        },
        "password" : {
          "type" : "string",
          "description" : "The newly-reset password for the given Elasticsearch cluster"
        }
      },
      "description" : "Envelope holding the newly-reset password for a cluster's user"
    },
    "ElasticsearchInfo" : {
      "type" : "object",
      "required" : [ "blocking_issues", "healthy", "master_info", "shard_info" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the Elasticsearch cluster is healthy (check the sub-objects for more details if not)"
        },
        "shard_info" : {
          "$ref" : "#/definitions/ElasticsearchShardsInfo"
        },
        "master_info" : {
          "$ref" : "#/definitions/ElasticsearchMasterInfo"
        },
        "blocking_issues" : {
          "$ref" : "#/definitions/ElasticsearchClusterBlockingIssues"
        }
      },
      "description" : "Information about the Elasticsearch cluster."
    },
    "ElasticsearchMasterElement" : {
      "type" : "object",
      "required" : [ "instances", "master_node_id" ],
      "properties" : {
        "master_node_id" : {
          "type" : "string",
          "description" : "The Elasticsearch node id of a master node"
        },
        "master_instance_name" : {
          "type" : "string",
          "description" : "The corresponding instance name of the container hosting the Elasticsearch master node, if available"
        },
        "instances" : {
          "type" : "array",
          "description" : "The names of the instance/container hosting the node belong to the cluster with the given master",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Information about the Elasticsearch instances. For split-brain cases, this also includes sub-clusters."
    },
    "ElasticsearchMasterInfo" : {
      "type" : "object",
      "required" : [ "healthy", "instances_with_no_master", "masters" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the master situation in the cluster is healthy (ie is the number of masters != 1), or do any instances have no master"
        },
        "masters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchMasterElement"
          }
        },
        "instances_with_no_master" : {
          "type" : "array",
          "description" : "A list of any instances with no master",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Information about the master nodes in the Elasticsearch cluster."
    },
    "ElasticsearchMonitoringInfo" : {
      "type" : "object",
      "required" : [ "destination_cluster_ids", "healthy", "last_modified", "last_update_status", "source_cluster_ids" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the Monitoring configuration has been successfully applied"
        },
        "last_modified" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The time the monitoring configuration was last changed"
        },
        "last_update_status" : {
          "type" : "string",
          "description" : "The status message from the last update (successful or not)"
        },
        "source_cluster_ids" : {
          "type" : "array",
          "description" : "The list of clusters Ids from which this cluster is currently receiving monitoring data",
          "items" : {
            "type" : "string"
          }
        },
        "destination_cluster_ids" : {
          "type" : "array",
          "description" : "The list of clusters Ids to which this cluster is currently sending monitoring data",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Information about the monitoring status for the Elasticsearch cluster."
    },
    "ElasticsearchNodeType" : {
      "type" : "object",
      "properties" : {
        "master" : {
          "type" : "boolean",
          "description" : "Defines whether this node can be elected master (default: false)"
        },
        "data" : {
          "type" : "boolean",
          "description" : "Defines whether this node can hold data (default: false)"
        },
        "ingest" : {
          "type" : "boolean",
          "description" : "Defines whether this node can run an ingest pipeline (default: false)"
        },
        "ml" : {
          "type" : "boolean",
          "description" : "Defines whether this node can run ml jobs, valid only for versions 5.4.0 or greater (default: false)"
        }
      },
      "description" : "Controls the combinations of Elasticsearch node types. TIP: By default, the Elasticsearch node is master eligible, can hold data, and run ingest pipelines. WARNING: Do not set for tiebreaker topologies."
    },
    "ElasticsearchPayload" : {
      "type" : "object",
      "required" : [ "plan", "ref_id", "region" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "A locally-unique user-specified id for this Elasticsearch cluster"
        },
        "display_name" : {
          "type" : "string",
          "description" : "The human readable name for the cluster (defaults to the generated cluster id if not specified)"
        },
        "region" : {
          "type" : "string",
          "description" : "The region where this resource exists"
        },
        "plan" : {
          "description" : "The plan for building this Elasticsearch cluster",
          "$ref" : "#/definitions/ElasticsearchClusterPlan"
        },
        "settings" : {
          "description" : "The settings for building this Elasticsearch cluster",
          "$ref" : "#/definitions/ElasticsearchClusterSettings"
        }
      },
      "description" : "An alias for an Elasticsearch Cluster paired with a request for creating one"
    },
    "ElasticsearchPlanControlConfiguration" : {
      "type" : "object",
      "properties" : {
        "timeout" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB). NOTES: A 3 zone cluster with 2 nodes of 2048 each would have a timeout of 4*2048=8192 seconds. Timeout does not include time required to run rollback actions."
        },
        "calm_wait_time" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s"
        },
        "skip_snapshot" : {
          "type" : "boolean",
          "description" : "If true (default: false), does not take (or require) a successful snapshot to be taken before performing any potentially destructive changes to this cluster"
        },
        "max_snapshot_attempts" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "If taking a snapshot (ie unless 'skip_snapshots': true) then will retry on failure at most this number of times (default: 5)"
        },
        "max_snapshot_age" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "When you take a snapshot and 'skip_snapshots' is false, specifies the maximum age in seconds of the most recent snapshot before a new snapshot is created. Default is 300"
        },
        "extended_maintenance" : {
          "type" : "boolean",
          "description" : "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster"
        },
        "cluster_reboot" : {
          "type" : "string",
          "description" : "Set to 'forced' to force a reboot as part of the upgrade plan. NOTES: (ie taking an existing plan and leaving it alone except for setting 'transient.plan_configuration.cluster_reboot': 'forced' will reboot the cluster)",
          "enum" : [ "forced" ]
        }
      },
      "description" : "The configuration settings for the timeout and fallback parameters."
    },
    "ElasticsearchReplicaElement" : {
      "type" : "object",
      "required" : [ "instance_name", "replica_count" ],
      "properties" : {
        "instance_name" : {
          "type" : "string",
          "description" : "The Elastic Cloud name/id of the instance (container)"
        },
        "replica_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of unavailable replicas on this instance"
        }
      },
      "description" : "Information about the unavailable replicas. NOTE: Unlike shards, unavailable replicas indicate a loss of redundancy rather than a loss of availability."
    },
    "ElasticsearchResourceInfo" : {
      "type" : "object",
      "required" : [ "id", "info", "ref_id", "region" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "The locally-unique user-specified id of a Resource"
        },
        "id" : {
          "type" : "string",
          "description" : "The randomly-generated id of a Resource"
        },
        "region" : {
          "type" : "string",
          "description" : "The region where this resource exists"
        },
        "info" : {
          "description" : "Info for the resource.",
          "$ref" : "#/definitions/ElasticsearchClusterInfo"
        }
      },
      "description" : "Describes an Elasticsearch resource belonging to a Deployment"
    },
    "ElasticsearchScriptTypeSettings" : {
      "type" : "object",
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "If enabled (default: true) then scripts are enabled, either for sandboxing languages (by default), or for all installed languages if 'sandbox_mode' is disabled (or for 6.x). NOTES: (Corresponds to the parameter 'script.file|stored/indexed|inline')"
        },
        "sandbox_mode" : {
          "type" : "boolean",
          "description" : "If enabled (default: true) and this script type is enabled, then only the sandbox languages are allowed. By default the sandbox languages are painless, expressions and mustache, but this can be restricted via the 'painless_enabled', 'mustache_enabled' 'expression_enabled' settings.NOTES: Not supported in 6.x. (Corresponds to the parameters 'script.engine.[painless|mustache|expressions].[file|stored|inline]')"
        }
      },
      "description" : "Enables scripting for the specified type and controls other parameters. Store scripts in indexes (`stored`), upload in file bundles (`file`), or use in API requests (`inline`)."
    },
    "ElasticsearchScriptingUserSettings" : {
      "type" : "object",
      "properties" : {
        "painless_enabled" : {
          "type" : "boolean",
          "description" : "(5.x+ only) If enabled (the default) then the painless scripting engine is allowed as a sandboxed language. Sandboxed languages are the only ones allowed if 'sandbox_mode' is set to true. NOTES: (Corresponds to the parameters 'script.engine.painless.[file|stored|inline]')"
        },
        "mustache_enabled" : {
          "type" : "boolean",
          "description" : "(5.x+ only) If enabled (the default) then the mustache scripting engine is allowed as a sandboxed language. Sandboxed languages are the only ones allowed if 'sandbox_mode' is set to true. NOTES: (Corresponds to the parameters 'script.engine.mustache.[file|stored|inline]')"
        },
        "expressions_enabled" : {
          "type" : "boolean",
          "description" : "(5.x+ only) If enabled (the default) then the expressions scripting engine is allowed as a sandboxed language. Sandboxed languages are the only ones allowed if 'sandbox_mode' is set to true. NOTES: (Corresponds to the parameters 'script.engine.expression.[file|stored|inline]')"
        },
        "stored" : {
          "$ref" : "#/definitions/ElasticsearchScriptTypeSettings"
        },
        "file" : {
          "$ref" : "#/definitions/ElasticsearchScriptTypeSettings"
        },
        "inline" : {
          "$ref" : "#/definitions/ElasticsearchScriptTypeSettings"
        }
      },
      "description" : "Controls the languages supported by the Elasticsearch cluster, such as Painless, Mustache, and Expressions. Controls how the languages are used, such as file, index, and inline. TIP: For complex configurations, leave these blank and configure these settings in the user YAML or JSON."
    },
    "ElasticsearchShardElement" : {
      "type" : "object",
      "required" : [ "instance_name", "shard_count" ],
      "properties" : {
        "instance_name" : {
          "type" : "string",
          "description" : "The Elastic Cloud name/id of the instance (container)"
        },
        "shard_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of shards of the given type (available/unavailable) on this instance"
        }
      },
      "description" : "Information about the shards for each Elasticsearch instance container that hosts an Elasticsearch node. TIP: When the shard is unavailable, the cluster is unable to serve all of the data."
    },
    "ElasticsearchShardsInfo" : {
      "type" : "object",
      "required" : [ "available_shards", "healthy", "unavailable_replicas", "unavailable_shards" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the shard situation is healthy (any unavailable shards is unhealthy)"
        },
        "available_shards" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchShardElement"
          }
        },
        "unavailable_shards" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchShardElement"
          }
        },
        "unavailable_replicas" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchReplicaElement"
          }
        }
      },
      "description" : "Information about the shards and replicas that comprise the Elasticsearch indices."
    },
    "ElasticsearchSystemSettings" : {
      "type" : "object",
      "properties" : {
        "scripting" : {
          "$ref" : "#/definitions/ElasticsearchScriptingUserSettings"
        },
        "reindex_whitelist" : {
          "type" : "array",
          "description" : "Limits remote Elasticsearch clusters that can be used as the source for '_reindex' API commands",
          "items" : {
            "type" : "string"
          }
        },
        "use_disk_threshold" : {
          "type" : "boolean",
          "description" : "Whether to factor in the available disk space on a node before deciding whether to allocate new shards to that node or actively relocate shards away from the node (default: true). NOTES: (Corresponds to the parameter 'cluster.routing.allocation.disk.threshold_enabled')"
        },
        "auto_create_index" : {
          "type" : "boolean",
          "description" : "If true (the default), then any write operation on an index that does not currently exist will create it. NOTES: (Corresponds to the parameter 'action.auto_create_index')"
        },
        "enable_close_index" : {
          "type" : "boolean",
          "description" : "Defaults to false on versions <= 7.2.0, true otherwise. If false, then the API commands to close indices are disabled. This is important because Elasticsearch does not snapshot or migrate close indices on versions under 7.2.0, therefore standard Elastic Cloud configuration operations will cause irretrievable loss of indices' data. NOTES: (Corresponds to the parameter 'cluster.indices.close.enable')"
        },
        "destructive_requires_name" : {
          "type" : "boolean",
          "description" : "If true (default is false) then the index deletion API will not support wildcards or '_all'. NOTES: (Corresponds to the parameter 'action.destructive_requires_name')"
        },
        "watcher_trigger_engine" : {
          "type" : "string",
          "description" : "The trigger engine for Watcher, defaults to 'scheduler' - see the xpack documentation for more information. NOTES: (Corresponds to the parameter '(xpack.)watcher.trigger.schedule.engine', depending on version. Ignored from 6.x onwards.)"
        },
        "default_shards_per_index" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "(2.x only - to get the same result in 5.x template mappings must be used) Sets the default number of shards per index, defaulting to 1 if not specified. (Corresponds to the parameter 'index.number_of_shards' in 2.x, not supported in 5.x)"
        },
        "monitoring_collection_interval" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The default interval at which monitoring information from the cluster if collected, if monitoring is enabled. NOTES: (Corresponds to the parameter 'marvel.agent.interval' in 2.x and 'xpack.monitoring.collection.interval' in 5.x)"
        },
        "monitoring_history_duration" : {
          "type" : "string",
          "description" : "The duration for which monitoring history is stored (format '(NUMBER)d' eg '3d' for 3 days). NOTES: ('Corresponds to the parameter xpack.monitoring.history.duration' in 5.x, defaults to '7d')"
        }
      },
      "description" : "A subset of Elasticsearch settings. TIP: To define the complete set of Elasticsearch settings, use `ElasticsearchSystemSettings` with `user_settings_override*` and `user_settings*`."
    },
    "ElasticsearchUserBundle" : {
      "type" : "object",
      "required" : [ "elasticsearch_version", "name", "url" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the bundle"
        },
        "url" : {
          "type" : "string",
          "description" : "The URL of the bundle, which must be accessible from the ECE infrastructure. This URL could be cached by platform, make sure to change it when updating the bundle"
        },
        "elasticsearch_version" : {
          "type" : "string",
          "description" : "The supported Elasticsearch version (must match the version in the plan)"
        }
      },
      "description" : "A list of admin-uploaded bundle objects, such as scripts and synonym files."
    },
    "ElasticsearchUserPlugin" : {
      "type" : "object",
      "required" : [ "elasticsearch_version", "name", "url" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the plugin"
        },
        "url" : {
          "type" : "string",
          "description" : "The URL of the plugin (must be accessible from the ECE infrastructure)"
        },
        "elasticsearch_version" : {
          "type" : "string",
          "description" : "The supported Elasticsearch version (must match the version in the plan)"
        }
      },
      "description" : "A list of admin-uploaded plugin objects."
    },
    "EmptyResponse" : {
      "type" : "object"
    },
    "EnableIlmRequest" : {
      "type" : "object",
      "required" : [ "index_patterns" ],
      "properties" : {
        "index_patterns" : {
          "type" : "array",
          "description" : "A locally-unique user-specified id for Kibana",
          "items" : {
            "$ref" : "#/definitions/IndexPattern"
          }
        }
      },
      "description" : "Request sent to enable ILM on a deployment."
    },
    "EnterpriseSearch" : {
      "type" : "object",
      "required" : [ "backend_plan", "display_name", "elasticsearch_cluster_ref_id", "ref_id" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "A locally-unique user-specified id"
        },
        "display_name" : {
          "type" : "string",
          "description" : "The human readable name (defaults to the generated cluster id if not specified)"
        },
        "elasticsearch_cluster_ref_id" : {
          "type" : "string",
          "description" : "The user-specified id of the Elasticsearch Cluster that this will link to"
        },
        "backend_plan" : {
          "type" : "object",
          "description" : "The backend plan as JSON"
        }
      },
      "description" : "Holds diagnostics for an Enterprise Search resource"
    },
    "EnterpriseSearchConfiguration" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "The version of the Enterprise Search cluster (must be one of the ECE supported versions, and won't work unless it matches the Elasticsearch version. Leave blank to auto-detect version.)"
        },
        "docker_image" : {
          "type" : "string",
          "description" : "A docker URI that allows overriding of the default docker image specified for this version"
        },
        "system_settings" : {
          "$ref" : "#/definitions/EnterpriseSearchSystemSettings"
        },
        "user_settings_json" : {
          "type" : "object",
          "description" : "An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided the parameters are on the allowlist and not on the denylist. (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Enterprise Search settings)"
        },
        "user_settings_yaml" : {
          "type" : "string",
          "description" : "An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided the parameters are on the allowlist and not on the denylist. (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Enterprise Search settings)"
        },
        "user_settings_override_json" : {
          "type" : "object",
          "description" : "An arbitrary JSON object allowing ECE admins to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), i.e. in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Enterprise Search settings)"
        },
        "user_settings_override_yaml" : {
          "type" : "string",
          "description" : "An arbitrary YAML object allowing ECE admins to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), i.e. in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Enterprise Search settings)"
        }
      }
    },
    "EnterpriseSearchInfo" : {
      "type" : "object",
      "required" : [ "elasticsearch_cluster", "external_links", "healthy", "id", "name", "plan_info", "status", "topology" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of the Enterprise Search"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the Enterprise Search"
        },
        "elasticsearch_cluster" : {
          "$ref" : "#/definitions/TargetElasticsearchCluster"
        },
        "deployment_id" : {
          "type" : "string",
          "description" : "The id of the deployment that this Enterprise Search belongs to."
        },
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the Enterprise Search is healthy or not (one or more of the info subsections will have healthy: false)"
        },
        "status" : {
          "type" : "string",
          "description" : "Enterprise Search status",
          "enum" : [ "initializing", "stopping", "stopped", "rebooting", "restarting", "reconfiguring", "started" ]
        },
        "plan_info" : {
          "$ref" : "#/definitions/EnterpriseSearchPlansInfo"
        },
        "metadata" : {
          "$ref" : "#/definitions/ClusterMetadataInfo"
        },
        "topology" : {
          "$ref" : "#/definitions/ClusterTopologyInfo"
        },
        "external_links" : {
          "type" : "array",
          "description" : "External resources related to the Enterprise Search",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ExternalHyperlink"
          }
        },
        "links" : {
          "type" : "object",
          "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation",
          "additionalProperties" : {
            "$ref" : "#/definitions/Hyperlink"
          }
        },
        "settings" : {
          "description" : "The cluster metadata settings for the Enterprise Search",
          "$ref" : "#/definitions/EnterpriseSearchSettings"
        },
        "region" : {
          "type" : "string",
          "description" : "The region that this Enterprise Search belongs to. Only populated in SaaS or federated ECE."
        }
      },
      "description" : "The overview information for the Enterprise Search Server."
    },
    "EnterpriseSearchNodeTypes" : {
      "type" : "object",
      "required" : [ "appserver", "connector", "worker" ],
      "properties" : {
        "appserver" : {
          "type" : "boolean",
          "description" : "Defines whether this instance should run as Application/API server"
        },
        "worker" : {
          "type" : "boolean",
          "description" : "Defines whether this instance should run as background worker"
        },
        "connector" : {
          "type" : "boolean",
          "description" : "Defines whether this instance should run as Connector"
        }
      },
      "description" : "Node types to enable for an Enterprise Search instance"
    },
    "EnterpriseSearchPayload" : {
      "type" : "object",
      "required" : [ "elasticsearch_cluster_ref_id", "plan", "ref_id", "region" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "A locally-unique user-specified id for Enterprise Search"
        },
        "elasticsearch_cluster_ref_id" : {
          "type" : "string",
          "description" : "Alias to the Elasticsearch Cluster to attach Enterprise Search to"
        },
        "display_name" : {
          "type" : "string",
          "description" : "The human readable name for the Enterprise Search cluster (default: takes the name of its Elasticsearch cluster)"
        },
        "region" : {
          "type" : "string",
          "description" : "The region where this resource exists"
        },
        "plan" : {
          "$ref" : "#/definitions/EnterpriseSearchPlan"
        },
        "settings" : {
          "description" : "The settings for building this Enterprise Search cluster",
          "$ref" : "#/definitions/EnterpriseSearchSettings"
        }
      },
      "description" : "An Enterprise Search creation request paired with the alias of the Elasticsearch cluster it should be paired with"
    },
    "EnterpriseSearchPlan" : {
      "type" : "object",
      "required" : [ "enterprise_search" ],
      "properties" : {
        "cluster_topology" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EnterpriseSearchTopologyElement"
          }
        },
        "enterprise_search" : {
          "$ref" : "#/definitions/EnterpriseSearchConfiguration"
        },
        "transient" : {
          "$ref" : "#/definitions/TransientEnterpriseSearchPlanConfiguration"
        }
      },
      "description" : "The plan for the Enterprise Search cluster."
    },
    "EnterpriseSearchPlanControlConfiguration" : {
      "type" : "object",
      "properties" : {
        "timeout" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB)"
        },
        "calm_wait_time" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s"
        },
        "move_instances" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InstanceMoveRequest"
          }
        },
        "move_allocators" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllocatorMoveRequest"
          }
        },
        "reallocate_instances" : {
          "type" : "boolean",
          "description" : "If true (default: false) does not allow re-using any existing instances currently in the cluster, i.e. even unchanged instances will be re-created"
        },
        "preferred_allocators" : {
          "type" : "array",
          "description" : "List of allocators on which instances are placed if possible (if not possible/not specified then any available allocator with space is used)",
          "items" : {
            "type" : "string"
          }
        },
        "extended_maintenance" : {
          "type" : "boolean",
          "description" : "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster"
        },
        "cluster_reboot" : {
          "type" : "string",
          "description" : "Set to 'forced' to force a reboot as part of the upgrade plan",
          "enum" : [ "forced" ]
        }
      }
    },
    "EnterpriseSearchPlanInfo" : {
      "type" : "object",
      "required" : [ "healthy", "plan_attempt_log", "warnings" ],
      "properties" : {
        "plan_attempt_id" : {
          "type" : "string",
          "description" : "A UUID for each plan attempt"
        },
        "plan_attempt_name" : {
          "type" : "string",
          "description" : "A human readable name for each plan attempt, only populated when retrieving plan histories"
        },
        "healthy" : {
          "type" : "boolean",
          "description" : "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
        },
        "attempt_start_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "When this plan attempt (ie to apply the plan to the Enterprise Search) started (ISO format in UTC)"
        },
        "attempt_end_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)"
        },
        "plan_end_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)"
        },
        "plan" : {
          "$ref" : "#/definitions/EnterpriseSearchPlan"
        },
        "plan_attempt_log" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterPlanStepInfo"
          }
        },
        "source" : {
          "description" : "Information describing the source that facilitated the plans current state",
          "$ref" : "#/definitions/ChangeSourceInfo"
        },
        "warnings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterPlanWarning"
          }
        }
      },
      "description" : "Information about the Enterprise Search Server plan."
    },
    "EnterpriseSearchPlansInfo" : {
      "type" : "object",
      "required" : [ "healthy", "history" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
        },
        "current" : {
          "$ref" : "#/definitions/EnterpriseSearchPlanInfo"
        },
        "pending" : {
          "$ref" : "#/definitions/EnterpriseSearchPlanInfo"
        },
        "history" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EnterpriseSearchPlanInfo"
          }
        }
      },
      "description" : "Information about current, pending, and past Enterprise Search Server plans."
    },
    "EnterpriseSearchResourceInfo" : {
      "type" : "object",
      "required" : [ "elasticsearch_cluster_ref_id", "id", "info", "ref_id", "region" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "The locally-unique user-specified id of a Resource"
        },
        "elasticsearch_cluster_ref_id" : {
          "type" : "string",
          "description" : "The Elasticsearch cluster that this resource depends on."
        },
        "id" : {
          "type" : "string",
          "description" : "The randomly-generated id of a Resource"
        },
        "region" : {
          "type" : "string",
          "description" : "The region where this resource exists"
        },
        "info" : {
          "description" : "Info for the resource.",
          "$ref" : "#/definitions/EnterpriseSearchInfo"
        }
      },
      "description" : "Describes an Enterprise Search resource belonging to a Deployment"
    },
    "EnterpriseSearchSettings" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/ClusterMetadataSettings"
        }
      },
      "description" : "The settings for the Enterprise Search."
    },
    "EnterpriseSearchSubInfo" : {
      "type" : "object",
      "required" : [ "enabled", "enterprise_search_id" ],
      "properties" : {
        "enterprise_search_id" : {
          "type" : "string",
          "description" : "The Enterprise Search Id"
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Whether the associated Enterprise Search is currently available"
        },
        "links" : {
          "type" : "object",
          "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation",
          "additionalProperties" : {
            "$ref" : "#/definitions/Hyperlink"
          }
        }
      },
      "description" : "Information about the APM Servers associated with the Elasticsearch cluster."
    },
    "EnterpriseSearchSystemSettings" : {
      "type" : "object",
      "properties" : {
        "elasticsearch_url" : {
          "type" : "string",
          "description" : "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)"
        },
        "elasticsearch_username" : {
          "type" : "string",
          "description" : "Optionally override the account within Enterprise Search - defaults to a system account that always exists (if specified, the password must also be specified). Note that this field is never returned from the API, it is write only."
        },
        "elasticsearch_password" : {
          "type" : "string",
          "description" : "Optionally override the account within Enterprise Search - defaults to a system account that always exists (if specified, the username must also be specified). Note that this field is never returned from the API, it is write only."
        },
        "secret_session_key" : {
          "type" : "string",
          "description" : "Optionally override the secret session key within Enterprise Search - defaults to the previously existing secretSession. Note that this field is never returned from the API, it is write only."
        }
      },
      "description" : "This structure defines a curated subset of the Enterprise Search settings. (This field together with 'user_settings_override*' and  'user_settings*' defines the total set of Enterprise Search settings)"
    },
    "EnterpriseSearchTopologyElement" : {
      "type" : "object",
      "properties" : {
        "node_type" : {
          "description" : "Defines the EnterpriseSearch node type",
          "$ref" : "#/definitions/EnterpriseSearchNodeTypes"
        },
        "instance_configuration_id" : {
          "type" : "string",
          "description" : "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration."
        },
        "size" : {
          "$ref" : "#/definitions/TopologySize"
        },
        "zone_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of zones in which nodes will be placed"
        },
        "enterprise_search" : {
          "$ref" : "#/definitions/EnterpriseSearchConfiguration"
        },
        "allocator_filter" : {
          "type" : "object"
        },
        "node_configuration" : {
          "type" : "string"
        },
        "memory_per_node" : {
          "type" : "object"
        },
        "node_count_per_zone" : {
          "type" : "object"
        }
      },
      "description" : "Defines the topology of the Enterprise Search nodes (e.g. number/capacity of nodes, and where they can be allocated)"
    },
    "ExistsQuery" : {
      "type" : "object",
      "required" : [ "field" ],
      "properties" : {
        "field" : {
          "type" : "string",
          "description" : "The field to check for non-null values in."
        }
      },
      "description" : "Matches documents that have at least one non-`null` value in the original field."
    },
    "Extension" : {
      "type" : "object",
      "required" : [ "extension_type", "id", "name", "url", "version" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The extension ID"
        },
        "name" : {
          "type" : "string",
          "description" : "The extension name."
        },
        "description" : {
          "type" : "string",
          "description" : "The extension description."
        },
        "url" : {
          "type" : "string",
          "description" : "The extension URL to be used in the plan."
        },
        "download_url" : {
          "type" : "string",
          "description" : "The download URL specified during extension creation."
        },
        "extension_type" : {
          "type" : "string",
          "description" : "The extension type.",
          "enum" : [ "plugin", "bundle" ]
        },
        "version" : {
          "type" : "string",
          "description" : "The Elasticsearch version."
        },
        "deployments" : {
          "type" : "array",
          "description" : "List of deployments using this extension. Up to only 10000 deployments will be included in the list.",
          "items" : {
            "type" : "string"
          }
        },
        "file_metadata" : {
          "description" : "The extension file metadata.",
          "$ref" : "#/definitions/ExtensionFileMetadata"
        }
      },
      "description" : "An API extension. It represents clusters' plugins and bundles"
    },
    "ExtensionFileMetadata" : {
      "type" : "object",
      "properties" : {
        "last_modified_date" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time the extension was last modified."
        },
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The extension file size in bytes."
        },
        "url" : {
          "type" : "string",
          "format" : "uri",
          "description" : "The temporary URL to download the extension file. Usable for verification."
        }
      }
    },
    "Extensions" : {
      "type" : "object",
      "required" : [ "extensions" ],
      "properties" : {
        "extensions" : {
          "type" : "array",
          "description" : "The list of extensions.",
          "items" : {
            "$ref" : "#/definitions/Extension"
          }
        }
      },
      "description" : "A collection of extensions"
    },
    "ExternalHyperlink" : {
      "type" : "object",
      "required" : [ "id", "label" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Identifier of the external link"
        },
        "label" : {
          "type" : "string",
          "description" : "Human-readable description of the external link"
        },
        "uri" : {
          "type" : "string",
          "description" : "hyperlink to an external resource"
        }
      }
    },
    "ExternalTrustRelationship" : {
      "type" : "object",
      "required" : [ "trust_all", "trust_relationship_id" ],
      "properties" : {
        "trust_relationship_id" : {
          "type" : "string",
          "description" : "the ID of the external trust relationship"
        },
        "trust_all" : {
          "type" : "boolean",
          "description" : "If true, all clusters in this external entity will be trusted and the `trust_allowlist` is ignored."
        },
        "trust_allowlist" : {
          "type" : "array",
          "description" : "The list of clusters to trust. Only used when `trust_all` is false.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "The trust relationship with external entities (remote environments, remote accounts...)."
    },
    "FilterAssociation" : {
      "type" : "object",
      "required" : [ "entity_type", "id" ],
      "properties" : {
        "entity_type" : {
          "type" : "string",
          "description" : "Type of the traffic filter ruleset association, such as 'deployment', 'cluster'"
        },
        "id" : {
          "type" : "string",
          "description" : "ID of the entity, such as the deployment ID or Elasticsearch cluster ID."
        }
      },
      "description" : "The association with a ruleset or user auth token for a deployment, template, or product."
    },
    "GrowShrinkStrategyConfig" : {
      "type" : "object",
      "description" : "A strategy that creates instances with the new plan, migrates data from the old instances, then shuts down the old instances. `GrowShrinkStrategyConfig` is safer than 'rolling' and ensures single node availability during a plan change, but can be a lot slower on larger clusters."
    },
    "Hyperlink" : {
      "type" : "object",
      "properties" : {
        "need_elevated_permissions" : {
          "type" : "boolean",
          "description" : "Whether the operation requires elevated permissions (when the field is present, elevated permissions are required)."
        }
      }
    },
    "IndexPattern" : {
      "type" : "object",
      "required" : [ "index_pattern", "policy_name" ],
      "properties" : {
        "index_pattern" : {
          "type" : "string",
          "description" : "Index pattern to which the ILM policy will be applied."
        },
        "policy_name" : {
          "type" : "string",
          "description" : "Name of the policy to create"
        },
        "node_attributes" : {
          "type" : "object",
          "description" : "Defines the Elasticsearch node attributes for the warm element of the topology",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "description" : "An index pattern described indicating how it has to be migrated to ILM."
    },
    "InstanceConfigurationInfo" : {
      "type" : "object",
      "required" : [ "discrete_sizes", "instance_type", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier for the instance configuration"
        },
        "name" : {
          "type" : "string",
          "description" : "Display name for the instance configuration."
        },
        "description" : {
          "type" : "string",
          "description" : "Optional description for the instance configuration"
        },
        "instance_type" : {
          "type" : "string",
          "description" : "The type of instance (elasticsearch, kibana)"
        },
        "node_types" : {
          "type" : "array",
          "description" : "Node types (master, data) for the instance",
          "items" : {
            "type" : "string"
          }
        },
        "discrete_sizes" : {
          "description" : "Numerics representing possible instance sizes that the instance configuration supports.",
          "$ref" : "#/definitions/DiscreteSizes"
        },
        "storage_multiplier" : {
          "type" : "number",
          "format" : "double",
          "description" : "Settings for the instance storage multiplier"
        },
        "cpu_multiplier" : {
          "type" : "number",
          "format" : "double",
          "description" : "Settings for the instance CPU multiplier"
        },
        "max_zones" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The maximum number of availability zones in which this instance configuration has allocators. This field will be missing unless explicitly requested with the show_max_zones parameter.",
          "readOnly" : true
        }
      },
      "description" : "The configuration template for Elasticsearch instances, Kibana instances, and APM Servers."
    },
    "InstanceMoveRequest" : {
      "type" : "object",
      "required" : [ "from" ],
      "properties" : {
        "from" : {
          "type" : "string",
          "description" : "The instance id that is going to be moved"
        },
        "to" : {
          "type" : "array",
          "description" : "An optional list of allocator ids to which the instance should be moved. If not specified then any available allocator can be used (including the current one if it is healthy)",
          "items" : {
            "type" : "string"
          }
        },
        "instance_down" : {
          "type" : "boolean",
          "description" : "Tells the infrastructure that the instance should be considered as permanently down when deciding how to migrate data to new nodes. If left blank then the system will automatically decide (currently: will treat the instances as up)"
        }
      },
      "description" : "The request that specifies the Elasticsearch instances, Kibana instances, and APM Servers to move to allocators as part of the upgrade plan."
    },
    "IpFilteringSettings" : {
      "type" : "object",
      "required" : [ "rulesets" ],
      "properties" : {
        "rulesets" : {
          "type" : "array",
          "description" : "IDs of the IP filter rulesets",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "The configuration settings for IP filtering."
    },
    "ItemCosts" : {
      "type" : "object",
      "required" : [ "hours", "instance_count", "kind", "name", "period", "price", "price_per_hour", "sku" ],
      "properties" : {
        "hours" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Resource usage in hours"
        },
        "instance_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of instances"
        },
        "period" : {
          "description" : "Period",
          "$ref" : "#/definitions/Period"
        },
        "kind" : {
          "type" : "string",
          "description" : "Kind of resource"
        },
        "price" : {
          "type" : "number",
          "format" : "double",
          "description" : "Resource price"
        },
        "price_per_hour" : {
          "type" : "number",
          "format" : "double",
          "description" : "Price per hour"
        },
        "name" : {
          "type" : "string",
          "description" : "Resource name"
        },
        "sku" : {
          "type" : "string",
          "description" : "Stock Keeping Unit (SKU)"
        }
      },
      "description" : "Detailed costs associated to an Elastic Cloud Resource for an organization. All of the costs are expressed in Elastic Consumption Unit (ECU)."
    },
    "ItemsCosts" : {
      "type" : "object",
      "required" : [ "costs", "data_transfer_and_storage", "resources" ],
      "properties" : {
        "costs" : {
          "description" : "Costs for the Elastic Cloud resources",
          "$ref" : "#/definitions/Costs"
        },
        "data_transfer_and_storage" : {
          "type" : "array",
          "description" : "List of the detailed costs associated to the Data Transfer and Storage (DTS) dimensions",
          "items" : {
            "$ref" : "#/definitions/DtsDimensionCosts"
          }
        },
        "resources" : {
          "type" : "array",
          "description" : "Costs of the list of resources",
          "items" : {
            "$ref" : "#/definitions/ItemCosts"
          }
        }
      },
      "description" : "Costs associated to a set of Elastic Cloud resources for an organization. All of the costs are expressed in Elastic Consumption Unit (ECU)."
    },
    "KeystoreContents" : {
      "type" : "object",
      "required" : [ "secrets" ],
      "properties" : {
        "secrets" : {
          "type" : "object",
          "description" : "List of secrets",
          "additionalProperties" : {
            "$ref" : "#/definitions/KeystoreSecret"
          }
        }
      },
      "description" : "The contents of the Elasticsearch keystore."
    },
    "KeystoreSecret" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "object",
          "description" : "Value of this setting. This can either be a string or a JSON object that is stored as a JSON string in the keystore. NOTE: When the keystore secret is unspecified, it is removed."
        },
        "as_file" : {
          "type" : "boolean",
          "description" : "Stores the keystore secret as a file. The default is false, which stores the keystore secret as string when value is a plain string, or true when value is an object."
        }
      },
      "description" : "The value that you configure for the Elasticsearch keystore secret."
    },
    "Kibana" : {
      "type" : "object",
      "required" : [ "backend_plan", "display_name", "elasticsearch_cluster_ref_id", "ref_id" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "A locally-unique user-specified id"
        },
        "display_name" : {
          "type" : "string",
          "description" : "The human readable name (defaults to the generated cluster id if not specified)"
        },
        "elasticsearch_cluster_ref_id" : {
          "type" : "string",
          "description" : "The user-specified id of the Elasticsearch Cluster that this will link to"
        },
        "backend_plan" : {
          "type" : "object",
          "description" : "The backend plan as JSON"
        }
      },
      "description" : "Holds diagnostics for a Kibana resource"
    },
    "KibanaClusterInfo" : {
      "type" : "object",
      "required" : [ "cluster_id", "cluster_name", "elasticsearch_cluster", "external_links", "healthy", "metadata", "plan_info", "status", "topology" ],
      "properties" : {
        "cluster_id" : {
          "type" : "string",
          "description" : "The id of the cluster"
        },
        "cluster_name" : {
          "type" : "string",
          "description" : "The name of the cluster"
        },
        "elasticsearch_cluster" : {
          "$ref" : "#/definitions/TargetElasticsearchCluster"
        },
        "deployment_id" : {
          "type" : "string",
          "description" : "The id of the deployment to which this Kibana Server belongs to."
        },
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the cluster is healthy or not (one or more of the info subsections will have healthy: false)"
        },
        "status" : {
          "type" : "string",
          "description" : "Cluster status",
          "enum" : [ "initializing", "stopping", "stopped", "rebooting", "restarting", "reconfiguring", "started" ]
        },
        "plan_info" : {
          "$ref" : "#/definitions/KibanaClusterPlansInfo"
        },
        "metadata" : {
          "$ref" : "#/definitions/ClusterMetadataInfo"
        },
        "topology" : {
          "$ref" : "#/definitions/ClusterTopologyInfo"
        },
        "external_links" : {
          "type" : "array",
          "description" : "External resources related to the cluster",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ExternalHyperlink"
          }
        },
        "links" : {
          "type" : "object",
          "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation",
          "additionalProperties" : {
            "$ref" : "#/definitions/Hyperlink"
          }
        },
        "settings" : {
          "description" : "The cluster metadata settings for a kibana cluster",
          "$ref" : "#/definitions/KibanaClusterSettings"
        },
        "region" : {
          "type" : "string",
          "description" : "The region that this cluster belongs to. Only populated in SaaS or federated ECE."
        }
      },
      "description" : "The top-level object information for a Kibana instance."
    },
    "KibanaClusterPlan" : {
      "type" : "object",
      "required" : [ "kibana" ],
      "properties" : {
        "cluster_topology" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/KibanaClusterTopologyElement"
          }
        },
        "kibana" : {
          "$ref" : "#/definitions/KibanaConfiguration"
        },
        "transient" : {
          "$ref" : "#/definitions/TransientKibanaPlanConfiguration"
        }
      },
      "description" : "The plan for the Kibana instance."
    },
    "KibanaClusterPlanInfo" : {
      "type" : "object",
      "required" : [ "healthy", "plan_attempt_log", "warnings" ],
      "properties" : {
        "plan_attempt_id" : {
          "type" : "string",
          "description" : "A UUID for each plan attempt"
        },
        "plan_attempt_name" : {
          "type" : "string",
          "description" : "A human readable name for each plan attempt, only populated when retrieving plan histories"
        },
        "healthy" : {
          "type" : "boolean",
          "description" : "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
        },
        "attempt_start_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "When this plan attempt (ie to apply the plan to the cluster) started (ISO format in UTC)"
        },
        "attempt_end_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)"
        },
        "plan_end_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)"
        },
        "plan" : {
          "$ref" : "#/definitions/KibanaClusterPlan"
        },
        "plan_attempt_log" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterPlanStepInfo"
          }
        },
        "source" : {
          "description" : "Information describing the source that facilitated the plans current state",
          "$ref" : "#/definitions/ChangeSourceInfo"
        },
        "warnings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterPlanWarning"
          }
        }
      },
      "description" : "Information about the current, pending, or past Kibana instance plan."
    },
    "KibanaClusterPlansInfo" : {
      "type" : "object",
      "required" : [ "healthy", "history" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
        },
        "current" : {
          "$ref" : "#/definitions/KibanaClusterPlanInfo"
        },
        "pending" : {
          "$ref" : "#/definitions/KibanaClusterPlanInfo"
        },
        "history" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/KibanaClusterPlanInfo"
          }
        }
      },
      "description" : "Information about the current, pending, or past Kibana instance plans."
    },
    "KibanaClusterSettings" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/ClusterMetadataSettings"
        }
      },
      "description" : "The settings for multiple Kibana instances."
    },
    "KibanaClusterTopologyElement" : {
      "type" : "object",
      "properties" : {
        "instance_configuration_id" : {
          "type" : "string",
          "description" : "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration."
        },
        "size" : {
          "$ref" : "#/definitions/TopologySize"
        },
        "zone_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of zones in which nodes will be placed"
        },
        "kibana" : {
          "$ref" : "#/definitions/KibanaConfiguration"
        }
      },
      "description" : "The topology of the Kibana nodes, including the number, capacity, and type of nodes, and where they can be allocated."
    },
    "KibanaConfiguration" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "The version of the Kibana cluster (must be one of the ECE supported versions, and won't work unless it matches the Elasticsearch version. Leave blank to auto-detect version.)"
        },
        "docker_image" : {
          "type" : "string",
          "description" : "A docker URI that allows overriding of the default docker image specified for this version"
        },
        "system_settings" : {
          "$ref" : "#/definitions/KibanaSystemSettings"
        },
        "user_settings_json" : {
          "type" : "object",
          "description" : "An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided the parameters are on the allowlist and not on the denylist. (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Kibana settings)"
        },
        "user_settings_yaml" : {
          "type" : "string",
          "description" : "An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided the parameters are on the allowlist and not on the denylist. (These field together with 'user_settings_override*' and 'system_settings' defines the total set of Kibana settings)"
        },
        "user_settings_override_json" : {
          "type" : "object",
          "description" : "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Kibana settings)"
        },
        "user_settings_override_yaml" : {
          "type" : "string",
          "description" : "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Kibana settings)"
        }
      },
      "description" : "The Kibana instance settings. When specified at the top level, provides a field-by-field default. When specified at the topology level, provides the override settings."
    },
    "KibanaDeeplink" : {
      "type" : "object",
      "required" : [ "semver", "uri" ],
      "properties" : {
        "semver" : {
          "type" : "string",
          "description" : "Semver condition when to apply the URI."
        },
        "uri" : {
          "type" : "string",
          "description" : "URI to which the user should be directed."
        }
      },
      "description" : "Embedded object that contains information for linking into a specific Kibana page configured via the template."
    },
    "KibanaPayload" : {
      "type" : "object",
      "required" : [ "elasticsearch_cluster_ref_id", "plan", "ref_id", "region" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "A locally-unique user-specified id for Kibana"
        },
        "elasticsearch_cluster_ref_id" : {
          "type" : "string",
          "description" : "Alias to the Elasticsearch Cluster to attach Kibana to"
        },
        "display_name" : {
          "type" : "string",
          "description" : "The human readable name for the Kibana cluster (default: takes the name of its Elasticsearch cluster)"
        },
        "region" : {
          "type" : "string",
          "description" : "The region where this resource exists"
        },
        "plan" : {
          "$ref" : "#/definitions/KibanaClusterPlan"
        },
        "settings" : {
          "description" : "The settings for building this Kibana cluster",
          "$ref" : "#/definitions/KibanaClusterSettings"
        }
      },
      "description" : "A Kibana creation request paired with the alias of the Elasticsearch cluster it should be paired with"
    },
    "KibanaPlanControlConfiguration" : {
      "type" : "object",
      "properties" : {
        "timeout" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB)"
        },
        "calm_wait_time" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s"
        },
        "extended_maintenance" : {
          "type" : "boolean",
          "description" : "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster"
        },
        "cluster_reboot" : {
          "type" : "string",
          "description" : "Set to 'forced' to force a reboot as part of the upgrade plan",
          "enum" : [ "forced" ]
        }
      },
      "description" : "The configuration settings for the timeout and fallback parameters."
    },
    "KibanaResourceInfo" : {
      "type" : "object",
      "required" : [ "elasticsearch_cluster_ref_id", "id", "info", "ref_id", "region" ],
      "properties" : {
        "ref_id" : {
          "type" : "string",
          "description" : "The locally-unique user-specified id of a Resource"
        },
        "elasticsearch_cluster_ref_id" : {
          "type" : "string",
          "description" : "The Elasticsearch cluster that this resource depends on."
        },
        "id" : {
          "type" : "string",
          "description" : "The randomly-generated id of a Resource"
        },
        "region" : {
          "type" : "string",
          "description" : "The region where this resource exists"
        },
        "info" : {
          "description" : "Info for the resource.",
          "$ref" : "#/definitions/KibanaClusterInfo"
        }
      },
      "description" : "Describes an Kibana resource belonging to a Deployment"
    },
    "KibanaSubClusterInfo" : {
      "type" : "object",
      "required" : [ "enabled", "kibana_id" ],
      "properties" : {
        "kibana_id" : {
          "type" : "string",
          "description" : "The Kibana cluster Id"
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Whether the associated Kibana cluster is currently available"
        },
        "links" : {
          "type" : "object",
          "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation",
          "additionalProperties" : {
            "$ref" : "#/definitions/Hyperlink"
          }
        }
      },
      "description" : "Information about the Kibana instances associated with the Elasticsearch cluster."
    },
    "KibanaSystemSettings" : {
      "type" : "object",
      "properties" : {
        "elasticsearch_url" : {
          "type" : "string",
          "description" : "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)"
        },
        "elasticsearch_username" : {
          "type" : "string",
          "description" : "Optionally override the account within Elasticsearch - defaults to a system account that always exists (if specified, the password must also be specified). Note that this field is never returned from the API, it is write only."
        },
        "elasticsearch_password" : {
          "type" : "string",
          "description" : "Optionally override the account within Elasticsearch - defaults to a system account that always exists (if specified, the username must also be specified). Note that this field is never returned from the API, it is write only."
        }
      },
      "description" : "A subset of Kibana settings. TIP: To define the complete set of Elasticsearch settings, use `KibanaSystemSettings` with `user_settings_override_` and `user_settings_`."
    },
    "ManagedMonitoringSettings" : {
      "type" : "object",
      "required" : [ "target_cluster_id" ],
      "properties" : {
        "target_cluster_id" : {
          "type" : "string",
          "description" : "The Id of the target cluster to which to send monitoring information"
        }
      },
      "description" : "The settings for sending monitoring information to another cluster."
    },
    "MatchAllQuery" : {
      "type" : "object",
      "description" : "A query that matches all documents."
    },
    "MatchNoneQuery" : {
      "type" : "object",
      "description" : "A query that doesn't match any documents."
    },
    "MatchQuery" : {
      "type" : "object",
      "required" : [ "query" ],
      "properties" : {
        "query" : {
          "type" : "string",
          "description" : "The text/numeric/date to query for."
        },
        "operator" : {
          "type" : "string",
          "description" : "The operator flag can be set to or or and to control the boolean clauses (defaults to or)."
        },
        "minimum_should_match" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The minimum number of optional should clauses to match."
        },
        "analyzer" : {
          "type" : "string",
          "description" : "The analyzer that will be used to perform the analysis process on the text. Defaults to the analyzer that was used to index the field."
        }
      },
      "description" : "Consumes and analyzes text, numbers, and dates, then constructs a query."
    },
    "MetadataItem" : {
      "type" : "object",
      "required" : [ "key", "value" ],
      "properties" : {
        "key" : {
          "type" : "string",
          "description" : "The metadata field name"
        },
        "value" : {
          "type" : "string",
          "description" : "The metadata value"
        }
      },
      "description" : "The key-value pair."
    },
    "NestedQuery" : {
      "type" : "object",
      "required" : [ "path", "query" ],
      "properties" : {
        "query" : {
          "description" : "The actual query to execute on the nested objects.",
          "$ref" : "#/definitions/QueryContainer"
        },
        "path" : {
          "type" : "string",
          "description" : "The path to the nested object."
        },
        "score_mode" : {
          "type" : "string",
          "description" : "Allows to specify how inner children matching affects score of the parent. Refer to the Elasticsearch documentation for details.",
          "enum" : [ "avg", "sum", "min", "max", "none" ]
        }
      },
      "description" : "A query that matches nested objects."
    },
    "ObservabilityIssue" : {
      "type" : "object",
      "required" : [ "description", "severity" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "A user-friendly description of the observability health issue"
        },
        "severity" : {
          "type" : "string",
          "description" : "Severity of the health issue"
        }
      },
      "description" : "Observability health issue"
    },
    "Orphaned" : {
      "type" : "object",
      "required" : [ "apm", "appsearch", "elasticsearch", "enterprise_search", "kibana" ],
      "properties" : {
        "elasticsearch" : {
          "type" : "array",
          "description" : "List of orphaned Elasticsearch resources",
          "items" : {
            "$ref" : "#/definitions/OrphanedElasticsearch"
          }
        },
        "kibana" : {
          "type" : "array",
          "description" : "List of orphaned Kibana resource ids",
          "items" : {
            "type" : "string"
          }
        },
        "apm" : {
          "type" : "array",
          "description" : "List of orphaned APM resource ids",
          "items" : {
            "type" : "string"
          }
        },
        "appsearch" : {
          "type" : "array",
          "description" : "List of orphaned AppSearch resource ids",
          "items" : {
            "type" : "string"
          }
        },
        "enterprise_search" : {
          "type" : "array",
          "description" : "List of orphaned Enterprise Search resource ids",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Details about orphaned resources."
    },
    "OrphanedElasticsearch" : {
      "type" : "object",
      "required" : [ "dependents", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id of the orphaned resource"
        },
        "dependents" : {
          "type" : "array",
          "description" : "List of orphaned dependent resources",
          "items" : {
            "$ref" : "#/definitions/ElasticsearchDependant"
          }
        }
      },
      "description" : "Details about an orphaned Elasticsearch resources."
    },
    "Period" : {
      "type" : "object",
      "required" : [ "end", "start" ],
      "properties" : {
        "start" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Start"
        },
        "end" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "End"
        }
      },
      "description" : "Period"
    },
    "PlanStrategy" : {
      "type" : "object",
      "properties" : {
        "rolling" : {
          "$ref" : "#/definitions/RollingStrategyConfig"
        },
        "grow_and_shrink" : {
          "$ref" : "#/definitions/GrowShrinkStrategyConfig"
        },
        "rolling_grow_and_shrink" : {
          "$ref" : "#/definitions/RollingGrowShrinkStrategyConfig"
        },
        "autodetect" : {
          "$ref" : "#/definitions/AutodetectStrategyConfig"
        }
      },
      "description" : "The options for performing a plan change. Specify only one property each time. The default is `grow_and_shrink`."
    },
    "PrefixQuery" : {
      "type" : "object",
      "required" : [ "value" ],
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "The prefix to search for."
        },
        "boost" : {
          "type" : "number",
          "format" : "float",
          "description" : "An optional boost value to apply to the query."
        }
      },
      "description" : "The query that matches documents with fields that contain terms with a specified, not analyzed, prefix."
    },
    "QueryContainer" : {
      "type" : "object",
      "properties" : {
        "match" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/MatchQuery"
          }
        },
        "match_all" : {
          "$ref" : "#/definitions/MatchAllQuery"
        },
        "match_none" : {
          "$ref" : "#/definitions/MatchNoneQuery"
        },
        "term" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/TermQuery"
          }
        },
        "bool" : {
          "$ref" : "#/definitions/BoolQuery"
        },
        "query_string" : {
          "$ref" : "#/definitions/QueryStringQuery"
        },
        "nested" : {
          "$ref" : "#/definitions/NestedQuery"
        },
        "prefix" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/PrefixQuery"
          }
        },
        "exists" : {
          "$ref" : "#/definitions/ExistsQuery"
        },
        "range" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/RangeQuery"
          }
        }
      },
      "description" : "The container for all of the allowed Elasticsearch queries. Specify only one property each time."
    },
    "QueryStringQuery" : {
      "type" : "object",
      "required" : [ "query" ],
      "properties" : {
        "query" : {
          "type" : "string",
          "description" : "The actual query to be parsed."
        },
        "default_field" : {
          "type" : "string",
          "description" : "The default field for query terms if no prefix field is specified."
        },
        "analyzer" : {
          "type" : "string",
          "description" : "The analyzer used to analyze each term of the query when creating composite queries."
        },
        "default_operator" : {
          "type" : "string",
          "description" : "The default operator used if no explicit operator is specified."
        },
        "allow_leading_wildcard" : {
          "type" : "boolean",
          "description" : "When set, * or ? are allowed as the first character. Defaults to false."
        }
      },
      "description" : "A query that uses the `SimpleQueryParser` for parsing."
    },
    "RangeQuery" : {
      "type" : "object",
      "properties" : {
        "gt" : {
          "type" : "object",
          "description" : "Greater-than"
        },
        "gte" : {
          "type" : "object",
          "description" : "Greater-than or equal to"
        },
        "lt" : {
          "type" : "object",
          "description" : "Less-than"
        },
        "lte" : {
          "type" : "object",
          "description" : "Less-than or equal to."
        },
        "boost" : {
          "type" : "number",
          "format" : "float",
          "description" : "An optional boost value to apply to the query."
        },
        "format" : {
          "type" : "string",
          "description" : "Formatted dates will be parsed using the format specified on the date field by default, but it can be overridden by passing the format parameter."
        },
        "time_zone" : {
          "type" : "string",
          "description" : "Dates can be converted from another timezone to UTC either by specifying the time zone in the date value itself (if the format accepts it), or it can be specified as the time_zone parameter."
        }
      },
      "description" : "The query that matches documents with fields that contain terms within a specified range."
    },
    "ReadOnlyRequest" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "Enabled or disabled read-only mode"
        }
      },
      "description" : "Read-only mode request payload"
    },
    "ReadOnlyResponse" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "Whether read-only mode is enabled or disabled"
        }
      },
      "description" : "Read-only mode response"
    },
    "RemoteResourceInfo" : {
      "type" : "object",
      "required" : [ "compatible", "connected", "healthy", "trusted", "trusted_back" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Whether or not the remote cluster is healthy"
        },
        "connected" : {
          "type" : "boolean",
          "description" : "Whether or not there is at least one connection to the remote cluster."
        },
        "compatible" : {
          "type" : "boolean",
          "description" : "Whether or not the remote cluster version is compatible with this cluster version."
        },
        "trusted" : {
          "type" : "boolean",
          "description" : "Whether or not the remote cluster is trusted by this cluster."
        },
        "trusted_back" : {
          "type" : "boolean",
          "description" : "Whether or not the remote cluster trusts this cluster back."
        }
      },
      "description" : "Information about a Remote Cluster."
    },
    "RemoteResourceRef" : {
      "type" : "object",
      "required" : [ "alias", "deployment_id", "elasticsearch_ref_id" ],
      "properties" : {
        "deployment_id" : {
          "type" : "string",
          "description" : "The id of the deployment"
        },
        "elasticsearch_ref_id" : {
          "type" : "string",
          "description" : "The locally-unique user-specified id of an Elasticsearch Resource"
        },
        "alias" : {
          "type" : "string",
          "description" : "The alias for this remote cluster. Aliases must only contain letters, digits, dashes and underscores"
        },
        "skip_unavailable" : {
          "type" : "boolean",
          "description" : "If true, skip this cluster during search if it is disconnected. Default: false"
        },
        "info" : {
          "description" : "Information about a Remote Cluster.",
          "readOnly" : true,
          "$ref" : "#/definitions/RemoteResourceInfo"
        }
      },
      "description" : "The Elasticsearch resource used as a Remote Cluster."
    },
    "RemoteResources" : {
      "type" : "object",
      "required" : [ "resources" ],
      "properties" : {
        "resources" : {
          "type" : "array",
          "description" : "The remote resources",
          "items" : {
            "$ref" : "#/definitions/RemoteResourceRef"
          }
        }
      },
      "description" : "The list of resources used as remote clusters"
    },
    "ReplyWarning" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "A structured code representing the error type that occurred"
        },
        "message" : {
          "type" : "string",
          "description" : "A human readable message describing the warning that occurred"
        }
      }
    },
    "RestoreSnapshotApiConfiguration" : {
      "type" : "object",
      "properties" : {
        "indices" : {
          "type" : "array",
          "description" : "The list of indices to restore (supports +ve and -ve selection and wildcarding - see the default Elasticsearch index format documentation)",
          "items" : {
            "type" : "string"
          }
        },
        "raw_settings" : {
          "type" : "object",
          "description" : "This JSON object (merged with the 'indices' field (if present) is passed untouched into the restore command - see the Elasticsearch '_snapshot' documentation for more details on supported formats"
        }
      },
      "description" : "The configuration for the restore command, such as which indices you want to restore."
    },
    "RestoreSnapshotConfiguration" : {
      "type" : "object",
      "required" : [ "snapshot_name" ],
      "properties" : {
        "repository_name" : {
          "type" : "string",
          "description" : "If specified, contains the name of the snapshot repository - else will default to the Elastic Cloud system repo ('found-snapshots')"
        },
        "snapshot_name" : {
          "type" : "string",
          "description" : "The name of the snapshot to restore. Use '\\_\\_latest_success\\_\\_' to get the most recent snapshot from the specified repository"
        },
        "repository_config" : {
          "description" : "Raw remote snapshot restore settings. Do not send this if you are sending source_cluster_id",
          "$ref" : "#/definitions/RestoreSnapshotRepoConfiguration"
        },
        "restore_payload" : {
          "$ref" : "#/definitions/RestoreSnapshotApiConfiguration"
        },
        "strategy" : {
          "type" : "string",
          "description" : "The restore strategy to use. Defaults to a full restore. Partial restore will attempt to restore unavailable indices only",
          "enum" : [ "partial", "full", "recovery" ]
        },
        "source_cluster_id" : {
          "type" : "string",
          "description" : "If specified, contains the name of the source cluster id. Do not send this if you are sending repository_config"
        }
      },
      "description" : "Restores a snapshot from a local or remote repository."
    },
    "RestoreSnapshotRepoConfiguration" : {
      "type" : "object",
      "properties" : {
        "raw_settings" : {
          "type" : "object",
          "description" : "The remote snapshot settings raw JSON - see the Elasticsearch '_snapshot' documentation for more details on supported formats"
        }
      },
      "description" : "Configures the location of a remote repository. The default is the system repository."
    },
    "RollingGrowShrinkStrategyConfig" : {
      "type" : "object",
      "description" : "A strategy that creates new Elasticsearch instances, Kibana instances, and APM Servers with the new plan, then migrates the node data to minimize the amount of spare capacity."
    },
    "RollingStrategyConfig" : {
      "type" : "object",
      "properties" : {
        "group_by" : {
          "type" : "string",
          "description" : "Specifies the grouping attribute to use when rolling several instances. Instances that share the same value for the provided attribute key are rolled together as a unit. Examples that make sense to use are '\\_\\_all\\_\\_' (roll all instances as a single unit), 'logical_zone_name' (roll instances by zone), '\\_\\_name\\_\\_' (roll one instance at a time, the default if not specified). Note that '\\_\\_all\\_\\_' is required when performing a major version upgrade"
        },
        "allow_inline_resize" : {
          "type" : "boolean",
          "description" : "Whether we allow changing the capacity of instances (default false). This is currently implemented by stopping, re-creating then starting the affected instance on its associated allocator when performing the changes. NOTES: This requires a round-trip through the allocation infrastructure of the active constructor, as it has to reserve the target capacity without over-committing"
        },
        "skip_synced_flush" : {
          "type" : "boolean",
          "description" : "Whether to skip attempting to do a synced flush on the filesystem of the container (default: false), which is less safe but may be required if the container is unhealthy"
        },
        "shard_init_wait_time" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The time, in seconds, to wait for shards that show no progress of initializing before rolling the next group (default: 10 minutes)"
        }
      },
      "description" : "Performs inline, rolling configuration changes that mutate existing containers. TIP: This is the fastest way to update a plan, but can fail for complex plan changes, such as topology changes. Also, this is less safe for configuration changes that leave a cluster in a non running state. NOTE: When you perform a major version upgrade, and 'group_by' is set to 'pass:macros[__all__]';, rolling is required."
    },
    "RulesetAssociations" : {
      "type" : "object",
      "required" : [ "associations", "total_associations" ],
      "properties" : {
        "associations" : {
          "type" : "array",
          "description" : "List of associations",
          "items" : {
            "$ref" : "#/definitions/FilterAssociation"
          }
        },
        "total_associations" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total number of associations. This includes associations the user does not have permission to view."
        }
      },
      "description" : "The configuration settings for the traffic filter."
    },
    "SearchRequest" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The maximum number of search results to return."
        },
        "query" : {
          "$ref" : "#/definitions/QueryContainer"
        },
        "sort" : {
          "type" : "array",
          "description" : "An array of fields to sort the search results by.",
          "items" : {
            "type" : "object"
          }
        }
      },
      "description" : "An Elasticsearch search request with a subset of options."
    },
    "ServiceUrl" : {
      "type" : "object",
      "required" : [ "service", "url" ],
      "properties" : {
        "service" : {
          "type" : "string",
          "description" : "Name of the service"
        },
        "url" : {
          "type" : "string",
          "description" : "The full URL to access the service"
        }
      },
      "description" : "A URL to access the service of a resource"
    },
    "SimplifiedLineItem" : {
      "type" : "object",
      "required" : [ "ecu_balance", "ecu_quantity", "end", "id", "start" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Line Item ID"
        },
        "ecu_quantity" : {
          "type" : "number",
          "format" : "double",
          "description" : "Original Elastic Consumption Unit (ECU) quantity"
        },
        "ecu_balance" : {
          "type" : "number",
          "format" : "double",
          "description" : "Elastic Consumption Unit (ECU) Balance"
        },
        "start" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Start of the line item's validity"
        },
        "end" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Expiration of the line item"
        }
      },
      "description" : "Line Item"
    },
    "SnapshotStatusInfo" : {
      "type" : "object",
      "required" : [ "count", "healthy", "recent_success" ],
      "properties" : {
        "healthy" : {
          "type" : "boolean",
          "description" : "Health status of snapshots for this cluster"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of snapshots stored for this cluster"
        },
        "latest_successful" : {
          "type" : "boolean",
          "description" : "Latest snapshot status"
        },
        "latest_status" : {
          "type" : "string",
          "description" : "Status of the latest snapshot attempt, if any exist."
        },
        "scheduled_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Scheduled time of next snapshot attempt"
        },
        "latest_end_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The end time of the most recently attempted snapshot"
        },
        "latest_successful_end_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The end time of the most recently successful snapshot"
        },
        "recent_success" : {
          "type" : "boolean",
          "description" : "Indicates whether the cluster has a relatively recent successful snapshot."
        }
      },
      "description" : "Information about the snapshot status for the Elasticsearch cluster. For example, the health status."
    },
    "StackVersionApmConfig" : {
      "type" : "object",
      "required" : [ "blacklist", "docker_image" ],
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "Version of APM"
        },
        "docker_image" : {
          "type" : "string",
          "description" : "Docker image for the APM"
        },
        "blacklist" : {
          "type" : "array",
          "description" : "List of configuration options that cannot be overridden by user settings",
          "items" : {
            "type" : "string"
          }
        },
        "settings" : {
          "type" : "object",
          "description" : "Settings that are applied to all nodes of this type"
        },
        "capacity_constraints" : {
          "$ref" : "#/definitions/StackVersionInstanceCapacityConstraint"
        },
        "compatible_node_types" : {
          "type" : "array",
          "description" : "Node types that are compatible with this one",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "The APM Server configuration for an Elastic Stack version."
    },
    "StackVersionAppSearchConfig" : {
      "type" : "object",
      "required" : [ "blacklist", "docker_image" ],
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "Version of AppSearch"
        },
        "docker_image" : {
          "type" : "string",
          "description" : "Docker image for the AppSearch"
        },
        "blacklist" : {
          "type" : "array",
          "description" : "List of configuration options that cannot be overridden by user settings",
          "items" : {
            "type" : "string"
          }
        },
        "settings" : {
          "type" : "object",
          "description" : "Settings that are applied to all nodes of this type"
        },
        "capacity_constraints" : {
          "$ref" : "#/definitions/StackVersionInstanceCapacityConstraint"
        },
        "compatible_node_types" : {
          "type" : "array",
          "description" : "Node types that are compatible with this one",
          "items" : {
            "type" : "string"
          }
        },
        "node_types" : {
          "type" : "array",
          "description" : "Node types that are supported by this stack version",
          "items" : {
            "$ref" : "#/definitions/StackVersionNodeType"
          }
        }
      },
      "description" : "AppSearch related configuration of an Elastic Stack version"
    },
    "StackVersionConfig" : {
      "type" : "object",
      "required" : [ "elasticsearch", "kibana", "template", "upgradable_to" ],
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "Stack version",
          "readOnly" : true
        },
        "template" : {
          "$ref" : "#/definitions/StackVersionTemplateInfo"
        },
        "elasticsearch" : {
          "$ref" : "#/definitions/StackVersionElasticsearchConfig"
        },
        "kibana" : {
          "$ref" : "#/definitions/StackVersionKibanaConfig"
        },
        "apm" : {
          "$ref" : "#/definitions/StackVersionApmConfig"
        },
        "appsearch" : {
          "$ref" : "#/definitions/StackVersionAppSearchConfig"
        },
        "metadata" : {
          "$ref" : "#/definitions/StackVersionMetadata"
        },
        "deleted" : {
          "type" : "boolean",
          "description" : "Identifies that the Elastic Stack version is marked for deletion",
          "readOnly" : true
        },
        "upgradable_to" : {
          "type" : "array",
          "description" : "Stack Versions that this version can upgrade to",
          "items" : {
            "type" : "string"
          }
        },
        "min_upgradable_from" : {
          "type" : "string",
          "example" : "6.7.0",
          "description" : "The minimum version recommended to upgrade this version."
        },
        "whitelisted" : {
          "type" : "boolean",
          "description" : "Whether or not this version is whitelisted. This is only relevant in EC (SaaS) and is not sent in ECE."
        },
        "accessible" : {
          "type" : "boolean",
          "description" : "Whether or not this version is accessible by the calling user. This is only relevant in EC (SaaS) and is not sent in ECE."
        }
      },
      "description" : "The details for an Elastic Stack configuration."
    },
    "StackVersionConfigs" : {
      "type" : "object",
      "required" : [ "stacks" ],
      "properties" : {
        "stacks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StackVersionConfig"
          }
        }
      },
      "description" : "The details for multiple Elastic Stack configurations."
    },
    "StackVersionElasticsearchConfig" : {
      "type" : "object",
      "required" : [ "blacklist", "default_plugins", "docker_image", "plugins" ],
      "properties" : {
        "docker_image" : {
          "type" : "string",
          "description" : "Docker image for the Elasticsearch"
        },
        "plugins" : {
          "type" : "array",
          "description" : "List of available plugins",
          "items" : {
            "type" : "string"
          }
        },
        "default_plugins" : {
          "type" : "array",
          "description" : "List of default plugins",
          "items" : {
            "type" : "string"
          }
        },
        "blacklist" : {
          "type" : "array",
          "description" : "List of configuration options that cannot be overridden by user settings",
          "items" : {
            "type" : "string"
          }
        },
        "node_types" : {
          "type" : "array",
          "description" : "Node types that are supported by this stack version",
          "items" : {
            "$ref" : "#/definitions/StackVersionNodeType"
          }
        },
        "settings" : {
          "type" : "object",
          "description" : "Settings that are applied to all nodes of this type"
        },
        "capacity_constraints" : {
          "$ref" : "#/definitions/StackVersionInstanceCapacityConstraint"
        },
        "compatible_node_types" : {
          "type" : "array",
          "description" : "Node types that are compatible with this one",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "The Elasticsearch configuration for an Elastic Stack version. "
    },
    "StackVersionInstanceCapacityConstraint" : {
      "type" : "object",
      "required" : [ "max", "min" ],
      "properties" : {
        "min" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Min capacity of the instances"
        },
        "max" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Max capacity of the instances"
        }
      },
      "description" : "The Elasticsearch instance, Kibana instance, APM Server capacity constraints for an Elastic Stack node type."
    },
    "StackVersionKibanaConfig" : {
      "type" : "object",
      "required" : [ "blacklist", "docker_image" ],
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "Version of Kibana"
        },
        "docker_image" : {
          "type" : "string",
          "description" : "Docker image for the kibana"
        },
        "blacklist" : {
          "type" : "array",
          "description" : "List of configuration options that cannot be overridden by user settings",
          "items" : {
            "type" : "string"
          }
        },
        "settings" : {
          "type" : "object",
          "description" : "Settings that are applied to all nodes of this type"
        },
        "capacity_constraints" : {
          "$ref" : "#/definitions/StackVersionInstanceCapacityConstraint"
        },
        "compatible_node_types" : {
          "type" : "array",
          "description" : "Node types that are compatible with this one",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "The Kibana configuration for an Elastic Stack version."
    },
    "StackVersionMetadata" : {
      "type" : "object",
      "properties" : {
        "notes" : {
          "type" : "string",
          "description" : "Notes for administrator"
        },
        "pre_release" : {
          "type" : "boolean",
          "description" : "Indicates that the stack pack version is not GA and is not supposed to be used in production"
        },
        "min_platform_version" : {
          "type" : "string",
          "description" : "The minimum version of the platform that the stack pack version is compatible with"
        },
        "min_wire_compatibility_version" : {
          "type" : "string",
          "description" : "The minimum version required for performing a rolling upgrade to this stack version."
        },
        "min_index_compatibility_version" : {
          "type" : "string",
          "description" : "The minimum version required for performing a full cluster restart upgrade to this stack version."
        },
        "schema_version" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The schema version of the stack pack version"
        }
      },
      "description" : "The metadata for the Elastic Stack."
    },
    "StackVersionNodeType" : {
      "type" : "object",
      "required" : [ "description", "name", "node_type" ],
      "properties" : {
        "node_type" : {
          "type" : "string",
          "description" : "Type of the node (master, data, ...)"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the node type"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the node type"
        },
        "settings" : {
          "type" : "object",
          "description" : "Settings that are applied to all nodes of this type"
        },
        "capacity_constraints" : {
          "$ref" : "#/definitions/StackVersionInstanceCapacityConstraint"
        },
        "compatible_node_types" : {
          "type" : "array",
          "description" : "Node types that are compatible with this one",
          "items" : {
            "type" : "string"
          }
        },
        "mandatory" : {
          "type" : "boolean",
          "description" : "Flag to specify a node type is mandatory in a cluster's plan"
        }
      },
      "description" : "The configuration for an Elastic Stack node type."
    },
    "StackVersionTemplateFileHash" : {
      "type" : "object",
      "required" : [ "hash", "path" ],
      "properties" : {
        "path" : {
          "type" : "string",
          "description" : "File path relative to template's root"
        },
        "hash" : {
          "type" : "string",
          "description" : "SHA-256 hash of a file"
        }
      },
      "description" : "The template file hash for an Elastic Stack version."
    },
    "StackVersionTemplateInfo" : {
      "type" : "object",
      "properties" : {
        "template_version" : {
          "type" : "string",
          "description" : "Template version",
          "readOnly" : true
        },
        "hashes" : {
          "type" : "array",
          "description" : "Relative paths of files with SHA-256 hashes that contains the template",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/StackVersionTemplateFileHash"
          }
        }
      },
      "description" : "The template information for an Elastic Stack version."
    },
    "TargetElasticsearchCluster" : {
      "type" : "object",
      "required" : [ "elasticsearch_id" ],
      "properties" : {
        "elasticsearch_id" : {
          "type" : "string",
          "description" : "The Elasticsearch cluster Id"
        },
        "links" : {
          "type" : "object",
          "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation",
          "additionalProperties" : {
            "$ref" : "#/definitions/Hyperlink"
          }
        }
      },
      "description" : "Information about the specified Elasticsearch cluster."
    },
    "TermQuery" : {
      "type" : "object",
      "required" : [ "value" ],
      "properties" : {
        "value" : {
          "type" : "object",
          "description" : "The exact value to query for."
        }
      },
      "description" : "A query for documents that contain the specified term in the inverted index."
    },
    "TopologyElementControl" : {
      "type" : "object",
      "required" : [ "min" ],
      "properties" : {
        "min" : {
          "description" : "Absolute minimum size limit for a topology element created with a deployment template. If the value is 0, that means the topology element can be disabled.",
          "$ref" : "#/definitions/TopologySize"
        }
      },
      "description" : "Controls for the topology element. Only used as part of the deployment template. Ignored if included as part of a deployment."
    },
    "TopologySize" : {
      "type" : "object",
      "required" : [ "resource", "value" ],
      "properties" : {
        "value" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Amount of resource"
        },
        "resource" : {
          "type" : "string",
          "description" : "Type of resource",
          "enum" : [ "memory", "storage" ]
        }
      },
      "description" : "Measured by the amount of a resource. The final cluster size is calculated using multipliers from the topology instance configuration."
    },
    "TrafficFilterEgressRule" : {
      "type" : "object",
      "required" : [ "protocol", "target" ],
      "properties" : {
        "target" : {
          "type" : "string",
          "description" : "Allowed traffic filter egress target: IP address or CIDR mask"
        },
        "ports" : {
          "type" : "array",
          "description" : "A list of target ports for an egress rule",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "protocol" : {
          "type" : "string",
          "description" : "The target protocol for an egress rule",
          "enum" : [ "all", "tcp", "udp" ]
        }
      },
      "description" : "The rule detail for a traffic filter egress rule."
    },
    "TrafficFilterRule" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The rule ID"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the rule"
        },
        "source" : {
          "type" : "string",
          "description" : "Allowed traffic filter source: IP address, CIDR mask, or VPC endpoint ID"
        },
        "azure_endpoint_name" : {
          "type" : "string",
          "description" : "Name of the Azure Private Endpoint to allow connections from"
        },
        "azure_endpoint_guid" : {
          "type" : "string",
          "description" : "Resource GUID of the Azure Private Endpoint to allow connections from"
        },
        "egress_rule" : {
          "description" : "An egress traffic filter rule",
          "$ref" : "#/definitions/TrafficFilterEgressRule"
        }
      },
      "description" : "The container for a traffic filter rule."
    },
    "TrafficFilterRulesetInfo" : {
      "type" : "object",
      "required" : [ "id", "include_by_default", "name", "region", "rules", "type" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The ruleset ID"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the ruleset"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the ruleset"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the ruleset"
        },
        "include_by_default" : {
          "type" : "boolean",
          "description" : "Should the ruleset be automatically included in the new deployments"
        },
        "region" : {
          "type" : "string",
          "description" : "The ruleset can be attached only to deployments in the specific region"
        },
        "rules" : {
          "type" : "array",
          "description" : "List of rules",
          "items" : {
            "$ref" : "#/definitions/TrafficFilterRule"
          }
        },
        "associations" : {
          "type" : "array",
          "description" : "List of associations. Returned only when include_associations query parameter is true",
          "items" : {
            "$ref" : "#/definitions/FilterAssociation"
          }
        },
        "total_associations" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total number of associations. This includes associations the user does not have permission to view.Returned only when include_associations query parameter is true"
        }
      },
      "description" : "The container for a set of traffic filter rules."
    },
    "TrafficFilterRulesetRequest" : {
      "type" : "object",
      "required" : [ "include_by_default", "name", "region", "rules", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the ruleset"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the ruleset"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the ruleset"
        },
        "include_by_default" : {
          "type" : "boolean",
          "description" : "Should the ruleset be automatically included in the new deployments"
        },
        "region" : {
          "type" : "string",
          "description" : "The ruleset can be attached only to deployments in the specific region"
        },
        "rules" : {
          "type" : "array",
          "description" : "List of rules",
          "items" : {
            "$ref" : "#/definitions/TrafficFilterRule"
          }
        }
      },
      "description" : "The specification for traffic filter ruleset."
    },
    "TrafficFilterRulesetResponse" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The new ruleset ID"
        }
      },
      "description" : "The response after you create a new ruleset."
    },
    "TrafficFilterRulesets" : {
      "type" : "object",
      "required" : [ "rulesets" ],
      "properties" : {
        "rulesets" : {
          "type" : "array",
          "description" : "List of traffic filter rules",
          "items" : {
            "$ref" : "#/definitions/TrafficFilterRulesetInfo"
          }
        }
      },
      "description" : "The container for a set of traffic filter rulesets."
    },
    "TrafficFilterSettings" : {
      "type" : "object",
      "required" : [ "rulesets" ],
      "properties" : {
        "rulesets" : {
          "type" : "array",
          "description" : "IDs of the traffic filter rulesets",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "The configuration settings for the traffic filter."
    },
    "TransientApmPlanConfiguration" : {
      "type" : "object",
      "properties" : {
        "strategy" : {
          "$ref" : "#/definitions/PlanStrategy"
        },
        "plan_configuration" : {
          "$ref" : "#/definitions/ApmPlanControlConfiguration"
        }
      },
      "description" : "Defines the configuration parameters that control how the plan is applied. For example, the Elasticsearch cluster topology and APM Server settings."
    },
    "TransientAppSearchPlanConfiguration" : {
      "type" : "object",
      "properties" : {
        "strategy" : {
          "$ref" : "#/definitions/PlanStrategy"
        },
        "plan_configuration" : {
          "$ref" : "#/definitions/AppSearchPlanControlConfiguration"
        }
      },
      "description" : "Defines configuration parameters that control how the plan (ie consisting of the cluster topology and AppSearch settings) is applied"
    },
    "TransientElasticsearchPlanConfiguration" : {
      "type" : "object",
      "properties" : {
        "strategy" : {
          "$ref" : "#/definitions/PlanStrategy"
        },
        "plan_configuration" : {
          "$ref" : "#/definitions/ElasticsearchPlanControlConfiguration"
        },
        "restore_snapshot" : {
          "$ref" : "#/definitions/RestoreSnapshotConfiguration"
        },
        "remote_clusters" : {
          "description" : "The list of resources that will be configured as remote clusters",
          "$ref" : "#/definitions/RemoteResources"
        },
        "cluster_settings_json" : {
          "type" : "object",
          "description" : "If specified, contains transient settings to be applied to an Elasticsearch cluster during changes, default values shown below applied.\nThese can be overridden by specifying them in the map (or null to unset). Additional settings can also be set. Settings will be cleared after the plan has finished. If not specified, no settings will be applied.\nNOTE: These settings are only explicitly cleared for 5.x+ clusters, they must be hand-reset to their defaults in 2.x- (or a cluster reboot will clear them).\n- indices.store.throttle.max_bytes_per_sec: 150Mb\n- indices.recovery.max_bytes_per_sec: 150Mb\n- cluster.routing.allocation.cluster_concurrent_rebalance: 10\n- cluster.routing.allocation.node_initial_primaries_recoveries: 8\n- cluster.routing.allocation.node_concurrent_incoming_recoveries: 8\n"
        }
      },
      "description" : "Defines the configuration parameters that control how the plan is applied. For example, the Elasticsearch cluster topology and Elasticsearch settings."
    },
    "TransientEnterpriseSearchPlanConfiguration" : {
      "type" : "object",
      "properties" : {
        "strategy" : {
          "$ref" : "#/definitions/PlanStrategy"
        },
        "plan_configuration" : {
          "$ref" : "#/definitions/EnterpriseSearchPlanControlConfiguration"
        }
      },
      "description" : "Defines configuration parameters that control how the plan (i.e. consisting of the cluster topology and Enterprise Search settings) is applied"
    },
    "TransientKibanaPlanConfiguration" : {
      "type" : "object",
      "properties" : {
        "strategy" : {
          "$ref" : "#/definitions/PlanStrategy"
        },
        "plan_configuration" : {
          "$ref" : "#/definitions/KibanaPlanControlConfiguration"
        }
      },
      "description" : "Defines the configuration parameters that control how the plan is applied. For example, the Elasticsearch cluster topology and Kibana instance settings."
    },
    "UpdateExtensionRequest" : {
      "type" : "object",
      "required" : [ "extension_type", "name", "version" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The extension name."
        },
        "description" : {
          "type" : "string",
          "description" : "The extension description."
        },
        "download_url" : {
          "type" : "string",
          "description" : "The URL to download the extension archive."
        },
        "extension_type" : {
          "type" : "string",
          "description" : "The extension type.",
          "enum" : [ "plugin", "bundle" ]
        },
        "version" : {
          "type" : "string",
          "description" : "The Elasticsearch version."
        }
      },
      "description" : "The body of a request to update an extension"
    },
    "Updates" : {
      "type" : "object",
      "properties" : {
        "elasticsearch" : {
          "type" : "array",
          "description" : "Diagnostics for Elasticsearch clusters",
          "items" : {
            "$ref" : "#/definitions/Elasticsearch"
          }
        },
        "kibana" : {
          "type" : "array",
          "description" : "Diagnostics for Kibanas",
          "items" : {
            "$ref" : "#/definitions/Kibana"
          }
        },
        "apm" : {
          "type" : "array",
          "description" : "Diagnostics for APMs",
          "items" : {
            "$ref" : "#/definitions/Apm"
          }
        },
        "appsearch" : {
          "type" : "array",
          "description" : "Diagnostics for AppSearches",
          "items" : {
            "$ref" : "#/definitions/AppSearch"
          }
        },
        "enterprise_search" : {
          "type" : "array",
          "description" : "Diagnostics for Enterprise Search resources",
          "items" : {
            "$ref" : "#/definitions/EnterpriseSearch"
          }
        }
      },
      "description" : "Holds diagnostics for existing resources that might be updated"
    }
  },
  "x-elastic" : {
    "curl" : {
      "auth" : "-H \"Authorization: ApiKey $EC_API_KEY\""
    }
  }
}